%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: example.dvi
%%CreationDate: Thu May 24 17:17:35 2018
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: NimbusMonL-Regu NimbusSanL-Bold NimbusSanL-Regu
%%+ LMSans12-Regular LMRoman12-Bold LMRoman10-Regular LMRoman10-Bold
%%+ LMRoman17-Regular LMMathSymbols10-Regular LMRoman10-Italic
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o example.ps example.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.05.24:1717
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end
 
@fedspecial end
%%BeginFont: LMRoman10-Italic
%!PS-AdobeFont-1.0: LMRoman10-Italic 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Italic known{/LMRoman10-Italic findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Italic)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-458 -290 1386 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B30E8002A140BB230DF
940316C3A88DBAFEF249FA61B55B4B56C598D4266E12F7B0F006143F55F46681
A0E76FE1183A772016AF636A2B3034E12B12BBEB3C227DCEBB83986A004EBE89
2D913439F0E10163A557CA6657B435E52611E8404129383B1A6857EC4B4926FB
C6A2E74782F935A3FB0FDB05CB18FD8BCF8F1AAFAB72C03340EA56DF72DB59F2
1B103ADCC57B872E7AC079964DEDC0D0BA062E3909C7D7EA8407C5D92051EA96
76AE0F81896E3D4085CF47415EC18153AB906BFFC46DEDFC1CDC2ECDA3D07871
97F6B4A4B8935DAE4A24CF479E5F93A4D1C80CBF61ACAFAC97F4CB46501B7530
44421E3D88841F613D42612F738101469C10D7D537B0D4D39296A9AB3F132DA9
A3B459B0F850E2811A6A83947BD5840C06145EB2FB2F57809E120B983B414233
98E4973496CBD3ADA7B5AE09498C870396FAFBF91AE0ADB8695D003366F550E5
F5FF65E7D0109CCCCAB8C9822B2C46C3821C06EBF5FD03C11BE7C7C2DEA6D331
1306D1F3DF31BF4BA9D145448CCD5CE52177724C3C7A1B01D39848BAFBD45097
2F94109C077B406B8E33B274AD9FCEBEF0812AA149D3D37F02C28000206742E4
3D4297F0974755443E95B9967D2F3E5CFEF77E1BE7FF33FD7FB8B81465057DC2
2989D3ACF41AB2FDA0FEBAAADEC2A0730692B12652C2BB9F6E96601B1A789BE0
415F85CB8A653CDBAB242410D8AD167644497CD90BD0962D625F267AE2F88DF5
4D24666D0E11A19B0B169E1B130678D6AA963FDCAD53908D5B476BC8A568B56A
A17A718F13C71D70F35947F9268EF5D89E26850F4BC9BC2AB1BF8609D3A64D1C
43BBB187FC37B4DF600B1126F59D266F3957F3BF373448D14C24BB0AFFD92B76
CDBE1E10B3FC037552ED74045C08871D70C0C42D4A1026001EBE0BBD0D9D3FC0
0A5FDABCF029A45C23311338A2BF06BF5B745E117F0AE99E24AFE7490FEFC3FB
321996E0CA919B90DDBBBC078997A22C38BE53FA8BC1B82075C60AA9BC90C1C9
65993AE8B5E67134A8EFD25D343882C52056406C74CE152AE8FD1D175A31BF26
9CC8B8944136A1416B7757835F33BDEBAC1DBF0DB0CAD72BE7F89D1FA87D6127
BA154DA5A6D2B21C7CB4953E9327FB8671DC9F1B6ECB2EC7EE483531E3DF9E43
7EDDC84D3300202FAB288B259F66EB0C038B7D8B27F4F7C38152DA118698B1F3
280F90A2FAF82D4125EA3FA457A2B1C23BCF60F05E76FDB386C31B35A7C9DFC6
A988904E5D783537D2B57CEFE23ABACEC756F5D1EA5DA93004CE2C9768561BF1
201B86813C6B89EA16AE11D39DBD4BE29E699D9E44B7A6E99ACE99DB14455BC6
ECA1BA3C7EE4290F0D898BB3E404CCAA91FEA4EC2FBB3A7349CE7BAC7CD903D0
AAFEEB0DD8B306E7A79BFB3620929FFD88F15A1BAE76C6EEFC79C130434E6066
038F7A17D436BF9B87FEED4792659E7EBA466964C7134AD5D0447045AF93358A
CF5DE07C87C7C94DED51FED4CCD2D249ECF4B22B21842C8F86DB2D05311C167C
F5BFE161C8612D66A783164ECEA734E43C24EF1C411A4F04267EFF030EF48F8A
72C42BA53B144B8222E82DFAE6D7CBDB0C2F268BB8BFFF2897D515673E4D17D8
832E0E2EE836DB259FEC75B3179FBFA7AECE74EE30AE2C787714B977DF80B7FA
EEBCCBA265C64EA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E8EC3CE112441BB
2A5F77E281FF269C4EECE035BB6FFA507203F64797942F9227920CAAD43D1B48
EC23887DF281EDC3A2249FE4068D529E201B45DD4739C514452FE0BC6B364751
54CACD25A07C74FEAA2928802611B73C375EB881D56F270E8C77CDA90EC7FAD6
46EC17D356E6174C5C555DAD5EEEB9110AE468D1CC587A732C65EB7C738A7D57
3E2345E735B39F7B01398298382D820918B52AE133CC3977DD3448946BD058A0
C86C7B21DFE775C4064934FB530B35AD9155EF03D074AB55333A68A6510AD6BD
87E9BD0F7E93A67159F5E75761299DEC7BD65B80885F9C3574339A61253C3234
BF4E1B89BE65DE7B0CB4DACDAE1FC4F892A2F092A3E45B066E9EE705C681971C
9CA65FDEA97EBFFC01B4B0E381FAA7A0837A0DD1EAD10B0A7A3F70DB740709CF
3201649E488A00C554429F72F81976F8106FC0C276C819700733331432ED8C17
CB4DB47FA3AA70DF55B9B5E0817E08C6A760677CFAF1D482656CB75CF243EEB4
2103985613A5D63DE54712890CFBABE41E2167A6AE54D5DC1BE1810AE5AD8646
CAC4CEE0D417E875D900A39BF8F1E840D5695D70DC4C97884A824855D271FC5E
3C8409D32BEA2B29BD1A08E9B95F964FF6314E7D83013F420403409EFA81F6B5
E80114385D6B52E2CD28E7174BA0E2792D227EDD82ABDD138A2812AC5E2C6030
4078961DE665ABEDA47B214C73AF9982B447F071FFA8CAC2FD1A29623CB12869
FF3B4A25D1A21EC9B9C92D1FD382151CA37EA407BC8C9B9034EB7994DF1AAA37
9A62EDFB1378A82FA82511BF1887387A293593F166C33ADE345C6AB91921B93E
22698328AB963A6A621DF565C08EC5B4DE3CADBB53CC6A863D331500AD49D0A8
5D7764EBB31166A29307F6343DCA5AE98099FD0DF79B13EB5D68B45BDF736A27
654BC2ED09432B072E91F7CB647E1131C0CEE91162DA66C9C1C9B5039A0A01DF
B009FB8D31F7D6F5ABD046FCD1E586824EB69F42B4D0A858F8A3B763760ED716
A24400838780CF5A5C4187AA81C5BA8892EF2FA9F87A6A97405F04DD36950A8F
3D2E430290A40947B84A0D64CB893FD0BAD0C669DE20FF823A10E4EB9325DA08
07D0B3882CFBE4C835B057D5953BA549C0742D661C8D6BA1F78EB952AE750CFD
0800ED2EAA1DF4D0E3D7D524C71285ADE3F3BECE695865AE896BF66C01AA5D9E
328841C2F43E7C78FC37793E289C5BF316ED4E29AEA8A7E77A814F1C9A41FF19
200574EBB1CF10C7A0DA7318457F729D1D7DABAC284BA604101FEEB299394539
17E30E05197AA0700E58348E7EF2198C005568E9DB85B2A0D87AA2DC26393100
A975858A4445ED454DF0B009FEC9F8CA76F8684DCA5D86A25E591E0531A442F6
3B6D86590198C59574E50376F60BD85C374F605A05FC7CBFB86718C5FCFF91FA
D2AA17E3A97F8C922BBBBE2DB63A18F1EAE7CAAC0539035081D3C4E787A2615D
DC9B82074D8BD9BF9662C614569978F12A7A34A912BC2CE3D2B8F62301C4F48B
A7137FECA0E57C7BDCB701639BCA947ED76BC2ED86B7806DFAD1307E2178523F
2617B1C3DA8BD0E84C9038E62266525677BF031260CEFBADE0741094CFBCF1F6
60E8262CD10AA45C67562303483314B5B217204322929D8632C4BD136C89169D
45718A88BAB871F107191BD84EACA3B6BB0E0B6F65BE4FFEC8131CA40AD03B93
B95EDED4942299DD2D597DA586B08EA63C2BB8C4C6C486658937E8112E748EAD
C04EF190B6373D0CEE6B46717FC30E8A5A052F4D53D6124E3F3267EDBDAE35B3
3854E54D6AA330B97BFB4A6AA66A805ACF593CD86F510C5A45FE6953D18AD1C2
573314AF568A69608A9B38259F4CABCEF26223D6A85D674BF2801F66CF957CD9
DDFC74A51E14618530BACF47165362C1E0F6B93CCEBD0545DD39B21ED0549BAD
624D9A1762B670A9A506C02981DDDC2C2EB4489007C555A6A08B437AFCF723A8
F721B06D81B98CE96563219F82D9EEAFC6F78AF8033A68854CDE2082D0D84D0E
0B99B789736594D7F6C77E24976F98914EBA348614E3850F73A8B2C5B0AADF8A
F3E1C7962C18AFD70D490F20A4305479A29C6F7C69451729FB39B7EC4AD83080
5823B738044BA1025DCE099BFF8EB5CCCCD5FD1F4EFDE44CD22214DD1C4B36E9
D26EBC36135D9BD2741BD5A40FB00BA9C014DA2144FBECED2140DC00FD5F6F17
25AE16D44B8FE84C3E122D4628BDA07459F115741BF4FAE80E86C1DA16AD5995
84A5641530351D74405DEF39A01E9C18183C34B5BC8F8679DF343075F34F63C2
58AA0F1E42E9C4C5BEDB9264C2CAF198CEB491BAD552FD0CA912D7A12E6590B4
F292CCD22851666B910BEC1F0B5A22E5745FE8EF4CA006EDDA69B74D0767754D
EA6F41B19956444E02C7B1C4BF5D498496818C244467171449C73BABBAB53F48
99B7F0B15679BFA992CA2D8945B38A4BF8B7E599354F8E1C6DA46569FBD54C4E
EFD5C1CFDB30B78F38C77D37191FCD50EFE1EDDF114903155F14A3D27477386B
661BB3BC2DD1B7C4E962FE33D75FFDF7F4302834506D4708928B0919E9E6D978
37356B4B1F29D4B0F67C8A8643289F60AD51C07117D7D6D347CC1C09DE58642C
B032622E0961C1D7512AB6E16FAB0A633BD4BC90EBEBBBAAEA6708C225DCC4E6
13533B4095750C44CDBFCCCAD7FE46D931820463541489F56666025C854B2853
3F3D64DEFAD5F18C352848F0D8B554898FE557F69574567035ACECBD460ED06A
7A6CF2401C8E0965B02D39CCDEE8A4F5B8BF91FE739A2B43BFA2363CA74FA726
68FC761D1A17B9C3C0C82D559E0F0BA59CCCFB9D76F547735EE0F40D261B2658
7C15388CC763B7B0E6C116B3C87E992DE617DE4BC94E95B19DFAC99E611405A2
8A8E35244CCC8904BD693E1516AEBCF33F072CCD073AC15C48C5F0EACE9F97B5
99A0BA59945F0D1E677AF88B804A02E9BA9C877122742F54A338E60FB97E9B4C
0A2D50833E3CE505A453E6855903C7FA4A9154690E3F2ED8BD1AF09AC4E8A0BD
65C686777A006F96E819D05B97F30674951C27062E320652710A52631CCF8BEF
92621606CE2CFA8C707E2BD307DCFC5A30B447F5378B37F05D535E6759C193D4
4CE020735BC7214A8BD4A0ACDBCB32850EAE125EAA7F5977208DAF1C0D82231A
371B2A470A2AF01F683AAA25B2BB4411BE39D43EA0AF466FA5B60AC4490AA5DB
18A649C442A3FCC239ADC11FA69DDC5020CC3C14EACE61BCE6EC7A9C5D4B7E87
6D3A2E7E499D9D4104762FD19BA0526D38D1F2E2B6F84B7EB6D57CDE9993D2AD
4F956BCABA7F2570525BD5DF61139650117E65779D80FA5DF0DE22F7D2CCD2E5
C8223427699086BB41DC31C235D20B206326C7E4FB45D8A2DFF5E734EA2DE6F8
CD4225EB94D4436925DFE297FC5B844EB07E3B4B780EEFD83C7D15DDD74AC44D
1BC4320F3DEFED7E037FD3F259D95A32C4DF2AC0887216CFE2728FD062DED1FC
4552C0B714EEE9BF2B469ECAA83D75966AEB09E1E21DCC69BE4D9266BEB96447
31BDA7641D3DC3022206061E0250B09A05CF198DF82D4F2C25C4A3A1A1BE80ED
8FF0A9C509420006D2229CC525B1303B992191A5A26154CE54AFD9DB3C8E9EED
4DDD03EF86B5DB0AFA4ABCFE7B8384113825650D8A62496EAB5C6A060350B032
19CECFCCA1D3C1D0FE8A4F802753BFF9FEFECB8EE7E0A553ED1C167611B98529
389D46C775EDBA30E5D617A93CDA0960657CC231C6F1D98278F2222C7CFE0B8B
DD86421400B49D57E5AE8FDDED5D706EEBED8E29E27C86BFD7AE2B988A390BEB
352917E28C85B868EA8E3C4FCA7B685CB9BBF818D140C7D6C640672801A4511E
2B0891085C832DD6168B66730146AA187789211F17E013D71837FB78CD002E65
B96BFDE4A362D5BD17C3E49D939A0EF5F13443A9150F35AAC5623BCBAF6CC5D1
8426653EB4F5907252F9558E03636F6D26F927CBE82A3307EA49C7DA55875A3C
CD94F522EDFCAE0CBDD9C92E42095EBEC25E048C243CC216AD82933080F74E7F
F4F766B79FEAFAFA01CFE20B5876AAE7AF8BB5042264B6E888032D143CCB198C
29181CD9F32DF23C0D90F33ADFA1404AF95F7E0B679C0D5FE02E0CF9AA456288
44A54276F3A3507112C6D45939C9425C116B70C4970DF70D9812610B1660E8AE
443837A2E5276E15E31A9CC66B827E1CBA535B7928025D403D9518B481FEDCBD
97BA059584785DCAF3919739DB56F4522D02299507F5DF31CA0AF4D3EFFFE394
B2F244857BC11010DF42404EA144611BC1DD02B470C08103526C7DFF028D788D
F5373AC68A0B8A8B633BCA6BC0754BAD59DF4558D2D608FAF16668DAEAC6BC11
535CA6FDE68672554A6F9B04AF1E6B513BF95DD8E1C5EC73FC181CA0042E22BF
C1725BA2C696CD7D58D8EC3E0B4EE55C975CF75029C5EEA309C7949989491D82
EB5643D23196B59C4A11C5BEEEABF1FCA0E3E26DB608824C418C9D3B15FB9ED1
330AB93E9A8D466EDF09418B0D6FE40B6E071D6710FD81A5C59D0F9224DA14A9
0F143040C04ED9FC46A680DE6AD3D0BBF5EF644A3A2A34D126D0B569A39A76F2
0005556CEDC60F34696E4E343C02F44C9AE689217F8AFC3C8B2FF2B5B3BF7010
7E8470CAB113DE2AB97E812ED01D493DFFA19627714BFAED377C90F6BCAD3CA1
662E388C10ECB3E45AA588DA0314A40DEEB761383D30BCBCD127C4864C639BD5
22FCE356F1A4108019E9337195B673F163AD2F4DF1A534571C9B9EB80B567455
FA3EF0226BCC59D1864FC6B77978DB1A3AD992BFDDAC45CC9D12BDF11B200054
1538A9ACE8B2B65E389A12CE20BF3FFD6F740B37641955D4E6D93AC5E0ECDCCC
576EA34C10A2A72F44EEE0DBC960F8AFCF034D24B3106987CD497CD5FB746FFB
CB89406082D22727DA6D6C35AD0D8F47D1DA5B7276BE66B9309045BA8C21F57D
0976F5BD583A0288C1874BE8C43083CAD2C58319987C4D89484EE18FCCE66888
6402A5AFC4D52F31FFAC93832B0AE9E56684FA153F702D49F86D30E3F61CA1B7
F32FA662599E0B778BD59B95C3C1CDD3CD216DE0CEE1D46A1F2B023328E14ADA
F0B4FD4DB0680644288B33C23735BFE4D6764AC0BBF28C872B1B1A07372C790F
8B6293D8A22BD90DD95E3E76A820BFB154E26C3C7A73A6D26A1A1D569F057134
27587ADA24CA1A889156AF33655366F939C35801323BDDDE35F87E5D1546AFFC
9FC73F3ED5BDD8481A9068E5D2866F17BA5EDBC6DB31F172FE59819301009679
04DC5B849C04DE70E53585ABD4261196DA12C8E1792E00A603557F5F330F8DE9
79DE1973844CA64C04C7D691EE8924AB0083FAC396855D1032A71C54D20FFE14
300AADFBD05B9DB6C1E1D38DF045EE3ECB351A7B3AEA43770A6B48795D0E7DD2
62CD5FDED95326D2F19BE31AD5366B52C124E025FA1A2BBE0E8478945588C309
3E88CC879E9F6CF1AA265DC072AA028A5C07DFFB52E66ACD6CE0CAD412C0836B
EDEFF4B034334749727591EBE7CDECE985130BCBF41D9687F2A4DB4322167E43
F33FE66B568951BAF9264DD03B58C3D28ACCDC4EEBCAAC4AF9AAD5CA36105D23
1ED7BA842F8A709A705884E76A55DFFBDD52F0F673046FBD0645058D66844C01
8B181DED631B1BFFD7759292EDFE7B0282CC55B4B5C5FB9E6747CF680C629644
FC3BD666695D343131539AF413FEA28DF874C20EDE6D2BE219B6943439B1B79B
EDFF4ED16B248BBE67AF8B291BF7FABDA8E13C3C2BF3E5686092C22F3B058877
8CE7E6B8BEA9CF9579D1EFC49978E179C9CD6222EFAB776A0402C9D8B8BFBE8D
380ABE4CDDF522208CC48E4E295880CB5C8E5BCA4C2F27DF338EDCBC2F151F2A
724995D776CDD1D49B3BAA9BB74F362435515234C0F85068CE21B819F405BC4E
7837E1E094A206AB38F9BA8D96DCB62B38A3FB6EF1FF3ACA3F769EF703936D4C
93E5ACF024D0B8BE72674DA812D29B82EBCE555D85A2642C71873A4169845A97
81229CCC8DFFFAA3FAEE9F3AA4120C22770602BADDFF38FFCEC6660E7F4B8FAC
73DCAA27009437DCE711D101C0725A250AFEB19760BB319EDAB44537319E476C
0526996DE14B71D3309CE3001B92D3DC13BBCD7B2C7E8C8D6203CE8C0AB6B448
078A968442546AF52646171D99041DDA3C55CE80BA328E8CBAF254DEB0D20271
EBA9A9CB9DCE747E296F7E71603ABC28CFDC81E41B8AB1123729DF3D047F8C04
BFBE2D5010F0F59A79448D44E92E5A691F651E0B0956824CBE7F262EDB903156
92D6BE294BCEEA64B7B3BFDC1BC9F7DC3454CB6EA8CAB5AA5ADDCA2FEABB7964
15085A0DDC07E68E33B5A3213250E4B49D16F7F31113D7BF4D529CBB196CF708
10327E472F8E76C5AE5BC7649245708D1256A60BD524E84803DA3CCC1445B9FA
27AEE5F705B08E346DFE094443B7855E10A69C9EDF999930A309DA61A95F14BC
8270A09B86AC80474E97B09C839C8B47734E2253A6CB634DBE6BE051B0ECCC8C
6CA5B449EF92B9A3A043CF0EA03ADE8B6B0671103CE888EBB083D9FBCF7CF5CC
6330E2FADCEA2EA910235207ABAF64AC142CA2C471FA4BF4B71D3CB4C54BF4D7
9EE69FC1C3496F2C2F64B1BD48709586712259874C5EDFB7FB54F28F60F04AEB
9D6D9B8E1C51D66258F22C426939364286F802D20C81934F7C987AB5F1B327E4
3E8D32AC9F94ABF84882C919A48801C0BC7753638A95F165320E261E2D45C0D2
7D21F892B9AE92E8480F5B8A2AB1B87BFBE2FDDFCB905ED833E2A2EC5E9FDA64
1FBD4D0508C69620BDDBCBA292B820EFA34754C4601ECD4866CC696CDA8E5584
70FFBBBC60BD2F8005C1FD27141A95522AF900E12AB6F607D2703BFAADC46204
6996A949434A8589628ED0B31723FF9B9ADACF4F11D61898437C68066F4A4044
FEDF7485549DC0BA82AAA84D6EC4868CD2EF676C36B0FE4F79E66CEA61E066AD
F14E6DAE72B96B84A8AFD0370475D91DFFC91AE54C3B51D791AE17AE2590942C
6F7A5AEEBE3332331CB51941B8116549A8895CEB24C16D0C0183B6A85D81BF4E
CF41D470B4752099093E803719F37B04FE98F9BB06F15BC1D8C9D6D0CD5D2112
E14E377BC8EB798A3660EC6E5864D97D1ED1838CB94DDAEDA2245C7642D19135
55EA104F815E80B39AC00F7086BCB4B36C35CF2E4A42B114C56E7434ED807D5E
58831A67F62EECC1B69AAC2294A0A9FE09E93A932C2779C3B008AF46AFF74781
F045E3D3F222A3C89E877948CA4CF92F1BB9E3825B748C865593B80B6F449686
339482AA1837850FE2D62A37076A214FF179016ADE17A52A09061F578841058F
3FAE9DDA4237FE8DEC59778468EB18BA4DD295682F10CF91528663B0E0FB1C37
62FB76FDA25DE4DB5DEAF0D45E5E0840A7D605F31929AF42D010944CA127327C
C192C0E445665395545A7CD78F889516DBE855596BD36DC3E739E165C57AF710
428854DC75B15C80228FE1407367F1C32DC7FA42979053F02F561B7FB060794C
18ED88CF5FFFA0C6FE23178C2F79935A5201EFFFC8C6C36C3174F4A5753520F8
D5664077FD9EADFC6B1740296577D08565EF56C226B6AAB8A8434032F369EDDB
FF600A9BD8F6E4576AC4E674FBC9B7866F465836C42D6111A72E6373BC845011
2D6E3AD173301529E23A9722642820FC1EB7F30A18D69C46649DDF9645E40C1B
F600427C11D65BD657AF3F4CB0B2161FA06E637F38F5A14EB6970B5D459AD84B
5E82713D57DA8503A870471175B60D03A9D5D900EA12D7E095B72419E86FE8BB
5582DD68F241A9585444C8B1028BCD66FD2B59C873A929DDD8408B2E1E7C1C52
867C585D114420A54F86B2C43C1573FC179A48E16CAAFE5F0885CAA28CE5851F
76DADA3F54A37F3BCD8E517C5630555E146F98AB78E54A424DF9218B268B5B01
D7FFF795505533AA70E6463DB777C8B20758DB43294B7A253824BB506D6BDB8F
4C13A88F02D71B4D039ECCB4487CC604ED016FC468EF4842B24BBBE788FD5182
D29948154AB7553C90B4F7FB949D5B76D9FD90B87DE538DD5DB3363681A6388A
5C48C8F2B1AF54928F61C78F5A00B528C5F517C2D2C001F65233BE04DC0BF44B
D4BE3CB00365EB6A3918611140B3369C07F94061DBED801E3C16EF692E9BACBC
0B0C1B032348B0CF1B10327CCF9FD11CA252545A0CC9253511A61571A77EBAF3
A906084A5825E38B85BC954063716781B816BBF3D9BD0C1A50658E3233004660
A754E5036408F66D830E3429F50EF931A534DCCE1D9B58958A4317BD0B5437E2
29E24957F4EAEB3678FC31EA7E4FD3173F2383893841BDF6F4710B871CD89B16
1E015DD066F7ABCA935486F04D17BE7FF0A4031D50BEB01E58349E0F8D0AF37D
8983D550C3AEDE8390BDDEDA7998CB86C01A6E5C553E8D2B33BCB7C44A458E55
131F71F274D4324923E98FD2AD086D3E9E9CBAB788AE3FD93AC6C64FCE57F1D7
BAA2E6575357E08A1A5879A7CBCCC9236D6D8040C78F6D92FA152E85A0A17DE3
233BA7E3FD4005E7905CDFB7B5C88E11A6D16DAEF54E30C70C81BC7540B82757
0C0613805EEACD2305F649BB004B7407AE883EE96B2439ABB41D3574CC86B677
3500BD57853CF2711BE91DBCB0E11F9B4BD1E3B9C35FD1286AA0F85FD64CF219
1ED663BE4CEC9E499BFB642BF268D53A04DFC989CF1D5B59426B667C6D66DB86
4C97582A155AB9928B3E0676CC131BBB42EEB954D8DDD3E0EA1BC88E52309919
6F039EB567BFB06BBC27248247687682311E1F884E50CC3CD25E9119FD1EA2DF
AAA281E4E34420D1FDC40E678BC42FB3835475F09A8B68B51835BB1246CCF238
F394F8BD72279BC3B0D28DCADC2804610E4F730DAF2F2D5AB767C320C62543E2
66E55493C35B2D84985090CA164DF0AAE5DF997D62692FFF0321D8101ED47F36
A3678F407275464DFBE5AA7D890CBA76D05C12301556F56D22BFDB9912882ED7
CBFDA1C52764753C9C9FC384314FF4D2A3CFB99EB8B55935780461C07D4CED8C
33C043AC2747759CA7CD47D6237EB8EB039AB399DF1B4F1395D03A2605963E8E
060B5DB18DC0B55088CE76B4CFBE83DED1E68AEB80E24653021A18EBEF934C1B
44EC65B246CBD192FC4F8E45CA38AAA15C4F9CAD1EF894AB430FB9FEA10A54AF
635B42A37B705031A598379133242BDA99CBB94EBD0D60EAAEB9B5E95A38E774
262AC35FC183FD217FA4E709AFFD64AF10EA89442F10EC07F25D69E03079B261
79F2A72599892F0F7E9A783D28BAC550C282E77B26DAC4E021938BF5DCBE4998
CD99E936A13CB86465E5830F30896D20EF19464F533CA36B307626650009248C
3DA11A7496B6DCCA41389083EA093054D17A94570E938F2F8D12BBB2C95762A6
EEC9B1B687C6C53854752007CA35080153C7260C270DD01F9CE9273D9EE9F4D4
72E53D46FDE514F090CB672EE6731C1046A3966987561BE1B09CDECBF04EE3EB
CB56DCAAA53707F45974E2470732F4B22A82D47F6CF51D569DD2B7F8EDD8AA1A
7AF5B8B1A634B4599ADD700B76238ED79AEA127DC37306DA7B1C959D7D195745
B4DF6D80192C278765688385ADEDEB21109414C1615E41C6952F8ADF3C605E15
B4904E2D7C8E3B330F1AAA69E59FB968CD8FB0ADB47D7DA375384CAC0A926A7F
4675D4DD33876C1A6331AE6AC68762389465A741975B91959990AE380369A627
FAE31AB74E3316395AF12E11C8B6F19AAE4E8EED1396E674046AF9072061D8CE
14E799612470027902BA03750B00705DBC575770E910734103AE097D9098686C
C524640D6A5392F677F695CB7207E8FA327AB02F2AA3FAE59897159DF0A06A08
C7EB8A4E9B95DBDBF2547B6CCEB7DBE7058EFA113DBDA36FA55F99EE99AAFC1A
4965F05C1281598661E7B3514429FF1591E4D18BF9B3F3E0842FD86704621641
10F3599D8E6CB9E93D141668D361EB443CA6CF50520BBE0ABFCD9878FD7160F8
660B49C1EBD4BFF4B0E7736488A1A0F45C2285C8FD0133EFBC14E0B873FAD39A
FA16D6D02D6781B08C5FA4BAD286389CF14F33E0921967B8E65116A0E1ECCDF8
1CD68250762B099FC9A0BC024385D3ADEF7018BADB461EADA8C4D0820D0B5228
C5B1CB405A103CDA6B0AE215734B8D18F33635946624361977E8714BC5A964FA
EAF5D640E0AEAA7CA0DD46861561B9E275C24F9DCAF74FB547884734801FD4F6
06F9606D48507742F272D3680157AB1B84AB6B368CDB6629B3502665151E1E1B
EDD157BDA413C6A3F39F7C8A8C6D321CA8C9DFFDD8052B5AF95FEBC160B0436A
5C7EBB5C8FEA846EC08A76EA5C2013159AF0DCBC23A1326CA9BAD5FC5850647B
69591D9E515B2B8E0FB1B4930690AF29215EF4EC9ECA9A83CD4C51B79847F11C
DD1C42F23986FED7C3A19AB031D5B8B165C0E61CA80C2302800FE88EF483F40A
F03BBE3A6C7F60020819C632C107657BE632F7B53D611FCA5732174C3B7F3104
D0BE1357DA471207E56CE680F1F378003A06C387FDEFC8F90F4410717205F7A0
21D485A59118BCBFB2454775682D6E3A26AD226C57DC4B7603038D6D6A974207
D8E993230AE24A159DC86EC70E6111D33E554258286BD901CF57E14A8AAE6120
3207AB182C64C0927501C307F76E029008B8C90078C2C69F37CB51FDB9BFCA24
4796FD4CE8EEA37E97775FC54D2E9C0ED3BCC0FECACE661F4859367D4ED38816
29B1F2D32C9ADF339041506E5A4C89B45A17FBE6A62DE10EC3321CF7479E4280
2B68587DC2CBA0C75E1C714A7307C05685F230FD369CB4643472348516885C3F
F77FAF6B4D09E6F5183D5C8804DFCB9C76EDFF110AD9468A0E40199D5B2D53EF
2921E8BE24A1592F6A0B472AA97B877C5E13AB2F720FC5142AF5CEAAD07B020D
3CCBFC275E70E8CDF84D69BD5B50DB0379832507E2D44391785BDA30A21C492E
3CB877FE38C58A7F5468AF52FFC11B8C02B959E06F9127A02595BD123E8C062B
7DD2F01A524D75C8CF6FAE2444C2E073A55ACA08E43514EE52A4D0CFDB2C936E
2E4FA5109460856AA10D068B74602BD0319370611220219CCC8F04F6544E9EA2
34CA47968C4DCCF9442A958487676879675B53F83C5951737858611E77F9E2D6
FE76A2336E12D087555BECD945388FC4CE057DF98D3F56CD96B935DE77EEBEEB
30B4FB08FEC873EADCD81E5C9EE0C2C1EFF54104A45879576483E96C1DE90EF7
21FBF1F6C1F44FB0118252A23546EF4418738B957C21F9F65A1E0E9927639247
2EF7838995D168AFCEB7900B738568405CABB6D4897C0B817ACF20B843EC2992
8D03A37B9CC0E934542F3EB19A236680E2242BB78EF5983D61AB19ACEDBD7E6A
11D094BC943E0DA88D0E7A06A2A1EA29723606B456D4B8108FEC439B48E96536
43CCEFCF57E2990F193EEFE8461B9E242ED9B72E0057E8276FD8ACA2319A4A7A
CC016E54215D777509BCD61A1F76204E072EA16F4F3DE9F43784531D9031C5F2
EED18322727A7A91CECBB88857B1B895D7A148346FADAB4369A042A9E5936C29
BC51B4CD176F51956D0957EB2074C5F64C7273311F5EF4154E828AD93457D17C
81740DAFE000798A2787814333C50AA8291738EA2FF5AA6FA28A2B5FB965B061
7D509278ED682E33F273187BA4F0FDCA8E8916A910144F36F6353E66B5892AB5
B28FDAB25FCA32B58CA307F36F3BF9B9C265CCB405EE4B23305630FE48E33DEB
C722BDC296F27D969CF08B1EB63E433EF10848A2B55E4B5D8DE8A9284258301C
DF2F71D5AB254F2B8D902F573C38FF3EA4A5116765EAC60DBD6CAE9AC300CB2F
D3CFEEB913C2304E8E3F193C9BD85780BAD7860C7FC67DA24C18A439A4FCEADA
E576C7D719289DAD8D7AFD63ECD77F004F7DC1CCC96ADE0D02904BF3E689B2B2
65EE6FF5C858974FD7D79D149475724B4BC3DBF0E353E40D6A723B725A6CE7B3
E84D4F63451A90DC41F2F422A83D2FE54A9FE3E77D8737B69C10AD139524AA1E
4555CBB0F57C7DDE11FD84D01FE1FBB66E3C139863C76ED97EB72C500701EAC6
213D80A49A043A838BDD3E4434C1C9D21B5968E81BB2801B809BD684E0C6F420
965688BD6C1582837485425B704EEEA1D4901C40169F1FA21A89A896D172BBFC
F88B724C5DB71358AE548F8B9EB423067F311073766151F36B081F71EFF50F0C
43C57372B5DF8EA9E5921CA57418EC8DEBBFCFB4B2949F2083CD838D87D1C78A
90CCAC9DE78924292436E2DF308CC3334498D37AD8CA5C304FEF442CAC12D187
ED535493017D998ED4517E424C7A9DB9587CDBED4355DE19BC801C8EE93F24B7
1F56BA4A37D4E153DAB295FA95BC345CE3C90177322E09614D81569DF1224A13
49CA9EC65AC5DDBDFAD5AD25F30B42D24F3975F6038AAA87704C4B218F9B7FD4
613B0A640B2DC602C756B5F8EAF453A6D82701E2F0E128FC08BFD08FA0800DCC
0592D879092830CE4255CE3A35C429AB3DBEABAA2246EAE4A9A7AE975D99A4FD
AE46834A3F5B8AD99FF719D6C5FFC31F458936B9EAC17ED15BF1D2FDA7B8516F
F32957645D0C67E537C0BD61BB12693B0E6836BA55FCDA27DAE5454C13464DF6
FF5DD7B59126BADFAB299EAB77CC0EB53BDCF9FC767A18B14BEDE82C71A47478
32DA8FE8848BA6633D867F3D2F0DD3476B4A8A6BE74458657D0C336933E89FD0
686BD16563DEB7503ADB02D8CDEC1BCC8C9E536020C6138F0D755A7E48E4D9B8
68404C833B7B24F03E04E559399D8EC1FB0204FB4DEF56FBD0E585D615109062
0668E3536C1C4D3545D4412F96849D7D921DF92E0A894A474C00EDA8B054D1C1
EBF338F216C280656FAB36A3525B121B15D80BA7993CE0FF4E8851D93331FF30
0032C5E458C370725C45D5CAA5AD4EEC414B8DD564DD79A090377BDF377F060F
FE21FF47D875A6AFBE516EAEFDBD12DC48B19D5A82D88E5E72A8A8CAC852BB3D
B4B3F9CA336DF0DA3251E696E90D14CFE5FB2030C14283E277EA6709C221AA39
30C8C85F97339B3A9D70CA6A343FC1D770CDED59A97906D48AF65AC323F05BA4
DC06521C6B28C2791091F2F5BFF440D0E3052B54D31C02DF7AD273E7A8CB769F
6D1E23BE1AA937386DE1EDE63D62579A02AF74678F6F31F2B95A707EF78DDD23
9111BC0C866683696D3E2E001A851C21A147E548681CF88CE44202E15F281F74
BF7667B97827BEF152064603A285DFE5E87C00BDFF454622BA4D25D08980B521
84C9A768E68464ED3A2B3FEC3E048A523CE3B9740FA6DD1B3E72BF367A38FCF6
8AB705AB39A2D5D286CE7043B65F5B1CFF731AA861391AC0F1D56290E1256D51
A2555025ECAE7FC48C0FE43CD6EC48AC42A7775C50F7B29FF55E16DC5372FE00
7CDC6DD098020BB6A43063CC0EE57C97BDCAE5BAFB5AF89F949233A34B07BB55
657F3E3B8E35767A237A34BEA761C1D44A9B9BEDECCE300FDE24A73689C38A0E
E8E2454C24C23625D91D337DD12B388EC8DC41D0E6813319F8770238DC69D57E
F84A93DD918F1B8527F7D610739477AE1187B9434A8504664EBA0DCF3C03D628
F3BB0080514F47653F49EBA3576FFE8979C2B1EC51719836819D9860685CC387
E05597E7A5D919BD56C5C303453C7AE2BBA7D524EE4C5B5CF01C5FF858A1EA2B
7542403EF53B8C854BD43A286B381DA18FDBEC0C39AAD6249178D92CF3C8ECE7
76804A5D674BC3CB1F31AD69A0C437B0E4705B2AF4B46FB91579122FF3061D15
C9B7CDDAACB055B267CCDC87E3DEE0BB37BFDE46F3248F103EA9FD668E3E3FDD
57F3953186025452C98D53143836B2B72C7F4A4013DD61FAFC3D972C6B06C4A7
DB04C45FD6C5E4665F6E24E845C7FF01A6AD7B9DC41E5F822425F16A42AD0212
828158023C303EDCCC5935FEA75FEB686DE12F6B6850D5F7B84BF9F04C597FFB
8EF09CA0C6A79D7AF1B54B3C2757A1E667B0A767A9E745CF71FF22185BD96CAD
9614D95BFDD1D419C38EA4C656727C52F1C2F312A5AD2B211B1120C4CC4C9BC9
6196EAE2AFAEFB379A15EB6840687BC6E52D9CA09A07027D2F2DDB529DFEA26A
10D126C9A15B8F75F819A88755E006B798A1373B918571AED8781E19FA323174
45B8B172D84F092FA4377A4B6B2FD53B89A6F5EBD355F9306D417629DBDA0224
0F1AD949D252A763DBD86EC00883A0AE0BC70A5339516BCB9B9FD0599B9F190D
D69D2452A8D5BA530E6D67D2141EF2B2C7D90E152041FA9A4470625700A82781
CA9C3F59953B507B16F755987C99232C5925E5521EF4A278F497DCAD6C36B6F0
80F2473D9EB158129330F4A4A856647C3240A3B64279EBA92EF2EE4E7B73DD29
5274E1D416F7AD7338F95E6AC9CB4E4BC1D7C2248A8F6E5A7695FE9B0A14BE23
47FC558D01FBDEFF342863F4C0116BBA79ED097434F7456CB937C25EC824808E
7EB83C015915618AEC56D48E44F1752C33E6FDC967E75503D554FA90FE87FF6A
523AA6D5CC7D20283B863A6EB6965BE41C16332B2FB45F1C861F6A50D7011BCA
D9B86BFB6772CA98CA95FFD014D0595F836BB3A857073B88476273D10DA44A7C
D2DA1C3C35E7FFCC75FE1811BD701298F763AA466B7843770F5BF3B597599CE8
EC57BE41DB5B87CA1F7C77B87FCC2BAA6766EFCA468C743D3D46D2429341AF5A
58A9B4F61D361574F5CF227C26D2F5D47438811E365BFA478F6F176676820A62
DB605C75F27AA6D459FA5B82CD6E22E882196F4CCC821189F949AFA0BD791484
6A397F3FB53CC7BEF4783CD887C294B07A3372D8AFDD6A27083A6DEC7D156628
3AEC8C60506F2929182D653503CB17DE7FFCF4829B5CF57B8DCC6565FAFBE781
09CAB35AC2730A761CAAED96AFDAD879B1F56E2B1E6D718D50CE18101A05969C
AFD3ACCB5462693017A57913CDD7960CD3DCE6FDC0579AD9AF1AD917E979AAB9
E3DBB196942DAFFF669F444AAF97BCA6FD87F3C761CC98CF37E19AAED47B127F
3A1F762F80DFB95DB104D7811C76715BA7CBE615575857729E97FCA34EFB525D
C3A88B93C083EC9586A361187E364FE36CF953E718673F1EE8752D9987F59D24
400F7D7435300BA840E3E57BC5ACAB43BC0A33BCBF49395B35E981C9CB703E8B
BD9E39E2B0CA62C21515DD2DCDC1375C0987986AB41D13CDEC5F01DDBC3D3B09
C57DEA2BDD964200DD53397B02197B6FA86ABDCF97ACC1B898DF8D9803D58682
CC9ED169B3582C030C9343D40421169F42B4773609C70F69CB94D169B85A32C4
06E6238C39A15298DAEEBBA391A78868DAF1C8562B2F59C613A428E503A20161
8D509E5FB21AE5D265320A3831A33AE908343E580D56E939238E48C940D33B2B
17921481BF688FDF2ABBBB0A33BF21FFB5A2432559D8E2722AED0BD590253EB9
ADB5870EBEF1F0DCF9AB8106DBA24AC8385424ED4B4973830275C44665866386
32EDDF59B150CB08A3FD1044112A34DC8DC76CEA7B97B106157DF959E597FD86
C9DB39AE18C8319F95F8038848C132C113A06897714746174842547E35CDF146
5C249CAB870818FA5CC7B9DE515B31CABCF7322BAE688DFD73F7115169B32AB8
B6C05B24A1D03DC36A2DEB505DA944FD138408B4F94BFB42344E6044DEB1F697
D86AAE5286A0EAA15D560501A4A39A2FAECABABCD71A342DE6B5E3E384672F8B
058B87E0B90ACE803A8879BFD8C6A546CE92D5774A47BA4EC63FA5640DC4EF8E
A25D441DA07F9318BD4BCAF19FB5C4C6F4C1B63469B8267CD5BD51BB3B9D5EA2
9714B680C0F37D2897C1A3923F41F060982D86BBD4F45C4B4DC7FEF929490869
628D9AF5776C55C94825FFF8661F67414DF1A49EEBBB09A9C0EF90B484A2F92A
69CAD38134E21FC0A03B0728A3C41A183264CC09F701256695440935A95D394F
AB66A2241B1E3B282B1E2687842D204F9D9ADF63CE25F89941EE4F412E37ECDC
880D6965912A43E016D5ED6A9606B3E555E45433807D6F0A9CAB18B09B20A01C
6F4D713DA748D7A898FEDC2A370CBF98A94CE0D7C76E8BA15289EEE37CEF9C47
598585ED0C78B4D7E5B9422B3CE88E98C92ACEC03162375AEF5BBD6BC3B25062
5E4B5C2B2BF9879C7C234986AFF04FF03C1DB4D1F2D9F60CF2E4DC5DAC78169E
976E2488EBD830CCB0A350C695E3ABC1069A9ED5F078ED9C00BB1712A05D6293
2BE6D33A3FECC4F46089F3554E0BAA2290B2082F996026ADC420C676AD5972E9
DC438A1B03010C44859E80A2211EAFD2E633583995757DA08ED8AD3CD8850A47
5496BFAE5E7D1459BC80B7B14BEB344EDD4DFED6DBD4621BCAB4F4FA38A1802E
E23798BBD728D3FDB15075E1A6F45197571530C9B48985AF3DE1B0B9A5D4BB9C
7456FBF0BD757E71985920DE11D7838CC6BFCF0EB34CBB917A025DC677369E4E
BFC02A7195CF0AFB13410FD036613F65037CB70AE490D65A7559C8B473A0F328
C5C86992A819D573648174F9FDDF3B823EC8F868CF1D7651B3DE700753F8BF6E
8F243B461D9E02D3EA52F5056D28FC34FEBB5F14CC7AADFF8458994798F6AA60
2A50F91AC088F0FC67D0A203C2C5F8EA79DFA2CDC352DE1CB56A574738360B1A
6C03DB434D9AEC6AC60E678745DEED68118F3352659297CEA9BF5FE7C0220D84
4AF705BDD9AF4A69AABDD6C057C13508FFD810926D8B51A046748010888BAB47
F407E883211A17C5B4496001487A005BDE68CE1AE6340946D23E446DA0FBEB5F
020C866F65A663B5894F0DA159792577541DC4FCDE2F9A9ED10A7A4F25BD6581
217D977B3592C79197E9EC90D4EB569AD233AF49B4CB901556E63BD6391B3C3C
3C80C4674698843C49DC522636D5B7FB6EF764097A17DA725C3AF2A18ADC5EFE
67A2DC0DF375C832B0315453DAB18093484C14CCDE33AA193D61A35EBA7F7E10
1843E35DFDF3E077FF060FC784A0205D94F0A305EC241BE1F2CAA00FC01F6348
2ABEE71560A8E066011FDF7F6805F2631E477A2C9D2B0289B6D0D1A70ED88A64
3FA9CD92EDD752EF6FEE2782901A1E6FBE5E06BFBDB05743E4F949B491BD9AB2
FC26B7118E90F0246C18C21CF07206DBF81D603AA8E1C41CE5D48D0DE181A612
268EF0FE013F777A6B882F96B951F92E5D4E51D532F29BCDCBD8C2FCD024917A
F07AC9EE89B5B18E710860A801D931807DBEF479A567BAB3764282DA78B388D2
7A6DEC10E1BFC9A5FDDC4AEA160F30F006E1BB2E9F3E4AAA7AA9EE886CCB0B93
C351BCDB705B0820E139D55D686C7E96E155E37355FA9CE1F786D72DEBEB61EB
4738BCA0E82AAC5E601A2F1E372A88C843252610FF37D6B41BD233860D032FB0
7DEBA08DE74C2E4B5B3129DBE6223DC18CAAAFFAB796AEE312CB054E84BD3442
D366CC01BEDD930B256075EED6B69AC63EE2AB32A29B2D317D76FBEBA106D6C4
877087D0882690B48342CB3260211DC3A26BD62E84D95BE8936212F232DE54F6
59A360EAACBA07E9AE56AC0AD55E4289F24E742ABE0538FB7A82BE7DDEF5CFC3
051B477180124006B220B251F5E2D9C5E1AFE48A6325C11221148EC1E6E2CB48
355AABEA0D1067FF0291CEBBDF56BDD299B81268F3A0B7F152A9EACD5E0E0D21
CD6BEF4FCB5EF9B6230D3123380AADC1DCD8BD9144CC9C39D86018D9AD0AB05C
576853FED0FD74C459D1F1662445F14CC427F58A87186DE1B496C4C928041D1C
A723188D803AEDAE636315CE9D47B1A020296D23FD0A59D6AD28E29D5193C5D3
FF2E3E78D108E4C782F8A21CD0C6248EAF762AABCC65DF5CDC77D3E946B6133C
8D8D2677E8A479C714A7BC5D63D0CC148F95A9D7D255F6ECDFFEDFD46711C74E
96590D2D4DA46741AB6F990ECB3D525C0F83815521202FAD111B1E7CC9573420
6F387E8262E46827BCB1225493138D2A491E774EB883E8E423C12758D23E791F
163DD2224EC5DE80A58565DBA2CDB39495A13475B594401F8BEA9ACC2CF2FE7F
14CD6B3B082CE208D823C0D02DCD209EC01F28EC7B1CB75B267896DBC5AC368A
2D56BD802AA6ECE817EE83CF18DD001361B82E1B0B2F7D7107A377EF76DF1F1D
6A1125CDC8BF21D70A72AA4B05B19BC6EA6705003370A63CB3C4B06209D2B777
C13DEFAB9BBFFCB3FE9740C6D9FF8DB08C83293F6EB8ACC485B94BBF8425761F
19EC6C599E22993882D94F90EDEAC8A3A8DCA72E26C987F09AF3C4A9E9A94A5F
932FCE2CD96CA703FFC8167C703D76BE95F96E0F98010BF1DE5355F557210DA1
81673C773571975BFBD495F7B532647689F1F2136657C025AD24664C9C830C7F
275A4FE93755C89B01CE2F1AF46EFDBDC92B43773DFE263FDD04A29FDD197448
5126E0DC86B790B23DF742E4C03D01CF167B0D7BBBC53023A12C5B3581D8F357
F01136E5C76F823D29D35078412923DBB3A32176EADE96B26656486721814B59
840243587FEECAD354A0364769624E3BA3B854C245569AE23904F7532F2E9BAC
49A10369B4069D6310476781777382D05A089F2CEE01CEE91C3CCD63701C3C49
09B75D5369025324B818204ADA2E99E8F49B8D68433757F1C9A457ACA621BB7A
2850B9D0C39C6FA49C6B89291598B9D1A2777ACAD657DF71401D0769E74E2EB9
35991C9D7A835EB88BC04EB2B195DF5B78FCCC747EDFE0FDF4574204765AD7B0
A7976E37F006F52CB217DB07076D4391E99DF321D0D871A37C34F9D4236DE2C5
24B86A3E83C8FCA1FD3D12A4104156A848548A8298BD9A3A98C5081C21E09365
19A99620B275098597E5E533A30B97B735B1A91FC71909D220C7917388F5D950
6B959EB1924BD4198FA0051E364D03B20E1E0B680EBB2694CA6709EE19C11515
E6E967043F9162C39CE876CFC5980329A197531AAB5F8EC42E5A582564C9926E
78BCB90CE9D7EB1913D307114496116FF0087A487A7C1C3FA3C5588A14412A26
4B827C6050DCCE777B796EFFFB5FE356A32BB5F337C05CF64D81FE3741D93452
850B90254749D04EBC0F1106F62A30D3F714A33E4F65F27299B2C8A40E6CB11C
31D9C29C7AA3B71450BDEAC4AC8E981F84FD665C1D5A0C51615A5F3B4CF27D1F
0D909F310BF08BA994239C9716711F492F317C6BE4E3D2EB56C50B0992123A27
6F3483AB90D7EB79A87E6467D40C44046AD741F114B5C2CD2E63CF7D0E0B85AA
6BA6E3A1DF56E6581DB6B6E0E561E625B8222CC0670CAE7CF1C95DA8356580F5
3F51C9B08071227756C4EF1AE31F8C52A8B4B420A30ECD347E1717AA5D4CB03B
26C4A34300BFECF6F37C733167B2CB7DA20C340ABA91FF0B3C92679830F4F3E0
375B8F8640A75773638943DE96B8C4EAEC254BF6C09AB0CCEC832D418F137198
942E87D4BC7ADA4DCE9EFDB8C3E12E312EB7BE3084D2BA1FAC3D91C6E7195BCD
7A326670B713F19D4B5ADA1833D46FD6CFB92B85ED08A4022F158043BEB6A682
0566EAD71325D69BF3460F4B7FE6FD95C829BA1924733A6C81AE0BE8FB1A69E4
B0CAF4DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C09968D7B0DADF1335
20A0F4E9933000A0710759B6D079F308F4FF9503FD76DA70F3D501CE3B7669EE
A5C46FE7EB6F7805A0CED7C26E24B09A5F46C02877AECBBC3A0191AB76866C8A
62B4D0BBBEB154A4D9849A7CE08102B234BF27C61D987552FAA97813EE20376D
20927C4E08DC77434A3938E1970D8EA3CD40C7B8FB44205899626EF60431BD7F
2AA1DE45FC978490BB69153DA6D6161F7806C284952F238557A5044367C4D455
433442616A4C537DE248BF2DC46C219E9E0ACDBAACA1A5B02770BBF21608D79C
9B7D0B357E17E473AD1FC59C83E6AF1F16A08D29DF1079C29FFF274B4E1CA95D
D0C77751D32E70511FE456FFE23CF77FC63B0A2874B09700132AF87B051EC5AF
B2336BBC4539A3AA334E3B58194491978D7B1420BED95BABF8E08E75BE5F3E71
E7393392A0FE4928556628295F5FC9FD763742AA95C63E50BF80993281A0613C
FF9805301FAFBF4CEBB5FD0F236A17293D2A720C72FC5983C22F4D1D68127A85
D3D37535EB04FDC8F5D9F4C526815BD2B9317A873328B5CC351E220C6E7257BB
AEF6AB7B413FA7BCDE06DA3A5692DCD2E05FC522933E29B447B5B836D72272D4
4D2220BD4EF12017FACD410123C239F97E12B400D55FD538236560F6A9957E71
3984D516719A53EBB81A566E8C43F8279A423942A579EADBAB32006D750367FF
DCD83B669E321E9A9D8D237C0D95B8D5FF033724D6B53FEA52710B82F265007F
942A15246EA5F6A79C01F47451E1CEF30330B0AC6E3AAFA7C3882BB3538E15B9
C0183593174088A505C703C2029593EA286E5C67C0B1A0365ADE1F82292CA07F
3948B726E9D3DC6F3AA19E84C6045A8B4C47FE961EED2A60C6C7AAF4C713ABB3
BF00C091C89BC7C0F4C7A421734301813921B971F6B6E7B41F570AF1EF4CA185
6F591A0C694A6ECDB6ECF6E7C406EBF77CABB5325CD9EDFD49E8901092FF6B23
2F3CE2B327E625D12DCD08C323F8920A6BC3812322B8BF3B6417389F990E9CF9
9917A1902F53E42BCE146452D063A460FAA18227328A6C3A12420D73235157B4
2582FB3C27E56F4F13C7F689EA1119ED5923656F6B65295F00A4A4F6B907AB45
1D1D0B2A6BD7F2CF2AB594187E3FDF4536A08E9B1FB0962894CBDA32FF2B70B2
1AF4D158E0F746526DB206287F5B1708FD0685C575449D29B51B30154E150C4E
9CF19198D5EE9A7DB22D584FC7B6F9C35C47D639FB78447430946D5F3C82542C
5E340732036ADACA04404F4D493FB2FE6D6AFB2077BBD36B9CC86C918B203905
EBE9DB18C6D408BB56487BB0AB6A8A1388C4604675EA7384F3398E49404AFCE1
9837C0269066FD7220DF1315C0679C0906D77AB2144E8492052C81B8CDC9315F
C86703508D2380278FB9B8E12839C7FFE3C7FCED238E4B22808263B7D46ABD25
3063090E0726229F8816072B532A5CCE3BCE2201F7ADF55052DBE32C092E18C4
DD6D6A4BA7AC6A4DDE1C0A349F310E5A5193ED4C7C1D6E09587C4C0799B8DF96
51B5B2A9B70EC43DD3F51E5C9E071F08AA753BB31234716578EA2015933127CF
78660D87FD1C7209EA67CDB37076E1EAAED12881464B4D82A66030D729C4DCF2
E9E0ED2A8A24A32CADD00949168828BB42507B524B622F10AC8781B19CE8AA27
5EC247C0491ED4208F2A7E2311CD90DCDDDF2859681D7E89D3F37C2111F4B068
18ABDF3337B13915116E6563EE5A88EB8E3014E87FCF4E84390FA700EC0B666F
6A3BB6CFFDB1AD7AFDCAF519B4CF9F2C38886DB3187F017A7FEE84016D00286C
69375E9E0B1B272B51BB1829FEDEA5CF1F83A21A8366EB9C6336F2FFF457422E
CEBE6792F785A800D7FF2FD101409F30894D70491F2539DECEFDA6517508AC29
D1F25C3EF360ECC5DE85C9F339E8DE7FEA5BECE78FB4B2AE464BECF5865CDD31
82B7D2196F268CCE4A555D27BCDC453C01878274BAF10530B2AD398A9DE38DAB
7E3E61A7F1029FA5E9FE7BAA6A177DA4CC2B5B37AA80400BF47722E48B590F4D
1D91F2976C6BD876E9EC0EB84A3505F4F1934B3DC46589F1E6977A5973FD025A
968381F7BE3616FF70F8BFD1DA5464EF0CADB0EF3291FB4E6D44D2F31FD9C8E6
1AE5003A6A09FC3C384F2BADD130BC0FFBB9CF18B5B5643D9B7EC3B35E1FBADA
A94310D087B5B39FC10585E13D1EC098C144D60A0C9A91E04A669871EA89BB73
839B3C0F775E028D5D3BA3890620BF249A218D061384B82B05D0926830DF3CCF
86D71F2A9798CF838956A3EF8CBDC06696D344FB2E9DE10D95F126F80819236D
EF4C4AAB75D25FC1EA3FC0FF5C49D1AD996A9BDCA8EB09CE5EBB3300B99778F3
7EDADB6C5F59549275D0F61488AD7409A8121C873DBB1B5BD709151A12C99969
3CA3AC8E30DD1F892A586FF8D6376ADF171C72A3B538CE31328B72E49A57295B
4AEA97920A5626965B266944FFD84DED7116482732E99265BF2AF0FC3BAB747C
5174B440F45FC2E60732C514EC7E51A5D3C22E11C9C8F24AFF5F645B272EFCC9
4B9846A7C7BA03C39E2B9B009AB5B9DAA25AAF95623A8BC74B8CFE6C8FAEA47A
0569D13477E95EAA9B4087A09872D25C9CA70C7C4136E28976E3B695CE873B83
B75A88D3BBB27768B6C14A830193E9E49A0A9C30B9062C1643C91C2AD9BB5BFC
6C2916C536109F3FD275793E6C4D8AD0552F95A7517C41F4BA2B4267ADE17A55
B76D038F8565DBB7F7909097060DBBEE6429390EFF889208ACA145BF40CD0D79
CE916F41E09DEB7DC68371230B3ACC84C1EC5014380E3F0D598B910BA34DD120
93C840B001153D2E0681333CCF3F1C231AE192FB9F2B17BB69B2D300F8B8B11C
C2D4F90EE09CE79D640A1681B592762F3E81259D516189E86164BCF6992F82FA
72C282217CD763866146AEB493128E363460693EF0954F0C234DC1915A7FC978
F960698322FD0AEAD87075CEB5D78762E43ED93064129B5FD4D6601DB82B2BF5
6B79F7DF65FA430526ACE47406FBDC835A094F021CCA700903A188B8A86488B9
975D41A8B67DA35E2AD5E393303F1AC24C3E1A7523B8F1FD8A11E096EBD5367F
BF188E583321F84133C40CC6DDA5D974649ECE8BDF6CB0C456A0006AF137FC93
3BF9CB313CF0CD29AC91D2312895A280042C600ADF109B2960B0CF176275DBEA
DDE45CC117E21AA4E3A4EA077128E69B85F831C3007DA39162F8A3FAE8E326B5
8649C81270862B8528D00B8372BEC63CE23DCC7A825F3387D3934DCB308E17DD
C669DE20FF823A10265B6FA403E3EC914C6A9795662FD027B6B82EE1555FF8C7
F6703D1EF5AC4F2052D4E124673B33ACEE63014894D98EB622E7751200509B38
704024072C5F146C6AB480716690255576E511B33CA39079B634D7A04F66B4CE
B41D8D1A84EC04FD7BCA51BCBEE5EE4475218128F53C29AD7C6358EBB79B748E
4C6D68F3A0B7F152685947A07FC1176767C33D5C11EC06328B105F44C11C569A
5DCF7F1E0ADA46FDF793B933F3C2299AFFE6F33C145C0E2192EEB0ED73EA8DD4
BD13733B9C2701D0B460964483569B439F5EF3E52F02EDD8B42DE8860754EE31
23DC404D7F0CF1A11FB9093F069BA4C6A29EE7CD7C33673A38BDA2B7A4D559CC
7D98E26F7465835FC5C61F45BE8FACB95EED2FD9E48F32FB9E8C4A77C773CF44
5C73651C660660664C14D902BF7EC58D4041CC720BD339F9539E55FF888DDBAB
DEC6732E1627BC84CBC7370607E3864329820E4376E4FE92889D8EC7818080EC
EE85E1EFC7ADD58BA85D912094DBC07D5244F1CEBA5AACF5B1104EE316B06C96
EA6BB5E28E9A1FD3BCA3EF543E18CE0EA801C37CD3ADF575BA69DD080979EB3F
E4252662C6190E201E9878291DFB2B33419D1038CDC45188F695308F0FDE0F45
F28BCFDF1D312FC0FCD523DBA4B5D47D70ED027820B50E53679B48282271CF32
11E907177CA545CF1575C6BE2100CF1BD1F9B86841D733A85AAD6309B6C0BFC8
29F4703CB5993D7F70CF0A5E40E35AF23E929BBE7DD57817A4735FA13EA85FFC
1F41E63792A13E8B47FD1D8FF17EC9C3727324B37FC18C0E9EF68E3CE4F5062D
DF3C49356CEEAAF3B20A85269849ACBF2D22C171A9B1CBB533B26112DC6B7BFC
5C29FA7E856C0E4000250A65C47DBF08C7D4AF103140398EA671E3374D46C6E1
767B983C66F64E3D06D3D8BCB0517F73B62B056342AEE2B25D9E1A9D56F4DE75
70F5237A8FDA35C47DBC841C429ADBE69EB375DC02F5D2D2BB0208A83E16FD42
E317EE9E0F044CF8C3391BEA656645FDAA9DE44C752B4EC1428CB993C0CC9BDD
0BC4E695E43AF8276CA4D9793C3E4F6F84AC1DA613EA9EAC97C76D8B268DB0F4
995907318948818B633032910DE9B2F252310A2A4EEAAAE16469070F61650B85
1CC7B72556A3A8CC20FD75E526C8B84AC04AD586DC047D00994D6FB5BA7915CA
34531C1FAA2D18BEC8E4493BD6C92E683215764C4BEF4267749FBDF55F4A8369
E41C190F956DC207A3601B88C5FBD6B9D5F736F8FAFEF8C99C29BD310545A146
AB7019887B8F21A87F9308C2D46A74B321BCDAEC06BB401A60B1A27DA076528C
27786DEFBBD1C7A89F04D3AA8E862BD09A9E8FC30BFBA1FCFEB5E60984900ADC
AE53D06552B6932D9EFA446751FC32238FF673D4C5784FF781EAD2B6B9982C1C
F297DCC5E1E364D5AE8FFD79DADE3F9127CCAD7197593A11212E7774E3FEF9AA
43A7E329CBD036CF2B158C9DB9758C6BFBA03B27EDA4ED9108A0BBAE7727B9CF
D2B8AABCF05036FA207BB2591D29297ED5FE188066F25B29E45B5D2C041E40C0
CA214AD9535B656C6AB4D19CE7C2FBFD0AA3778A74F031C3A6D17B5F58CED194
F51514C5DDC6C88C4A50CC5003AA6608B09691F7C8F241054954456E4C3C4312
EA23A04F6DF00B49CDF8B986F947BE4BA94076222824A7C84F0D0ABDF5F7275E
07E347556B1976D53DFD102A880E8C9392E277535EC98D713D700F44D4D9A37B
6DC3066121200852815E19FF04AD11BC40038852555F98CAED6F9AC2DBC0C720
7B410DF39CA6A06B22CEE1D2CB7441990E6EFEB5CAFA21CA5632F632EC0C2E6C
0F3496EC4C193564219F7BBC7EC1086E64F56CED9D30D7A3D7D4A60B26028D02
501D6132D40F43C664CA3470F3BC618699364D8101BA8B33E343C742CEFA85BF
3E5D13080D55F515D417
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE505B8A69335E25F98573BFAC64A02542D3B835ABC68EE4F
0A1436DD48E963348F6F5650666F6BFF72D385A5FB67448213B032991B4970C5
79925CEFA92DDED5BE33EEE8275EEE83829329E11E4EB1E2E16669B21C3D36F1
FCA9535233B0BB982F75ACF33109F8AE7ADE4954D0B1E1802008B39E90FD6AD3
2DFBD4E8C89A9FA5772BD7C4CEA7C8F8272B4C34FD26058AA9E35E6DE5D8F2B1
B78BB131F06294B45300705B786BC0D0653933C657D716DCDE61AEAC6DBB9F5F
26C309EC6AA6E4BDF86680F4004C27DB20FEF95B0BE467B5B7F436B45DA8033A
3F755FBB8515426BB432CB6210B93F60C98D1DBC60E48CCFD9E1AC3BDDF3FB69
A81F2D36111B48751416C9EB562F65C3DB7A4AB69D26B5BF8D90B5758CD7435C
20A34F783A4273244DA0E4AB11C078B07BF2786AA78EC0527660082810DD4D12
583633A6CDA00B353267B2BE5B8178E6B7889A33771F86276E6F0FC729A9B845
FA4DB9CDCACCD1804B9444C284E42F73764E076EEE81285FBB3CCD86DBC5251D
2D38483567AD80CF22E61904C92A4FCD68F8C5389BC7B4DDB26033F03C778A1A
810DCD869D660DC33865B7E7C25820CBE0AC3DBD4F5A7BDBDA43B38A384C2DBF
592B0E0A571B36569CD507130E8F9ACD3CD20D9A4008EA074361239D8E8052CC
15B53B907E17802B8F1B15359AA8D6F03661719C67527EB25CCD9328283C9F0A
171E48CEA273F000F765D1CB762C01F0925CC89920648625740073D2F18F5E53
5CF1F0D0D082C889B4F6866E72B09BEC4DECE4EA88FDA367F98790AB0323A4FD
9F2E28963D7CC8767E4719B001B2B4D6E8E7FF796C4B5FE29DC0F93C2DE0ADDB
6BB87BA8423296AA1DCA216EC5AA96CED8CF68CD7F69E003ECD5D48EBA04CA5C
2A3FEA809954726348F27B22E5B99CCC94A4CDB6374418325E79EC4229D8E137
B3C9EF090C510DC30DBBC10E10866513910B65C0B9F0760B7D4F6D28B6CD5B5D
C818257E2541C8D18975EA17CB21EE4C09636917012FB05964E8014BD979C2FB
36965D880AEADADA8D7D37ADC90C999415AD8B6D0F40447FB5FB330A80601B1C
79EE748172D7503E56183EB0E6818FA31EF967
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD7C1
CE928A3B7A62E15FF0E53E8441C88EA7EDDB16ACDD26093F27AD276C7EBE9E54
1686DA5E26A4CAEAC39715DEC0AC3226F89606D8EF5ACD55D67B059BF6E8F30E
E359EA6416D91CE21ED908D6F8E0DF883970D349DA85F749026AB7D8CBC93B9C
B12EFD2936C1B63ED2B929C033A7F9759BF94C668AD787FF73B1BC042E3BA32D
6008B89E8E030D46B0E9F0247510E37735D1055E32143E97A11060CF072D7955
9B316AD1B56F342BD5347564C463171E3B2271E4F2B25C44E345854FB204CF96
E9441266931727DBFC72CD872C534A411593D10A734F54D32BC5663D02A3008D
95BE5EC1AE472B75ABCE6A6BB030727318366835FCC219DFFAD9A7F7D2850C50
C01F95F2BC7443FFD645E8EB8863132403F6552F82A6C3CF2AE112F8EE4E7A06
63367535A261D18BB1A26E4C2157472E938C018477D107652BD59E002C56B3DD
423BE925DD0B46BB86D33CD66D069CB847A315262F8F4F114D713DDE8D3C9B37
40FE2E9D8D012D2D358ED89B9258E54CADBBB3CC59D3FBE6A84F1F9521B6E05D
0A0B2E0FCA57280FBA427EBCC9F86882CD96EEB8F3DDC554ECFEC9AAC229C31F
9E8C66735C59EA38E3BCACCC6F85A6E4576CE0D0B850C5F5505B61D785C6568F
D459FA6AB02F16E58ECE66C909B7040538B5E7DE80B6DE055DC28C1B3CD4A50D
077FE7AE2463F40DA89824D1C5D17DC70E135F666D6CBDEF35A8DF7CB22CD7D3
71D2156E4C040D7FFF62F56653DD40C4DF8D976A9561F7A2A4AAA27D75E805BB
F6F2438217BA5121CC668458620DB3D381D5677019CAB09FD5A5ED804CF9A763
367BEC85D9D26CDF0AEAD7D8C7AD77072FB9419F12077754BA3854A60A3676CE
5844945CE732C268C6BB20D3A28813680FD8BA18BF655ED97EE45989D6781357
B5B413B6E97541FE06864484D4629BD483AF6E2109089894073709DB34C1F5FE
63935BB8431F7E829B9FA5A21173244A15B102222B1C8D1651E7DB72782C46D8
4AB230F78CDD9B74D0D17672F0AE1327243C3D00DA2F61CBB612AAF94D5FA688
675B555FBB346AD5F2B5229F163101D4B98559AD18A41A8FD3A88B4FDFF9A4FF
ACB66E5DB49804228E74B02B2E1E8FA3B00C9278BB0428971CC9818FC947D897
5301E53B187DE4E19B4429446C0981B34070CFBF71A5FD30059783C16070C4D6
DC4777ED7A723EA37BCF5808E562A93805FCDA2034A6E5CFAF53CAF1C31EAABE
44B4E65AC234DAE81FC2CE7BA777B592888D38EDE68FFB3EFE83870BBDE47A05
F1DEF0CCA48FAB214208284A8F508D04F0C6C3B9418C1094CBAB96EE405DCF58
E3A569DF070920495F8084DFFCBAADFE1AF8356BCEEEBDF0605A719EDD4C0486
768E3BEC5E192ACC1FBF937035DB4920F0B8EF034C9CD1F0FAA258942085741E
E832FAB1F7ED83D153379339E47749CCF7812E0A4CB2D756FB0E9E49038148FA
7E2B948DED6C44828FBFBF98843FD61AAC4452EE1DEF48F9594F94E973E95CD7
826754E0C9F973B650EA43465B99D41113AB38B1C20D59F9FD224E87DD65812E
E02A43EAFCDE30B3AF34CC9FADABB3B773F278CAB0159DCFB8320B2ED6D5EBFB
81A4D9BD0B04AD3DAE54AE8C660BF294CE1BC740EC90A0764E9027D61CE5938B
121C480CA14DA5BD9E017D60FC01124BABE23FF62E75FCA074B3FF6D21CD197B
4C7B75948DE075B321B73A951B872F8CF22ECCBDBDB5A63297B06E72C8929D52
02D6A34CB172E269640C43F5923329E440A4BC1282B989F287F68A6BB6C11EE0
1EF5EA9A3595DA8DD910D7770583AE6FC14EA7E1CDBDBC5A0541FF5E194CEC0F
3A909C9E8EC0A4B6328BD50F4B6EE65D2DB6ABAE8133C7BDA5A03B58ED24762E
E335051B39B658BB0BD12DFC322AA7F265EEDC06063966D180AE2A7514B8F6E3
52C4039421AEE22B2C2E3F45D707240C8DCA8223B2C3120035F01F710F91F166
DCEB7E1C1AE72CE581E82E6AA51460D46D3A8247773BF93CE1C3441AAE3D35DF
B99AE14D14267FC316FE59F4C3D398A0F977D29ECDB26BE99D660D8269553667
640D3E1C81416DB353A4EC3E8784399CE0C86BEE448E412B9E72DFC04B7B823C
551E0567C0A543A4B01D70AE10D506C5586279A28173D35D36E744A5CAC7E93A
298A73D96B0B0340A268B0DDB25BD184FD79C57C9EA994E8F7B3A2CE5CF814DB
309DDE9B1771B3FCCF461733D1A9459E77F2696444216B219E69016B8849DF99
6E76C827664C531B8DB955C3C5793EB1C455C9892D6AC64FC163EF587150A5D5
AC2380D273D2284F3DCCEBD34BA5BA6F5AABF3E7053A6128190A6962680A04A5
CEB915B8E21F640745A0AB66CB06EC36841C4C77CB3775052A962C832BF9D3B9
5753EF65E313967A0B57292667588D0A60A045AE5775EFA120503A485B0615F0
D3D880CAE4ACC7B6E8B260A180B09968B751ACA01F7DF1FBC7452B5D1E789929
A97CE2DE04BC32881DDB7B0ECCFFCE5E082CD7FF922805C21ABA08423F35946C
6E3002646FCD01738AACB9AD52BCD0D3A421EA222FCCDA3CD2A9C193BC563E5B
01C3DA1CFC81818D4CD95FDC0C8D5BF2E7D04AF5F2FCA69C377DDE8855A7827F
8912C3DB8063860692D8A40F41E91238E4D2C9530F9B8D07A7519DCC7CAF54AB
213EF255E794235AC49EB7DFBE843A27C1064E9644F4CD1629E833A91C6B0951
AF6C0F968334ADE8D5B5D732FC54FCBBAB3F8669EB9E086797F74F876028A5A6
CAF48FD1F6A4DB15BDC026CABAB07526F0CA97D0D865E6929DC4A9F5B183E06D
2DE8EE9FB83985B96CA9DB0DF68923FB82D1C752C7499C54B4784DF9896B2790
C88D3132A0F08DC7B007337B680C9E0CF3E5440B37DFEEF5FCEA99A24248C40C
96332EFF00FC6766383E542DF5E39EEC1E7EB9FEE92764F5BB9F3BD4BD4174E8
93EC0B4215A76AAAEC1C8ED1C42A4C6D58F0683E9AE3BA17701B59CE090D90C2
9776BF27FADED563AF292C8F30EC9CD3F39D27CB74DB2CC263413888D1C4B812
1EC2C5D4A5BD347260EEBDB06B8C68AA4FF461BB6D1296A5A8B25162D5BA0354
8CECD9D12CA669D16A0C25A85CF598BEDE47D25D69FB6BB517B593AE025E7DB7
6E3B3E083DD36AEED7B94DFC5FBFA569DB2DEE9C6F9B59FE8E849CF8FF43F8FE
9E68B059FB6E40586E157D5BCEE30EC3FE52FF93440562D2CCA1906CA660FDCF
B60E1189D7BACF8C6A57A359EFD7C89DD3F0B328490C546A2BD7B5C158C668CC
C9F9A71394B4BFA8CED0C41664DF7B5BBB015C15EF36B7283A0129D49E7E9AFC
A904B37EDB25A80BF2A0472CF4188543AF0DC2B02F2934B97EBB13A8BEA26BEB
EF06AE6A8A1388C4604675EA7384F3398E49404AFCE19D37C381646E30ABD086
CF9C09A6B0FEE7416646141CC8B52024E6F0C83089B39ABF01C9BDA302A7C5CB
636C5E108376C329FAE1045C5C6E47DE0F7213002E5CEDD40FA3279DBC399B87
50B55455FCDED45FD58E167824952DD7CCC849CC0D1B54E47D44B807D264B8FF
F9E4D785C4DDBA5545914F29527629DCEA6EBF0D04FF08A23FBEF25F17FEF818
5F2A12E74835F50CAAA1A6DF0D346F8434E939042ADB926EC8CC9BFFE37D3A7B
41CACEDF26EBAE2A913F25A823A88C7E731F647895CECD96CA4A2FB083E6C7C7
86D9B9956F920CA79EF88A2B8FE7BD844473CCEC18B8ABFC65D1F841BE7DA95F
C19F99BC8262CFD0465EF4B95D8DE0627CA7548FBA912436BCC751C99ADA30FB
575EE2A90BF144345CD93A305FC549F4D79F4BDE53501E2ED5A81D91A82366BD
B4E4EE45019BA6FF7DF40D9FE58108584C65DACA124DC04B567DF3008C7C00ED
5B17DE359DA187810E20F5BBB3507B5B5DD834C67160287FDC43608E195E9E7F
A74E359A700512C58E83F41C1EB95705A5F87B523A261B41B44DFFFCBF4181A8
6F0A4BD25C3921CD2BA8360DCE4E6B16E18F9986304859D5F2FC0E0D81998509
EAD5AB2FDBF7A3D1A4667CC9A1D236D4D282C85ECE5BC741199805206C3C604F
4F02C815605D0AD2FE07CDA8A9FF54640C8526BEDF26F171C5F4C80871ACD7CD
327CB210372908060E2CC989BA3E13B958C0DF5AAF91F50D9A681FAFA92180BF
D3F7FD1D7C0305D67A11D28A41208CBD98FB898CF7F02CB77DE7D4173F08F020
FE6DBE4B43B16EEF2E40874F4AE55118EA3F62891AD4DEE7C73D21C627D1E2BF
346C331F091A85796A02A468100E72E7162069EEC2C8C8A36F19DB4EDEF8356B
3656397BC47A4FA41BBCE395AAD653279A811E792B1784088A38CF9F380C9E11
4EFAA50ED51D3311F85DC40CDD2EA9E9F51163E371DED73DE519D55B93D204E7
189AD89825F18884570CD80BB699EA5165127B1CABB84D2439BE88596B165E5D
A6866E0930787C2E9F5D047CAFDD08829CE775C1F5D2A21749E56570D67890C8
348ED94D1823AAB1214415D55F0490CC22503E0CE251F9DF1CB1483EA78FC5C8
7A4507A5A16A17EC8A1B06587ED0BFCD31833B1EECAF947E67DBA707354C85D3
DD6ACF0F1F7F0327F0AEFB4CBBE69715B14E022F8DD209DDDB0964A51388B669
C597141ADACC7695CDD554226B03E4DEFB70112BE7F4212FB8E2A9BA738329D3
895A415FC06B0EC169287349C52D39779DAAF3AE25FE3B8DF53EE8E41302E597
B15C2F640CA86F291744A28A21474C71933C90CF92BA6C5ABAB1864D85AAED9B
A877A39F28909744DD2A0E854D72C2587B6CAD29EC5A22E7427FCFBDEEAAC67F
14F71B450BC562A195E9F1CBE84FC4DFBAB734E78912D306347C0DCDEBBF1563
08B59B0AD445F8F69CA4B90D34988C1C1AE72CE581E82E69F1E9BB735EBA4E9C
05D6F238CE8CC902D1CB601CDC970AF9D58E5318CD72CC4BB057439C03CB5C9E
7751731A4C7234E207FD3BEBEFF03973685DD97F036BD60D4E34FF950B6CB82B
FAB5BB2E73ED0578D79771B9D519C1DC34B456E98D17C5E2C69174395C1136B2
3A9B7F72F108F7E159138C54FF9AA994343A57474BCE9DA398EC19B84AC9AAC0
72FF6D2E80998D9256C51602F3AC7054D2D284F09826DAF85399CAE271D9F3A9
068D32ACDB476F04E5FFEACBC97E5C7FD1A7918073D89DA1A5EF78FCD1F235F3
2A62F24154E66FD417ECFAAC501BCF19DEC8F7555EED3BB2A04E4CFCB8CC3A3A
5AD57EAD62A642F7BC52D0064D626BA54EE7F23B8C81C618B47F60FA4ABE5032
B7ABE1136C4AE8C31C51A48B8D95C5D8F6870640EC9641455796196B25943AA0
7FD42A52909D4EDE350108CF664AE4955F76168F35DE3F8DDD32A240FD49AEE9
08C7972AB2A420AA504C7E8CEB212797BBE778DCDB2D0F6726BCF115DA153439
5890655801BA3ABD21A88C7DCAC6BF7C344DD11EDE12D3F5F92CB77F7843C0D4
BCC174D4FBD61DE7DDB8C3C7DB1E364FFBA48BB844B5623950E6053B0068BC64
EE37B70945B9CD7B18C88E1931B1D04524CDC4DFD91254F5F610D7A7A77C415D
05122439FC3BDD16A69CE12763AAD528D5BF0F0F1E39055E86180C7D70697B73
BFADEE2DFA7C71FA95D3514F04CA9AB516FEA662832F3B270718BC389E266EB0
35CC39C828E042FC059A2C0FC15DA8D78E4806BB3A779935CB46463F4570CC1F
CD2159FEFB58ECDD09F60C7E4966B4FAEB0406B72F8FF605BD06D5380763A771
3F7B08F9111899BD86BEA97E9B6B14111DD303AD9BDD2B9ACFC3FF359CC8667D
7887C9BDB503D539AAB9872AF546AB78693C639B5AAB5D013CE6B3FDBD8FBF19
388DDF3C5B474F5374D80D469AED90BA08D8A729CFB0D505776A23D1FF9BC125
4E676081F8D2385EAB8784B3405C900AA958F922C67A363426C03C53A0FF11DC
07E2679B339EBE55411D9D0784D058C1C336B45F1813DC3EF412EEA1488622F5
60512DD5FCFDBA9199FB4220CDDD74BFD2C45FD1A30675D11E8F2817E361F92C
48DD48A235A8448523E4FB61522B51536AD69F860DA40760846C7B0E65038863
9A4C63D7AE52877E2F61BEEE558DE1DCF0ECF9884F5B9A2F3F131AFCAD389F64
9C83BBF8A2664C676FC8E07E18E7DD9DCA763788334FB445DAE6A49117B0B754
B2BA2998DF38B1AB99BC2168ACDF7CEF71ACE333B484168E6FC9F3CD27317AE5
46C3446F2D04D258298746AF8825737F1A518EADDC0DF4048578D3C5BA050BE0
3BCACE325F78FC232393DB3578F66E2A63C856C853C3754756D2FBD0636C61A8
42A62CADC1B1AC7AAE6732DAC6E6E6F989D279899F037BC34A5AD87BC27392D7
A101E273541B8FFD8A9F88AF4519C6EB4C4A1E09D4671353EAEB628E09FF7F84
DFAD17DA742254B2B54A972B3583047D43D202EC047CC23B8363F200737540B2
1745BD882FFECB8914A1E25B2A8B2D032F1E2D97BA8D3BAB84CF7068EB16D13B
A07154D1F33B37B9E695AB10A9E7D237479C11AFFB4E0DB4C05C4DB50D8A3519
D4236FC473CE71A6377E32DF8E4EF595027B04C9674DDAA3FE01DD30678A37C6
005C87CDC11866681AD8E5027B7D1E0C22A83AA19F30AB25F328B582681CEB65
944B9E996CBF597BFC9418A44915C93D445D40C9F87D55A650A1F10056070756
BEAD932F99A472956A0D03F44E6E4321BDBF12DCD48108E909E7D9AC7D0D8275
EEDC45179F7225B6871B570EBE05C9D95D8F947BD07D686E38251125385AF164
7A4E4169D825AAC0866A00F9CC6F3DD0CD46FDECE92D3164A4778B3F91C02B6F
18FCE5671F2A80B7BD216B32682375DF670EA86EA88BC86139ED89E63E5A06C6
7184BBCF9A15A45E0AC8A9C55B29E9B26900FACDE591FD2D8D1F55EFE40EB68A
D4A746324B6128E36279CAB172DE6EC32CE21F9AAE44E3E9F045487DC03DBE7C
AC2CBD4F0606318B09C15D29F784CF5CCF2CC1BB99201E8052E3BBCF3B6D89B5
E598CEFE581529073A5E8853C554843837378E0843451E4D9840AF87F800D3B6
E0248AC51872CEB3D77B63E54344F80D589438BB8AA51657E0899BD7B6CE70AC
BC2940E23F8C860EAD0EC4977851FF7A7CC262C1D498110DDF814AD6BBE3C436
4BD1C64F9C1F13F37CD368F48FAD6D6556644783FFE23953B99EBFA7AFFC31F0
9EBE614D4BFA8B7DAA0AEB340D42110B7CBF42C567CC6CFDEDC298DF2EC7706E
9F77C8A04B529CC5FDB8D5DE36946FBFC4D184CB3471F958F98B5D411933139E
06CA8A2F7A801C7AFACD58F93FCD83DCF3EF58FE4EA4E91FF295C9CD39D97DF7
8A991A8AA43640ABAF6B776751F345F4642D12EA28AFB297DE661883CC13A06C
37D614A6C348A2EEF756679298AAE244A925FD7DD45F474AC6853BA1445742A6
C0884BF361B64D327E8645F44A1CA3AF601CCCF53F7D922007B1DE3B1371305A
B9DE7D303D7C8537A5FCD09950C59D0B79467CED736D9EE1FC65539F1C5D944E
99D2FDC58F6E9F77C8A04B529CC5FDB9828B77FE83EB160ECB4DDAC282C68500
194FF7CDEBAF42B4138450AE3C9C1B184DF5E4681019A2F1C3406835EA52D3CE
37E2F63D1B34FB1EBDC9A60F4AB8C27EF3B1FF2459F2E6B90131359A396EF818
B1F1A690DFC241EC52D380E0A7B36DC2F7D2A4D6CC0937BF33358AAB8933769C
E7CACCAEDBA16A992E6B88C29CFFFC95F5611273B1AFCF64BD2BB65C137CA282
1EC9838CE391565329147C5A1FEC0452DB032189B0081F505C6BAE09E9DE0EEF
466FB4024114DBC1D9BFAD07695C8F35E5896047EFB77279FB48DEB0FC94009B
FC69A4C12F62DF356AA095F7CC0FEA8683E7E4461F10B8C0035BB079C538EE56
D63B271CA4BD4256B7E56091E388284DBD11F5425FEB0493C31AC2EFB424F73D
1CB7518F207500359B651D4859399410077D2CDBEF60569742932E06AEC82A22
C9AE935A78660E8B4909C37CEBACEE7270EA076115E876426B0F13E5AE3E1A3D
5B471CAD468007C4A6BFEF07D313E03F07D6C18EF2FDB5EC5041D104F4F43250
76444BA39D0891A8962DCCDBA5432CFA52050EF03C0F93AFF4095EE94322F40C
2ED5F9D247F0E3DE8233436A38D5E1CDB6E130DF17959B86DFDD3005F3AE22A1
9AB2C9FD5508090D1AA63699ED55A66D646D83D4055B91393337AE55F39C5E29
D5D432170FBCB19B4C29CE1C9800B8F6C133C983A7ECD803D12B728D604E2276
DA7CB63C93B4D5F379DF239265A61C11462A034CC5D3CEC9A5CE63E51AC2C563
B89563D0254194DE000681912B12B4468C77FED6B293669B9E9683EB4C4567A7
BE6F097D22AA32238BE4D2DBFC52FB6837D0AF6FFC27B43A9CFC90DFE72532C2
593550EB0DF54DF41CB97FA4ACCE1DBA624D04D9389D396B339BD81267D36C07
98F5C481E2DB24CC91DABECFB41C6DB983ED839187D445CA03234AD49D080A15
769A52588647510A48CC6E0EFA905AD6481BAA03613C32B0549273DC7789E792
F012CC10486C74A0677DFAF2B50A51B1A4E64F58210DECF59C716CCB290B7B12
18E734590D1F8326FAA17EAB734FD330D412A44F970148CE7EDE034DCC447400
02ADBEA1F7EA19CCCB839A0390A1C2394520D09923F16F3816C9775FCE5AEB09
EBB656E8A92F9531A9E80120579A2560FDD25F5477D2A3431291FB015BB05439
26AFF3EE9842B22F0BDACDBE7CAD60242A4A4EEEC6955407F7993C2377B237D5
781123303CA7CC3A03996EF52A5BAEC9459623B4C55EFBEAF67A1E128D15E31A
CF330CB47A523E5D9A499C1047C1713349515AB10DFBF0BC3B537C3B1E57934E
C351A8F812DB3481D7677F4E5CF6BDD0638430A4D99EA8B47F06E321A37996DF
61AE7EAB1C061FE75A0149C4A665FBE27A7C8F045E8F36708C383AB60E0E8CAF
02F10163A0C4E20BFA5C843FF3AEFF7F1C8FF0ECEE676A74DD81E8E883109AD3
75BCEAF3987102F0C9D83420D26447974D5F4E7D7C5E21AB5B3C8A312FF632A0
DE2E46FD78C82B8DD58FBAE6948FC4D1F6F1052FCB5BA1CBEE181912E3FC64CD
18587F202F06D6C0255E05FAE3868112C2C8B5CE3A7747D86EDCADA440FE9D98
F9939B7AAAB007CD23C51BC8B178FE624B1AED5AA201D467D1E213B2A0E953A6
FF78374D96BDAF0BD36479D9E9468E90DBC4237103652681322A81E6A8368780
A2E815A7EC49B29EA2F4594EF40CF05FDE79C61F414C4C203C46E6A6B0269F00
A8A763654F5A768CB488A01868F8F5FC71B44F27AD672FADA9D44A2CB7F628FE
F7E2E78B2EDA73CE47DC93CBDA05B6825BF0CDC15AC1C6890F752F07B39791DF
3AAC55B7101EA5ED3DC91E5E50CE59BF04C72EB674E5C394D0D8DA432EC19761
55C3A0DBEA41F63C710152DE098194D1B000DD35DF255B64B2889C780DC45D78
DD1342578152E5E2D00B90A3A4335C6936A3821D250453B717ECB7488B122982
70EAA54F518FF6356D0543D1C17BA3C86CC8B954CD4488DB84446468069958B6
13872782F4D0CE79A57F0EB047051BE634D62F6F164085EB045535E44A60D7F0
13E20B3844B8A87C093937215405A4E4D84599E4687BE17647BEF988B06C3269
0F55C38850EF8A01DBB5C1CB883E95575A8B730A57721EE9D678A759A85F77BE
2064E8CB6A7E7849651D13BC0A4F00E480335E0F5AD979AD59E1B079468F0813
0FF077F66ACC0449643C295F608AD56BAB8807CEC8A8F7CE1AD1497CE2E1BB5D
E4EF910B7C21ADAA911578E0CBDBC8FA2043BDEB19CBF0769302F059E24087AA
CE885BE6FD88F53ADA6A0E01056A396F9E6BEB1B8B2ABC98B7DB4F5159A408C7
7D206AC7C45D7C15388CC763B7B0E6C116B3C87E992DE617DE49620A661AF178
41FDBD5D61718DE52EB4F11723D1D6408F7E3BA414B0811D271B835F0FA0BCC2
0BC41DBD584FC18D9B07C2184C794F0DDDA42481071CF1F5F4AB3D7F57DC9401
64A8FD9C5EF6BA97D75949E232995ECDC83C833441756157E7A60FE8610C7400
C94B3C20A29B95317F7DB90CCB8A2C847DBD3E2E9A7EE41620E83C8ED3A18B70
24D048B1ABE83933670E389D2A9C9BB8FB1B2B942E31A43DDE5BB0252BEB0EF9
D8235977B315C6B061EA822D6F8EC7A6C9F63592C6DB794714FDACD66F22FBB9
D74A4E325B88AC132D54A5A908B5F2A32F38960F40797F869D8FC843020887F3
103FFDADD38034D8F34EBA9EA1CDFA99AFFE71134457105F3B8D3B7E33F4A6CA
A539A3900F2210FD68718C39BD2CADD6E7C35AF7BF31F66FE9FBAECDE040816E
3AC20786DA28A3711C06273B79FE617346B40BA6EEA726EBA19D288B0275495A
5FDA55130B0C4252A18ADD5626450A2914B9892E0147A245EE0D4B3C21EFEB23
121A088ED33D3C48632CACC65EE792DDDDD8705D73C2CD9A14C5396873DCE474
41B413975C0BB0BD8C7F755D67838B8E8B5A35E6BF9BF3098535D75D48F30515
793A51CC50822E4C68A807C1A3FBC4EB639B4E2FFCD2A85F71763090740F78F2
42019C349B65C2A62363907EA4205A0BC3435596988D1C67406AD33743D475DE
1B8637A7FE55DF98DCBE9015D4A4D35B006CE68D9A6ED662FFAA0A6AE5778B2A
1B72D012C9B0525B95884C755C8724E649F9FC87745C2CF446055EF14BA832B0
251D7DE56207EB2E7480E1207329949BFAA4259A32E906AF16FD14F0C92F0870
054818B7AB421E6C1383C1F5750A4EAAD1B895B159E2C905459D2697B2819F3B
1BE20C47D74F177EA0EBC1EADF96CDA6EE4C537037635059DEB71B7083CFA908
32EB06617471F08399B1453DFBE9442EE6339FEA2457831A92A9B47AAA6B3389
4EF46C0E8D70FFD9DB30324F35E3F41F7FCBEC699C2392CC420B48CE3D65D863
76FE392900FA19FEFED037760D1B21CDBB32A2B18E8749620221884F3C2C79E2
436C5D16359395F34CAE8A227CAB65E8F6DAFF1885F4D4AC55BFB532D20254EB
B0D8A2E015FB9A9070A5B29F6B69940F415C1F9F7DCC0DF6D98F56CB1C9658C5
F82408AE2CFDC47580D644B30D7A3FDC11F99AAFC2907180C659E171B0B9FD23
798B301739E51DD451D8071BF1B58C840313AC91D964169F1FE7A3D115E94D83
126336DCB8867A795FA031A2D5C885E8E74D5F231B37C3224D6E9A5A869916E8
FC6927A4FC47E0F66B1018EB89CA320F74C91902C56335A4AF93A4B40C506C13
6E5A5F56AEA9C6C4D28960B6502CC9AB6FC6D10AF305373E1B87A5E462AD7A71
280C2D13FD844E958D92EACFFC826FC39DA0D686041177A902E2659093FD46A5
64338A191EC83CD5AD0E88F635696B78201BCA43019F62AC6FBAD2A4F2C83E0B
909AD58B0FC8A859888B5DC6EDA08D241782F0B701960683AC1370CDE39B2AA4
7BDB66816F5C2444346F2C6CB57E619CACA4B1EFDF40752BF94A98902E608264
DED8C3241F0A9E2C008EF53B1D72088642CDFBF5CACC3AD41CD762C6D3521BEA
703A23B7AAF7BC504565A426421AB1F43F6EE36A253F7CE3745FE9FA4FBFFFCA
E245A23E831BFC85093EC7897B9EC592F01F97697A17967D344A4BC9A56EC20E
40074EBF904E6C116D035CF8FDBA0A9D56E5EDB85A39F752DCA4D16C84E03F22
C9C61D0EF5C2431DEECC6A8344F0B691350DC0E4B38E4B5B5868A34E643E6072
BEB07CED9A9F49C1D826BAC04559C4ECB73A3C9B5FBBCC0E5BAFA7892567BEA4
6F08D78E105FB10252DC8E0DF0B3ED01DFD581E9F3F68DC6F44D503C233895B9
C8592D2455766F3C65AFCA94D0E84C7FC39E73EAE0E4C164585B9CB3D02B7029
73982E4348F14C94F2C72E10C5C92CFDE9A706788F2BDA3EE9970123FA7FC83B
1751E405906EDA213D0ADF020BC4EF5A869DE583309A303CEBDB411576F31FE8
955F98B6EB4F83AD59AAFFCECC01B36AAE79794E0557D90085D8AFC0EC6F43B3
13FD8B3F70D3E6F3C9E12E45F6931C49EC99D5D48F0EC6A4E93F0E03C122D452
957EFA5E03C8ABED884854242913773A08A0BA7DC9991921667A93C1493DBA2E
D817301E6A2B3EBA8DB7FDE63E55A8FCC6397B1993EE08C33AD29C43D035947C
E0E3C276E3A5117350E877FFF97EAE242EFCE7AB02882A61C77612030BC4A1EF
0577331844B38AFAF000199D8719D173F4FBA16DEE1DF371A889E06E4F7ADDAB
C3E019E37CF0B527D14F008E134FA0711FE40BC8A923474034D3E9CA3F5AFD8F
3024F3B662231E4F893C9182BA353CA00FE9D642CDD430B43E39CB726BB0CD25
79429E7B47D9A2983028A46C6A500060CC7026F32A3ABB4555FEE9A1CAB183E0
5EF9F3644BF2530CB119078ABB9D10EEC43D4ED87516E6663D35073AE07442D2
4BFDFDB5119F46AAD6903CAA69ABBDE20459E73BD516F4543A276A4733FEA246
83F2370B1ABFB841B44E5800A7AAE8E64E85CB340420EAD844C7E336A2E47224
D29972E8478490286E95B9E2C710DA59618F442E4009B55F53BBA833A982A0B0
0D7BD3B300915D50ADA73C3356E66B4C65F0A5BA6F0FAC105EF2FD4C3E73C600
3F3356AB44A01ECAC042CC84EAF43DBF2F4F6B2A4626DBE86A8D22EA4756ABD8
1C17C7949D74660C459ECD143ECFCCFD9F43D0872D200276F72734DB97A902EA
F9C9DBE267C618E342E8DB79845CC5FB1EFA0FA399B62F4D5CC32B5445B1A53C
179AF61F1E92D27AEE0923C67DEE00878E5D449CB258019F05206C3C604F4F02
C815605D0AD2FE07CDA8A9F9B7BBBD56D657CE71AFBBE23902FB84991A570359
B46B8E47CED863FACAF232FC4C567CFDFF5EA011A3FD064B44B36536A6E16F5A
1FE2F7350DBA18812F95C481E16A0E04C665C5AC65739E280EF5A4E4BCAFFD73
20EFD5EF24E8F35D7C99EEDEEEA3F4CEB65C176C575942CF8E39B599A0A98E27
03B16A55459AD1A2391EC459021CC018FF1365A6CA4227E36492D034EBB22EA6
A554815A33DE938ECE80621E111F0F585D8E620B5DF4F22576D4CBF215CCD2AE
1B95D24645DDF0BFB0CFC6B0268B690DBD72C1D8A131BD09E654F2C0297F26F5
E4F614F90C6FF7DB1FAD380ED084016C2559765AA37BA1D1CEAE6B3AE476ADAE
3DE5D771C66E86F97387D4AE97D6E82D5729F51F009BF9B0C16328F899AAEE0D
A6833D6AED92FADDE88D898E777504BCFD54D41DC20780AE14499EFAC62D5824
8617E663E665CE0C63A4BF83CFF8DBBD43A59AE9ED49EC809D2253DEC9938502
07D26D30BE38F37AAD5F98572D17226D53A2E8F3A0CE0335B982EC3978234DA7
551F8D308D1664D3C9082B514153203464D59DA446BD7A4D54158AA1921A2E4A
8D07FB0CC345C9BFD0A320D5F807D26C6730E59A7CBCDE46F1D9E6E73B8B7934
8A769E108E3CE0905F43B8D5AAC24E754531625C7E2D348D77C8C9AEBACB9729
2E20DF6B533AC18A12E831BE64BF58D7A1C191A8DA07753BBD25E4098051FD69
C692DB62116889ED677630478634CC31B738E148798C562DEB10BE7147B1B12C
4511BA9AE77966373D4941C442DCF13721304BF942B655D5451BE88AF32F01DE
8CF1D0630C83E868E3B0BC078EF06ED598D6A3FCD9613345282CCE5A1DE47A9E
5D077966D48B2840B34412A949B9E6E8CBCF3B325C9752608560D837FB67D3FB
4AA287E12D8D047AA4850C9AEA7A712A5B522883D97C025A545DCD8080F2EA5D
5ACB62336729F6833A532704998F0ED99FF5D1E8AB55B1FD07E1FB10858CD604
7BF6654B3265ECB95FD1F960BD6BBD87D69D618627038BBD321DD2382627DB79
99F5609A67499A9A3174EBF2EA80CF9E974CBB44DDD6DDF8096D34972821A46A
8C0450FE94C410ADF8D10CBA7D2D7C79042ABAE0D5A58D51A233DDCA5EC220DE
B82C1BE53B995AC817F3F289BB8EE99529AA914D7E9B536CFAF78E601BC25C3C
0607F231170B0B59B934702D90AAB4B8050E613C7E2A38D5DB5CB7BD6F32540B
1DBEE4702111CC90F412C56F0362FC600E7B45223F130632797AF1A7F5D8B367
1077B68EA862C109B07FE3DEC76F63422AF4871D277D7203C250336CDD8C968F
A0F6D16BBB0D2E4502ED15CF5C84B9758412686044A5707287113E20E00CC445
AEE444BCEE48FB51899F44179C16CA8876F8BA1BAA3C52C79489CDB2F0CC3332
50E823308C5E67FE56A00A0AF2BFEC00EFBE927657844A487D0F4149C71BFE22
E5F5D59E99F7398CB420DEC645050DFFCF4D729D7E131335C212B30BA91220BF
B289D60220E96BA1E22403433D97EF143C518E3BE33F0B75634B0B6C43039548
9A5ED95EB8E3E305DB3F493C27EFAED21C6B174379E7D6D005D4098EA5329398
6527C82933022AB1D4EE6C54F0824B8B9A776BC5F5D436CE82F90717778F2171
EFBFECB5EA35F65BC787106473557D3F30AD221A2F69539F083A40D79CDEC2D8
BFB30C8379B9B06BDB57293B5AC896751E3ED13534AD4D1FB0083F24DAEE754B
A92BF401BBDBA19FCD78D69EB22F4AF2C72C0A1AF34084F059218A1F390B66EC
6C47B2AD5E2365DC6290BDFA89EF3BB628706F1881D0F587B5F65D551160F8A2
DACF3AB5D5C75961AA5B9A7593B0B8C14B0E22D7D747B7ABF8D8D0BB26FEDC51
1F8B1F13628146E8E615D349ED779B787232605BEB38346E307960E1AEC36AF4
62F417FC15EE7959F3673304FE7049A06FBE918A84EAA426655DFA802BB418C5
FFE183A2BF6CAF5FCD19633A3106DBC8FA0573556B985A0B7774BA00D928B046
49D66A9C4D73972A8F2EDC972E726BAC41F3EEB635AA62ED87085A15E6C0579C
579B53B8F5622F6DAB1ABA148C79753DBAF93A85B95A5D7B6FF0E8920745F49A
1C357C6F4D8F870AC5F00FCEA0F7DC511442F2DAC339FC1A9DD200F5AB503C6D
C5C7388BB6D134E323365091ADF5D0D0D820EAF9EEEB8576523B2E0FD71EF446
D4107AF282D8C2DEFF8C4A162B94C3BBD3D400B495503C9B8FFA691220E767F1
6E60E81EBD1CEA9CA2215D56E3096A695716FD0B5004A013D4BFA7CFBB615F7E
1A84B43E7DCF61BBF8BC7CE38681FCB2F3716AA839E990A8BBEC64924ED52610
536AE054B9BC7419E45ECA2CACC001792669DE7F11CE8CACBF994B414731F0AA
47B5A93F8DF24B224695DE81FDA340A865FDD788EFEA79E1CBE2A11BBD869AD3
E2131253789C00651A03320D8BCCB4B0526B9D16204C9D6FDC7AF031D0480486
8C0C48A14AD9C3919B27B200C91C534EE0F80A7158A53D5C58BDE86E881184D5
7E58B308573318B4F52A0809F8B46665F95C25AD71DDEAE03B6F470B83C7E434
81B21551D5D2A5622F363BB1FBFD138EF1A6925F644B7F9B4545249F2E609756
2279A7090A72537AC76A83B9E182BE942105B285E65AC5F56E5E87E1209E4F86
EA189E216520ACCABB93D676F2D5CABC2D1BDE1E115BD2C8147216505A8DF7F3
07E72714EFD123F69BF90F7F506EC90D11CEBD9B22919F0A11B6F981D418FACF
E4B3DFCAB187A938CF837D5FA58ADC83791A685E0EBC0A948E610B011420B3C0
27FE2C63004FD939471F9DB3A710590F87395A494DF58244CABD257DB61E13F6
1C5EFDFA8C223D96D1D5B9CE20AD9511C44387F0AE3DDCA1D950E0F67501B18F
A624CFCB41C4AC208246C197114FDF5F688F5D0B06512FE791EB65AE23598A51
E2CDF7714D94E9AF602CB07D3813F871C07E725DB927C4A31F0982334E7D253E
6E791017B0A4833AB0EF27D0ADF194FF496587A35AC0C3E3D05461F2D5B3CE67
0E487FEE869AE617B0A648C480E6439EB58B9886B2E14395844E4D77F6DC75BB
2CEA0027574A67053420FCD10F1BD67168983E9D1CA179F0FCBB7C8EA5D1D3CA
DF06CCB3AF75B06892C030363852D289550E391A9969190A1910061A1143CB5F
99D90FE88135E830593F90FBC61ACAE72B29A2D2D1B66494C04318E1793066A3
687BB6A2308F6FD505E782D0EF15D52165C16C8AEB2DC540E516B0422DFC5718
733EEEF10A2E54A8082A9925BA3012066F741D1858EF35C722DEA4F0B3090153
5E761001B77CBD0AD5633645F38705A9B01BC869FDBC4831ED932CAB5A7C83CE
622967C86ED8157CE246CC8D5C9E7A1849F7075AFC5442EBD1557B0BBD61A1F8
E23E00AEB14D517DFC82BBC419FFFF1FA01951EA1A1B07D25605542289CC3999
23B6A23547DDB55810508629247511DE63512588638CE83671FD245FEFFD1326
F6AABAF5E3424E74F7C7B6D419466E1B4B53ECD790872E10EFCEA52C6426D5A6
181FF4612252D9EEC7DA6EA71EBB1FA9612DD39C767B8F89EFBCD72A65F33BAB
9D6973D7417625005D32E05A0635199ABD838240395773D0A56CD8D5EAC3347D
64E379E2180D97B5466887EF072440A71A598E1EDC586CDBC2DB9E2B9D3F77FF
F0C70F25DB0515F3E30169F20A4A942B1CA01C99DA5A1E2437F29EC64F0BD0D1
EAD4D7A3BBF370D610BF53706A239828DCCD277889541DB212A8520DB33CE80E
6247050A0D7757A4BC7C0380ABEFDBC423710363454E0C26166D5A49AD37BCFC
2E5AE335976E04B58E74E6F7A25D43B104DB39F02F686DE4B50AC46A084588F9
C8F7BD13FA17C88D7BD2F3134C9863FB3A3A61A8F48B42504F615C73349B5C7D
85311EEFD1B1AD384D8ACEC049153D3EE1AAA58CAB8781B3E40A7CBA266F62C1
2E3A1858CADC20D2D6EDDF9920D5829454C1F8F68236EAA0DD84A034F5B74DDF
37F8EBB54C6F5F57989AC2E1655C4DF2F0ED4B1D246651DB83C3ABC223CD1A57
DDEE1E04C3F6380C82371EA238CA32283153EBD69D5CEA64384ECD2E36E1E77D
0143D35A5C72261EE1E5C83CB9B70247C3BAA80761E6D0CB4AD148160A9960BC
DB3A7D90F035A8B1F4780367EFF78F583074BE1B7F2B98D6BAB7B6A6A5229D8E
ABED2926CA8D9EF96F80A5FE38B622F07AD60B125808924C4B1180C72505FD92
EE3F742DFD90EBDABDC52A6C5350875292D6DD5574E0545AE37888CC9CC36640
59A1FA3756805EBAC7BC55C55C87F9AB13B8D26193282711F05FACEF493B0CF5
042F3175F55ED104E4DD2E5737B6583580231B6C07240036371F7864291A3B3F
753DEF98426130A132BE56C791BD5DDCDC096D86A278962BDAB5A58606A3F64F
0548911201FA976FF83685EFCAE16E6CC53A85DA7A6ACB11EE9ADF9D0CEED5B8
D40486FD78CFC663A94C7206131AFD29D92DC4D19070C39FAF7CBC59BE02F78E
6751379CC64D540640D49673BAF25A2F06021E1E2839724420E280013AF5E08D
1BCE5C9DECE27A3540F510D3F0F5070C44375E9508D28368D77C3D743974979B
C915BC7801E7956F4E5182744AB6062C8460299AC1CD0D62BF85EAEAE51E4D7B
7D66B4481823B60F897BAD93FF3BD138B0559D3E5887B7EA9C9C54F8335F55C8
FEF33F4CC39C1712E057311DF474799C7449FA8F57459D1824E9AD6B9F764E26
8D0F02C88423F82D718BC9D355FBF9B0D028528F61F0B77F668BC7CD4399F081
41D0E905B9E5E6A4A8617B8C8D096582D60FF43C25D9DB2A4BF7B1D23AD24A77
9686FA9306D7EF59091D88A2920782FE45B92F42B681F42B08A3E578F811D56E
CE86122D3B6A5A0DDC3AFA5A8C8D8FBE676850B8D7CEDAD47702CA088550B569
F51805F38E5492F48B320DAB789DDE2180BDB1BDA7D33486570449498552A596
268F779B839A4B1ACFEA93279C7247486D79A3B6287839D60837485EF58E37EE
F30EAB487B6E7AB230EBC988C57C10C8D633FE44C13336BBC3B0D66BEA8C3535
C7DB54931A7735D4B8F6C83BB99996E69EF6BA7C33969521426DE6B8665CFC00
99E230D65CD5B88C06C9B17DC14A6AF66EC76CE2FA1DAFAE388ECAE3215B1A0F
630E791CD068777D347A8B62F439DFE4E0371AF3E38D7D0FCCB38DF117337C9E
08B4444EA5A2EDB88B7AD56F50D0453B220D37B35BBA0114DFB9BD5BBF6D077A
0D099A4BFACF41265DC7F62930595FE05C68E9B56A94D88D8BDE6E59554C29CF
712B514A10C77E972A84256F08DABAB10855F796ABF829C31B58935CD52322B9
9DEA73F065127622D7CE3BBF688ACAF9F67A367ADF65C7134AD5D0447045AF93
358ACF5DE07C87C7C949AD5AA059DA3C196B7DFE837D30F0A10FF0AA866D296F
AF5B70D8D7A6DF940E23FDF870E2858CDBC2A33039859F6921C4B1ADE33FD146
70C66F070D8CF7E7607B46F125476A3F7345E63963E93778DF7BDD0D8C8C5FBA
201957A99A822811376A99B791CF89EB17FDC84DDE7E3EC719B8988798608769
B7BF014496E3B6025014C7DA6DE40DCDCD56284ED6CA83FC0772AF6F4BFD487B
AC170DEB9C61BDB883E9A3AD48C3C5582999E5E2ED391D6E1D1B38BF65DF1F1D
A5439DBC802B4A9D803BD635C059299DA2258ACC3A750E94CFD5C2D2ABD635DA
7FFE17B1A12908001FD53B47B8613BCDCBCCB6F6229A9F23C595488449AAD50B
17254E6D298C5297546C686EC19656796DFB9578F354F77F9872FFEF1A8BEC14
0BBBCA18EBCFEC7D67E21EE5DD0E65B1ACA5E21F57C3DE24FD2A97F0E54419C8
9272AF0425D5F4A5E2115A98000F2ACE390AEB0E17D6634E70F6C4B88D861F2C
5FB5E41A3F40EDBF3869F08F704C3E74C97FB230E0B75C9BBED878E943F896E2
062C278FE8CB356B5B756D1B98F491974C0FF0D79CC68FB1A5DE7EF8497F2B33
F16483BEE8E3DF44AA50AA5B9B4F605E66FDA9AD9205E0AA356C9140683F0E38
7C5342BE13706001AF97C93AAFC4730C6B5A6B93893B030AAF93CE31EB88ABC5
44DA7787E076C6CF15F651A5A8E2B5A6A771693C64FE0E800EBEF9EA787C0148
1ECBA54DA33831938E9392DEF7594DE827864CD1D0B5066E8FEB205E020B27F5
307E54B6F4A4858CEF9F21FA454899AAB19B7607279862E41997B61DCB970719
1211F0B4D9081F4DBCA79F45F2B1FF7E362CD526B5F5F04703CEEEBCEF370F73
E2739C0AD522151CBB4177D8F1010BFE5562391A36D0BDA8D885F87D1FB45A08
2DF95AAAEB341767015C06AC1DB27D184832D6121E7EF9808619C4C3214913EE
88E98C10DD94824B4284206C376A1D9C560552E4C55ADFBD5B8AA93DE8E7A592
8485765F00826A0863BBD83FE8C91351609839B4DF1A8CDBF0635B161143BC7D
B2C4C77E111159CBB28BD56725C287440105E7C8201A83C537708BD4A40E5AAE
109EBE1DC94DE731403F1E52E98102417280E754020E244F0C7F16BB2B05063E
A52A7F816A57DAF0DF1ABB691E8B166FEE2E3F5F250BB270D253D74984A43615
36B571CADC60696F3EC64608C2556CFAAAF11A5DEA460521C4A45EDAEEC4A92F
9EBF781BD5C69282459F75ADA02D7ED5D348F7CB94C35AFDFD68CE7DA625F13D
9C50C6F9356F64926840DA846FDFC4A444B2C4A4C306E0B4CCC76A5083B2A719
28B64248033498F0754BA0F7BC8A07C3323F97928CBC7B751F8E3E567C283E94
714897AA6F8C22E5A050397513C0DFC1233691CE6A5D66A866BFADE0CAC16C59
006D0F7783B93C2D6F5E4A4B898478E82A3DD10055B80BAD84AE5C0F8B5EEAD8
E0241A38E993C5466FA10496515D1B2BB3FDE76B58AF101A0AD64320E0217F90
916924BEAA096CCA57F3881F60996CAC3A8DE48A068D1C93F641BA78085A5611
48031C0FEF01652789EEBB91F094E6D53F25BE1E099B6A8E0C9E2BC216AAEDA4
B50608DDF266F1EF58455C3E3B8160F1F75098C023C98AD08AE609E9779F527A
4D8274AE20C67B35C0E2A537063043DAA85082AAD1615D87EB2EEE8994898397
D49A8C58F55543D302E766E04B4C520703ABA134C0577440D6EFFF7695C6CFD9
A6D12C427C31C16BF047C5AEE9C5C70B67BB5867F4412AE96938C72B2FB30162
8AAE6FCDD03EB229DF938436AC6D46C4B0508BC14D934BFFD4E545E2A520F50F
50A9995CC47A508E63B71953D842802A3CE782C111A1BC8909536D4D575FB788
AFE76F90742C8F295929F3B38C4D2A07F2F83A8E22614A72FFC37F7832DA8FE8
848BA673F2EF8FF579EE596BBC4781D76E847BC49AC13DD1B7C6D66E54DF9E04
92A379469D4CA93A03BA525DED67E27C698B5135BB40CBBD4D40616D68D7CB4B
927A394914DCFE051D572E575CDD3F0AD0B4E46FFF7E6991914AB54C15AAC56D
58CA72420A3B78F5C35FF0DD1AEE3EA4608768C3033D0A0FB4B6D89FF0F07276
434B5F91C45E12CDBADC4547911BFA0D2BC589186D24D5FBE8896165CBA7FBAB
FD2A446D883D561A94793EC689B51258552102A7BBD92443256D84E299496647
5D2430C8EB88E244AC9BDEC7AD1230772D7B98333D5398A82465238CAEB5D578
91E7F42C3CF6E78046CA0B3AAE98A934A36EA58C22EE690EFC3058A33A87D040
9B34925087CD0919FE92AC6A1A97F96375A3F547006A7EEF960736D8D8936383
3943B957A6864A7656C8B50C2AE3AC93B43A34E66ABC465150FC1FB3EA1E40A4
03918ED368DC3A5F85A53F63683D1A7E7157D8414A7E43D7CDEC74AB621F4EE7
007D43B6ADC79B431641F8A518ED0C6577A9AA08995DA0BF01738852B06C66C5
A798A8B866122E6C5C0259E2410A72D950C9A90DADFDC11833C9359187941207
25C03B4132B7BA25E3B70D654CBA4A65F0E80C27E91EFB8B0C36B3B345AF3629
0A973BDA75735B29CE3037B06DD775397C844678989C902067EC814CC8E58E04
62D2BE053128E0AA631D4E99EE0680E1FC189439DED94966CBFB46E98286E8AB
5BBCC5A8C431D8D7BFB8D58DBF5688AFF3541CA173E13F711FE424013FEB954C
0AC96111868CD4B05507066A5EFF2920FFFABB84BB29EA4C9038E62266525677
BF031260CEFBADE0741096A0D9662D44654351CE8F69FF905AAEF9CAE80C6547
ECDC80EA912A18284AFFE60A0C7A2BFEB165D5351D5AA5E15D5495DE6B1C067C
7F67FD1FF0E9B41FA08A40882924777C8875D901C9EFEBFE0078093EA47D0DA5
22E23E572EB6BC949688B30F0B4F3FD3AFC9CAA04A796E5AFD68DB354920B90D
A95B5899C9FE409D491DB422E2CF3C7350087A2516121CF4F0EAA6DBA4B015A5
0D5DF3AE31BA522A8A5E31A96A30A45027BA2E032D06840B1F569632E3468115
76556F4C0DA4633269FAEB5180A8FF99EC68388B11AAEECBD33A7E3016DD6362
F55F57D04479627D1A70288C3CBA2FFCDF1A4368603D6FCD4C95B6583129FB83
7AFE9E5EA65226535F722426F2903C9251B352D6EC3623F663BF60052545C40B
1E231BD1FC98DE5F99B731FD69660310D16F245BF601382DC71861FD73AD6795
171475A728D54004CD5EBD12DD871716BEE1D3FB05EA8F003B0778C5D3C4BF3A
029F4672DC7D54E645991E0BF04AE88D9DD700AC03427F2302CB5D72BD92E6CE
BB7DF8DA30A286CB84C14FBD5C8943867A5472965783F62C5EE61F6362ACF70C
F31CFE3AEF9A63851BB9E70625A614012FE83C5DD180B6A7276301753C6BA65F
E8DDCF6896665DCDEC3B2378F20710019695188C430E6213CBA49C02D6640ADC
A7C8FF82B7CE2B2A34C7E0359D0ED47D8BC754E18AEE38FE96A5EE6334C12E55
B24E5CA3AD0E78C5B2EB2202A63AC37031CAEE62F37E54EB76D9D9A73EF32DD1
FDC8897B2DF9FB4B712ECEA11A59B78B90C463CFD7F78DA92D580694D0F15976
CFF3151692E2041F1EE24E83D3F49BB724AA1AF05C99CEA1AF6B1F2E2DEC719C
7C32CFAA326BB262E0D8095A1A876A0727062873B96E9DEF3EAEC6D5B9A045F9
280D79AC9E0F3A532BCF4D973B036EA5FF44FC25DBE8A7DBD18A8B998315B370
38C3710D04740DC2D25C12E545681EEE5B8A6C3225ADF683F07CFCE2B470E0CC
73118F4082594C8A83E64FAD85C8563C2D5E37C292467A90463679A22F02B796
2DDEE91AF18427CA61F1FD7081F840EF2258540269ECF515B0167E8FC7306842
AA09412CE50BBCA640F408F04A205FA1D8CFD55EB82E0C722A3E13ED3EB7D8F6
FFE68AE4E5F17E9C2FCB10086C4814616644AE88856B57689752D94C984B3D0C
EBEA723BB77AF017AAECBD09EF5935660B84B213E16DEE8178CC1F0438842223
DE23A662482960E68DD0C5AFBBFC8FBFF9AACE0299E84F822C50194C21EE9169
3A69EC5098AC5930545B63AA9E1FD26F26026BD1B23D72DFBD0C8E138E7BD40A
F3779FC46370B7EFCBB468011EDE37E2C180BA49BBA59E918E4FA36BA2D047B3
E52E6B76FA50612695EFAFBC424FC5CFDA2EA2EE5BA19AC90878A3B572BBED5F
359EC5BC402442BBA33B2663D564412C439BF39895C6F0BFEB3F5BC00E02A4A9
C920D204663AEA641FF114AFAB56EEF6FE21892C4A336A92E899C08C4C944366
E525FE790BECA3612B880E6C085AF2B4B95F4CC83D93AFDE394A7F95FA260EA1
3D49E65FB7D63FDF71131FFF47E4533DA66CD991640317676B341B8E86B34428
88C9A7C62369E67BAEBC7F43467AEDC11C2C6FAAE9D26BFF842E08759BC802D7
5BE7FF4D4840DD60FE6DA0F3EDC47906C3116FA8E4BAA2D4068DB7BEBAEE9986
BD42D61F004F7512B47231FCDEADADBF729A064B8CDA03B7F86166C6E95B3D63
FF2D022DAFAF5278C82612E8D98416D772984988C4219051A2214B3BFD198AC3
6B9F4AC752BDC6A2EBC56A2E020A350D31D3273FE62FAF4A8FB87052C127DE51
C056A7204805177756B993542AC78E8619897D62A7BB0EA1CFAFCDD853C74B32
2A88756F7366B3855C49CB731712B81CEE4A1CE24D144DEAEF5D2D2A37F6655B
2F1D765DA8ED037937F6B598BB0DF4836A65B2B9B278C77FF850296ED7143D82
3FE8B35068104B041A81390F9FD66A19E206C91D07843AA7336E277F1A61E9CE
066FC2E6B7037A91311C806CF7B75A6F9A5788233B4007135F137B66161F7DAB
542E6538D0BB5F783F3E4CE5D7BA588590785C36322CA18E488D596E212FE0A6
7ADBC2A0CD63EA4F91076D6352D27C9846CC090E752DCD752DDA1BA07D21852C
7E22B7A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CFFECED8A185A70BEF74C
9E4F13E589EEE6F6B30A93672FE809FC44898B6D8770B6DB6E6F30940C02CA5B
0DCAAAB23C951FC844EEBAC585102C8B6891FBBE242CD87D60F758FAE0CE7863
4280E83728A01070816ED400EFD3735C203FC9D9E20E1524C88F3AC5929C7A6C
7AA02DE071D03CE59DA3E2526DA09B6971279CD156347E7E46A86F670411889B
57529351200BF30403E4ADD2DE90C8FE3AD9613A6CE7066F47E72FB46574F5AA
49B3A77662C2EA66C4A6F03713947D74023612948C3428FAD7EA821F4DB01B5F
967DF6EC4140AC4E1FE7630968C2FEEA9583AC25DC5807A0577DA629D93C1649
23D9EAB7B4E5B768EA4B1F96983772097BE3F07125FDAFC70B9544903F321994
7F5AA0623939DE63A0A4CD7B7E396FE83B407C3A0ED107EAB4329FE7F9C68526
5FACA5E01872860EBBCE04B5FA43CC9F61C88EB6AFF4A16CD2F551F578189A32
85E08DE00B8CDCEE93DDCDF5BDEFB5F08872C77BA070C1289592055C47D03D5D
37D781421D37EA7C154C3D924AC798BFC4294F465C3E9DA779A34D7A772A4055
62172117785B75C1EDEB861AEC7A5FF3D65831B8E50C195D051716E2CF2657A2
CBD51A828AFF6D632592EAEF5EF11C171F01B1AC09C515B31676917D11D6AAC4
F958DB61B11A182E1AE5A5B5EC87675B021FE9D71441E352111EB6FE859388EC
DA1CCEF25EA04CF7DB2B05CCA9BDB8E396D6066779D9CE0C778599803EE49EBC
AF6C6E111EDC92DD71E3FE4DE1CC269861657DAE11CA5F1565C3CEA89CAEF813
B1C5E2DE5B1C88FADF22976279F1B8285F5EE8B79E1AEBA592BABA2DB6F3D663
808C2BB6B3BE5B62FFFD86BA10BBECF72DE976D89E57B8BF3BF048E96E8E352A
CE3037B06DD775397C844678989C902067EC814CCB0914E8D98416D772984988
C4219051A2214B3BFD198AC5CDD9EDB93D121B912F50AB9ED5D4D7857FA703F2
86264B6E24BB82BDA4338A2C02B3B2B4652C1505559F0503A8A77E1BD0341FD1
D19F6899AAE6FE5A9599AD0FAA732D20717FD8D10B05176B2F7E92EA7F2D7BA5
CD8A91C01AE80B672831C286C900AA931E0EB43F0E12C2EE8285E41F5E39371E
E40A46E2326CD42117091EA58204F935EB454FC0099D03A9B6B8CC0DBC8C7C6F
4F0FF1F348C9D3F1FA454D98E25393738FFE3A375DC205CD8FFD81E90BBF3057
9F13EA06A36999A42CDCD5D4FBF1320C845F3F37903DB2C5992F25C808A22D41
7CD842CD3B502C8190F3DB8EA4FA5B2E8550A06B3E549773D38AFCD73D4DB6CA
2B22ED349E72DF3ED26088EE4AC055BB4D2F88F3AED9A04759128AC4661DE897
9672FA7FC96AC8E2461B01BA8671B8D54C8637E18847234F5123B210DAD86B65
17A40DEE9675C598C98150A8899DD24D4DF528C97303D5D1403CB74B3A064027
7D537A6A624F1B1766421CB5247CF05890271E43A2E5BF8E85957BE7351C4A12
8D4859E7AFCAA167359C8C322224D7331FB56520C1A4077C4E0DB3A060155BFF
5D2AF78AFA6B53BC6A79F65AFDC62ADEE916FC54B6E03A2C248B4CA233E2C25A
DD2FD730EA39BC8396874506B7D2BF7DF3EBA27244E9D35F1EE8EA5563D046BD
8990CA3F0B2956BD268608F9312F369CF06A6E34DF084EBBB3DAF7B5D21F6CFD
57C54295B99A0719C9B9B45A2EB7929EF206520D6F9C1CB62F3958021E4F7A64
B77EA34F99843C388AD5EF929328700E55CD9763824E0FF1718B5F45C6372BAB
01A1318F56F0EE5E5EC8E91FA2E4FB940228C74017D2A82AB726E6C1384AA205
59123B2FA6D205B4B02D627A4C9B88DC4B0A1780A9E73E800D24A20836A17B21
D6D6D508EA724CC442AB836DAC4800CF0CAD9A5CD25D03BC8F791EBA56F1F2A4
F3432E34EBE533C81E373C26C2B8B8A2A90B6D6C9B00B56052E8DAF70E76FF31
98F5CC7AB19ABE80A1F084F2DFAB857FEF02477AB140BF511B28759BD68B3156
A6864BFB4DD96289003A1FB9DA5EC6C7229DAEBDB3E3B370A6190039BD94F21D
CD05FF887330D1BBD004168072DAE9C7FCA9F7EA5A376A808EB33CB9E6053A93
2710CABA6E61E6A3419D0ECE9ABF70F2AD36B7F21127E60F1A6A39E6210AC25E
07666C603EAE08B9BACF6EB457A82BD56B10A8B5B3D237D93043A30D82AC7A96
416274CFB2E5004AA42ED962DD8D3DB70C51870D9ADD147E7E9A41383D1E6379
49922E30019D6E645EA2B73CCF0BC0BF2E27A0174B386F8980FE26A1E6314ACB
088F4DDF2EF2810260236764102224B1A63A6CCFFC30819D7EB2024DF4B5C25B
167E1D60BEF5AD61EB798D2240D716C6A657C2EADEBEDE7DF44F84422EF7459D
C1146671DB157C352CDFA1107C43E2F99BBEBE2E4AC9E2B9D116034191A1A804
EA935EF00037FCA7120F8F3A8E42134F1B6B0C248D56F247AA6C310846E09633
99EB3291F47FA0A05D57215EF9299485F95E01DBBECC96C2364C2A18165A26FA
BAF878198E2D8F12D06D2F587530D12214A3CA55B5C2F665746752942140CD48
489794E223CE3A1F5A84930FAA87A50C937AAD31D823836C941A80F6C614865B
4BE47ABEB28963177FA2B749F802FECA58D6E39A107ECE8A3EBE7E645FC5187E
17FEC986E9DD69621D48CAB56919F96605E973962E6B9F482833B69725F53363
FA3896798939057C62243061C80AA175AFCAB68E295076C40F76B948F478C099
F8AC745FF5F02CC49ED6DC4918B6879A73B9D49874E4588E87B5B7B9AA763F56
FFFFE90EF2DF0E9C9B46B8F504AB8F1653CE82E2785D9B825FB1D768B1555C02
ABF9218C2AEF18EAB42529A1299D47EFD1F774F2F20C39807F45561770BFFC22
E3411E5E40FF245992A0EC32255990745379D6645D0908A9F5DE65F7AE355C2A
57257C66AD358C8502BCBDF10E7427ED7C134AB29DCECEA53CF0C82B1A35C8D5
B1CC11FD915E099B07C3165FCA696D5C832A938FF436B01AB54EE1CE32BA926E
34A8F8C31EB0D8A790B4EE1C2F5278714CEEF1022E46E00F34BAED85E4F4D9D3
9DA1743B3E788714065E7A2EE82A7A293938440D23287ED0899B62EC9F830062
209A942EDA2F5B354E5E0D31B1CE70ACBC2940E23F8C860EAD0EC4977851FF7A
7889C3E42EAF7947EAAAB55B45B7A5C2477D79AF990E52E86A719EE45655F135
8FF0229FD08DFC5122B438A5A7E433EE12C1D116DE33B3B49CF35879D018730F
D0603AC8E868C48B1D5BC0A9F9A1E08F5F5A67D699C2FD288B9EF0C483AE3362
5AE0D5FC43ED77611542E2C99097801AB22F9B912FE3C9EB6DEE18395961900B
71104E372A4127A3FC408EC625E310DA3E7E84BDA3755FE793327BA09FBFF066
2B93B2096355DD002464B9ED9AEF4D661847BFB889F83B3CAD005996A6309A63
BEBA0FE32D755533EE45BE4A05545B974F452C32429CDFDEC06ECEB81B33F5B7
008467BD3BE42E37D37E8AF8CF4990D3377486A6E2D6AE6A57D1934E148831AE
7C815BDCFDCECD662966EBD67D279B93C6D340C9839D58A365195647F6BCB28B
5B18C7EB48D22E71F0F57E906AE3F15F062CA4814BEFA3F91C6CC407654A8C31
1D3B3C8F5901B2AC785B222E5DE26DE0D19C3D69EC4B6AC687A6FFB981919CAA
A657A12963CD3C023951C59F3E09157F87CA9762F00A7EE3605559F8A58E88F0
4C3B65660594E0C6B30B918A0DC8FB6906B9FA04C041A0E29BAC5703A83039CA
96985A76B618CEDC4CCA777CD3B07F91EDAC559A220F29084DD86CDAD6DAD7C4
39AA1F5BC1328762B96E5618D5C61946BD514AB878AE3F0B4F6290DECDBC6EC8
DE1D1ABF47511E02BB7847C86E3048847925F29C32FE318E59D899C05E423C08
9EF4C750437A96608C15FA4488BC2EADC60BB6225D9CB6CA887922B117EB0E79
EB3B6223DBD6D9906D0DDD6FE2EFE4BE86B229C2B233290AC072B730A363770E
0CDE8E86FB7518C7167965839712B6D200AE32705CFBF7A12EC415F3FD1B6DCF
E6A3BAFC4056A749DDC15C7A56AC870774C97200F0601ACA6D1B02C49D0108D3
846FE48A7B625E06907E87C9B684DB51667F78AE20CEECB1FA03A7F754DB8443
01625453A53ADD3A61122B4FF0E9B261220CC9B3060930FB24143DD7851B5539
E97DAEBC0C57E6CAD63197A867D5F3154883CFE4EF04EC9E38EAA65D10E1FED2
CFA2C4BEDABEF57FB84699731A20512085CDBB699EF96F00595123200231A7CF
B6D6CBAFB766754C0E8934F9AB738930EB73C6285C7A9EE4B4D7B5CD62F6203C
31D9CAB21566E8B91B30617F19CD582733B90F838458FAF9A69E0C91C2B54344
13F1273293AB153B6EB645F0DFFEC4B6B40F8BB198C92D6A40C4A95AA66BE989
67F52A855DB02C498F12BC658A3D911E2C01E031D302E8061FD13C0751886DE6
317B0D285167231B9F444D42F17CB182EE584117FC8465AA358F8B109526FF86
F3C80A3608FEBD0A9B6A992AA1FE085A1BDB04A65CBB6605D4D72E11338D87D5
B02ED29A4F01FB87292A9B91A4B23807EB0C84FAFA0C6782176E84F22449ECE6
6F8102383FF2FB262290DF6FA42FF0AA320BEF81012BC8764C57875B3AC9698B
3CBE8F262043BABEC3687E9369CF0DC708EF4585381F74DD1E8BE9F6E73E4CD5
96FA6A922B662575F23B53B7C6B245AFE9025E9D5037199C9877FAAA0D6E5613
A6C69F92676D92FBF650153333F6CFB9EAAE7981DC78C5FC2923DD3B2F199D67
78501F4D84943CC2883C98DA8B112A75AB907C4F9481F0657D20899EE8C2CD56
668F756DC5B9CF1C87BB9DF698A01BE3922F1CB7DE5576AF240E5E90DE41FEBA
464B7D1B128EE29FA14441B9BCEB72E11C13D38EFB1B75435ED1B9D1C3C75A8A
0D9806F619DAFC4259C849EF667FD32750F78FA3820035607BDBC19C7399F905
08F5C8BCB6448230C4611B33767D290398B07A09A94DBAE6081AE56C35E86563
6E5CFA757AA5E0CEAB244A45B28176233EC8EA13D191A136FAD0C22A28CA6482
17EA63B860A9E6CAFB30585A1A3021EC81072BAF84DBF3DFD4978E6E330DA55D
36C16FB033D171D045294308645750A6DE9A6D212EB2654698B6A652C4083763
B9D9E1DA3080D213BCA3465C01DC8B9E83BDB1BDA7D3342BC7FEF9EC9435E5C5
25F610EBE28075DAB3218DD5B14E641571A7049684BC628996B0B246F6B4BD62
1F6D8F43A7264FE5FEF51828BE4494DC460649CE83266DE0DE39D3ACC69D4243
488804E0BAABA30A31E9D23D50ED12FD1674F3535DAB490E8F051B47608C92E9
5FFE5C731E1C778CAB39F889A684F409BD672C3E6A26B4F74B42FA12AB483F72
90C148698932FDF95535898FD82BB653180A692C03E4F4098C746D99066929DD
EAD48EEF2B256160532B48948C4B25D81FF6A99A3BBAD79D0B42CAFC318E0C9C
297C30623439F2492D7546404C7C151FFE9254690EB370F940BAE2395473B7C2
F70EB4DF0E9072F4B71B39F1AB2E0EAFE181809E56BD799B6A9385847F81CD0D
C5CBD97109E9E4E462E58A293CD1BC4E240FEFC65CDEB55E33E66A5461DE6CE0
70923A7263346181C5D93BF6990BA00B058A1C5C34638E09A21350BF64ECFD91
1F83FE1FA0A1A4419AB592E0C0708320E8D6C7DDCD2AE96F0FAC59B411CA7266
3A044A853EB94D553D52499E871D883DBB1CC9F5BE250F123027EEAC691DE585
B6A115C8326461EA7F206C3978E4EFA25AD37DD976AC34C50D934303EDB1F5B0
A37817AB41CD15536F59F3851D0F52643DF3A94D8C644ED6BDD980BE4D96E122
856B34E472845AFB5E05CE24CB8B3835B1E76B603B08F34C858081D1E82C2A90
40EA273FA0CD888A97E1C3E593307FD763F9BA2DC66EA71F3D3C3D3205062A8B
BA249E54D8BA67BF7E2FAD6C66C3D2A9E96A3706E7696D31CD8A115C777CF86D
BE59E8C4EA4B47A39D9D73EA96FEF282C3E75CA476C09617B1CEE6A2B48CDEB0
450B99E5E00983CED4875DCB885EAD2CAB2644F1E25DF5F6EF5B5ED78E7B35AA
5C7691B72AD442BDDAD18F30DB190E4D0045EC4576B8B0918754710147A13BA9
38FA06BDFE812F0E8EF3B347CCE0D73E5DEF603D68C3984D89641875C81E455F
F3288F7298D62092922F07027352BC7C9612CFCF47A61F9990EF6C927B65657F
25C0011DCF5A74F5D7E2ECA1B5A37F8700C76BB5CD1B7261505A235EAFD1ECF8
FD1BFFA0E0A37F242A86EABF81AA379231DB5D3C332C8422397D821B06DCA548
D41AC5E12B9DD03E21E419BB28A35792E9C2DF0C0F5C643BE65BB366D1924A98
63004398EEBE1902F879F1361AF8C22A2D4EDA484B378AD48CDFB6450FCFA65A
DD48D39030136FD0623DF02D1B3D3AF710D8A63194586DD11A07574426194A1F
F6EE52C5F11631A287CE58F9235B30BAFEE4ECF6A05D381E776AEF5E64A18A37
D48B0BE065C440766581C9032343D5D154F98FEC49B3AE9240826AE04FBC72B7
EB4F99B657033C56852001BD04C129E315024FB02ECEBC2E7C1EFBA1439B87E0
B1447905B3357897CC2DC9365C3F81849183F62C2A9B27C59F0C64DB76FBC7D6
526F99362C7693B09E537C2EA19F574C429E75F08C32E5C217E4514A2E5281B1
BA9B9C83942842AF7C3AAD788551D7E126BFD9FD1A2A82ECBCEDB9BA0D3F52D1
1BCF39B2ED65A1912E50F3FB39B1C984FCA1FD31C7C913477943CB16EAB8E169
A5F12E2D27EDE77D0817042340EFE86E92AE2C585229CBD2791D5F591DEA4A35
A396A842BCFFA8DEDA58F5505CFC0C07465BD4C9FB7EDFE30DCD0B7D7A4B3A7C
106DB21872EE3CC3012575236A9D92F2895BE7D4C7F173BFB99466EA37AFD35F
29296D07B94625576745A31B3D4585D38B763B9B36CAAA10BC93ECDBA3384492
E586224F5022290B38B8182852BE094931CB58D762AAE2DC6C3F18F7186EA168
669A1816C6388AD3297452BA7EA1CA2476E357E0769148D1B8491726658519A9
077053A6AD28F173E88C11C163151F7BF565F7930A39E89D4CECEAEB4686552A
182659958BA370AFBBEBCFF68FBE16DBE2DABF1C2DC348AC0A5C4B18E1230282
DE9D3063862D87AF1D5856E36567F2E86B1A37BF59E49DE75C2FBA11D53BEB16
8DAAE6FD96DD0BB1696E531EBDE38603D28DF622216B8CEEC594DD836531D87D
3887204302AD800F372F09011585A5588D7D8F30E5617C4B33A4B607AB02C832
6461EA7F206C39DACC46A7FF00DE1C86D68301D6008439167B8DA661D2DA0BCA
BF2AFEAE5C1C77D933F17FC0F6F233DCD54ED6AF248DF05F10001B40EC2C3599
8535D6B76760F8F726BD3725C596C8671E0BCEFFE796C2EC4F675EA72B207266
BD5FE1ED919F7080D6B2F6BA0A22F5839C8435374145460AE412E1B57835BF55
67499A2D52FBE907B198B590BF0BE3E1CCDAC4B12DC759B404FC65B8B625FAEB
9D07B23300F1F5FFF769FEA3C5286F919DB74767DB4C9F1BCB65C5328B4A401B
D88F8BA13B13EAAA84F0EFF7F46E5E129D6424BF2615C9FCFEA3E83E9F2E6F6F
F089C528C31CE01E5562412F5CAD0B41467295858C8C4E1895D7D6A3192482DB
545C945B0D217482B603B7D1D9DD970F94FDC88695F31BF90D5067D2BE274E22
835471F4D98C23650254EB1F8A9B9B930FEAD430A1BBED615FB1A022FABF93FA
80DA90FDE51E3D7529D9C19BF044E66D9C5EFD3A05D9A6DEB8F502FFB2389FCF
D9DE03594A3484691B9DEE0A05AA69767D3638DE8405E81A185F888AB9F4A924
1C3CA73E74B287F6DABD621C2C17044489015E4664D911B0E64203F25B68652B
AF2BC8448005BA9E67E7D2478E94644C9DD7705701F9207592C5D45F48362FCA
52444A0549554B39D65437439B745E7E15B38D77A15227BF165A52CFFF787DCB
0BB2F4EE1885FA6CB8EAEF00E22D634CAB14EB706D3AE5B125D4DFF11B0E1CA3
7F8DA314F11A23776B8120CFE2BD5DAA55F464FCECF22F7CC829A95B9058B5C6
EC021A096E800136587A92B3DB898F98EC6EE9864E6AEC5914D629B139C0B3C2
00F5C625E54AD2A4C900B2BC034CA9E93F290B74AA60BB8FCC6940967105F665
C474D08064265E7361A21861EF5357E1E71FB1F369D32F487AE4924F7D6A8EA4
38A9960D09E9F48E43F2CD9A57FE90992A273B6AA9BDE2ED5725DFE96A9E6313
BAEB3A19F37D13923D2B7657D56116C4A469E461A84A48D232F8690635F4D60C
3D5A5DE4EA3858D63DBA2E43274117117F4565A8A3A7F90367DD28723E635F51
701AF4987F7203DDCE93B634D5B5E02FE777F8E4F467740BDB0CE922E86B4F4A
F324E6C818F612F85EE750AFD68FF5B998324136562730AF2462D39059607E74
887779EDE8602D3F0CAE0AC4CD702BECE2630C7F914B56D899640D4E19ECE69A
17424D79164CE87E97094BDF143E0EB6DE4D78733A3FCE5720503B12B8CDAAF0
E2978E0E56994436D3EE4ACB82A462ABCC65CEE18DDA23BD8A4BA3ED5429E37A
FF22B1889BA873602CDA0F403681F6F9E96FFF0C25AB35354C7F42AD18791787
1D897BC95AFA8255E4582021CD9C8891905BA5E549A00D1451FC569A1CAEA943
91AB4330B37DF463A846D954370F5DB07EF163E73832B9737E183F124A6C8F9E
956A0D468E307E06920474B7E604C912EA7DAC2B751FFDDCDCB2EB186FFAD3AF
0541538ED85524B7F26FB88958D38DCAE54FEE79FB8C82885D9D7F742E2B4F50
179F91A3F30ABCF830B2DAD47B0393BC3AA13298B3761FC1982EBFD1D063A65D
7930FFFCA14E16C3F980FF846B8F275D9423DBE3CC050AE63DAA3539AD0B95F3
A14374ED36986523AA2335E2A02DE729DF56CC6EC97012F58102E24A9D7D93CA
6D46E0B273EEC6AD8247D6CC4B01FCDBAEF01C48216AEEE4D312B8EE46E9CCBA
D3333E69B80288E12CC709369CFBAA5482F95CA92BF62B52DD3A59030D9A25BD
C25362A12605F05C752E2CD594D093864BA67A527A12C15E9A70FCBF1B7092E5
EF9E42B4A5A20E3448075EB55E4E6F76455E8E47FD95F003E8F1208AB5F95FB5
1CCC401F512098B07174A331D925D75307CAF76CC3A6B0CF986FD92481C4312D
2D9041F851F0369BD14888F7140157ACE564D7E47A5EE432E01AFB9721709F5B
2DDC9D68F61A55488FADA238B7CDFEB18B438525B111227A3707CB0DD2F2F6E0
173D31D4E26DFE863D1E463D5384D1627F8C5F1DE5EBC9AADC35D76240B14318
BE4B359DDBFFFBB1309FF41B18482C13B60ACDA971ED3ABD70DF5210568759D8
B7154C27C6560648493E8DD71E7369BE64FD8AA3587A51D3939F3CBE0F5F4A7C
06C81027915760B661C77DA8DE31795D1A86C57C97E96371FA46F8E396A9E3A9
C016C4724CA5E943C92CB8DC812598A4A9740B70CF9899337904482109827CF1
1E4A441AE0CF76F8B56C162D7C6FCF613094FAAFC04B54282A0ED0715F531173
262DA2DB0F0372A30DBBB1A9B950D3FE2F31E9F32E2880CFD23E3441C2E4E79D
4F3AAE449C25296E146AA8DC47B31D1CD3483C1499635D0C7EBA8F6695B962FA
9C0BE760BBBBF78D59646D3C2D5C16311D4F31B5B086D3BB2BE9A57CA41D6695
55D07B91D095C5C1D692E89D06BA3C93926F50E5205BCA1EDE094A384F7B1B6E
35A8F7BF62E87F549AF290BE0A888078E35018D45537DC75E135DDCC5A8617D0
698D337A6824CC516C74E200188463A51CD814680A7E99264F074E0A0858A3B0
021B83BCCEC4F1F0056EF8D1B6168565D49AB64A62BD020EE4F28EE49270F79F
B7F0F71BF46637F55400C7A2ABFE104A76E05B5B7834138A16E9F85E6897E0FC
4ECCEAE7D1A82C44F502DA5C4AE107CCC21DCE943E3727D3246A7D5DFE2AC5BB
2459DC45719BDA65C5E15FB3579372FBB451FF8BD093A0310FB4CB30999A37D8
B5CA09CB4C01DD94075F4089352A2A9E2ECB146ACCADF10E07ADF396D1B3ECA3
1E8A95ACA2E30D1A35D7FE0E1F7E44CFF3F914F5FED19FB82F7C7C5846AC2CE2
517DE4583412EE0A772061722CEB26ADCD46F925A2E8B7484B1787655F205BCC
5F91362413BB4C8996A4FFEF54737DBF2923D8BBB056FF2540EA8856B38C6D78
0624F1A40DF559
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman17-Regular
%!PS-AdobeFont-1.0: LMRoman17-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 805 195 0
%%EndComments
FontDirectory/LMRoman17-Regular known{/LMRoman17-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman17-Regular)readonly def
/FamilyName(LMRoman17)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -252 def
/UnderlineThickness 60 def
end readonly def
/FontName /LMRoman17-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-400 -286 1338 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105D56139855A7DFCE26D44F42E43DCD4B09BCB2
C0B13FCCF45D66724D4F9BD1AE3C5DACA322D5F106264D18B14EA595343FCFF2
E1123332F6D493151CBB41DFD055E2CD496D222EF41B4531A6CF94D6BB6825C2
1FAB496F22FD3B47B1E926B9B05CBAE6422EBBCEC149FC0C70F6F86A0F810CDA
0AFDCB50F75368AC58AE244325EB6CA36EE300BA83D807CAED125E3B16569E7D
1AA186346F4F62D8BF78541FD9DE8C6F961A6753785923F4F221656FE25458D5
0A9808613A1EC6942E9B97B18F0E235388746DDFB04A5234ADAA9F2B59A2B48C
0C094FA865AEF464EFE617DB7A93BB5C2F57C77326A329B432A6BB3AE294D926
7D1EF387E9DD04FFC10FDE445DC4ADFE15D2BC0BFD34906D473A59603FB41480
D35869D2D71EB1F97B5CC81BCDC2ABB45437BCB13EFE608A1DBF25BF03B63C27
CF678B3ABF5C53DBFB7F3E4AF705F3518F7B3682A0C50B4F026D3AD818ECEB10
ECEA905FD14A5D0D09B7B38A3238990CD98B0256D11DC6907857007F39B09C8B
9EEE545A072FE5A265C9EDF7CED499645D848821594918F4F56B9D154A316567
BD9A2462398F07C1CD521F9F3DC87C721A67F56D69470FD29CF72CF5DBC7AFE7
C602AD7D27CCD4689F232657467C14A5FF7F7D1BAEEE4E303119C510A0B277CF
F068B7F4B6EC64A5D969993146E720A1EA0524D58468F113D6E65D18FC32F4C3
90363D9FE4273E24589ADB87E3094725B46F7273BF66A03998BD0D14E16A1B78
96474EFFA7572D9D2E0EB393022F3E8341FD99DC0382C7972E10609B64468C85
4DED836B378EC22C47D64389EC39A4F9559CEBE3FAF93BB8E469C01434A269BD
92AACB6C24C5C93C36059974A75F1CDC349CFC145EBC13857CE69AD4F14FBF35
AE0E25E3A1B65947D70FFEB85C9253075B5D04025AE0344EF76894B658A64DB1
299509A1E7F6F61659F406C52B44259FB9B1C3B24665009041CFE641946FC93F
1206E30F2B6DC521CBD913617720D78433A40AF985261415F14CAE24F8B63DB2
3A8D049F0746F5685EC4493BD31D889A33771F86276E6F1AFFC701390274F4A2
33371065D6EA0985AB4C18FB39B1F02FE055D57B5DC09C95C92E883F61474513
9706F68286959DDEA056D705D285B98AE381EDC905276B7C9BE5B8E19D3CDDCE
027F1E0911D19601C9F335B0A961DC90E648C069C9F0A67391B164BB10E3357B
171C924E5F431EBD722801D2DD2CB9B06D3122A737435305D42DE9C6B61494D8
C3C443D24E1D49BEAEE01747C25241C75A3E452E61C5CD126C3761032C19EC72
3FC47C996EE35DBA69C027592E21EDA4064F9024388FB285B72C071BE3F757E6
936FB0AFC41E8504D553FFC1556A37F78EB5CCCCD5FD1F4EFDE44CD22214DD1C
4B36E9D266299A0D0344E6E5627D613BA2540DA3F064922470D508458F5319E1
9372F8A8F5DFE7CEA77826A5D0246B514B69EEB8584D6AC888FDFEDE4783A639
A6DA91EB49B05CACF3296865532E0597C8B7410E7E4445AF03A2A87D3D4B8954
D01DDC88746908EDB625B9FC645E4CB2DB490C29FF12165AE2B197B7E3A33037
F0AC9BF16FC37B6FC3DDD73B92534D457C93E40ADB929E0490FAD2AA17E3A97F
8C922BBBBE2DB63A18F1EAE7CEFF5C039DC0E092573197CFB0B7FB990F7F393A
62B2BFB72A57757B2CBFC6F5D915C260859C43D16849F34EB05CACF329686553
2E0597C8B7410E7E4445AF001BFE489F63852A12B46114BB6BFD37897D8542A3
7DE3934783E30F224E6CD4E1AFA9E60E7D5DF243A1F8EB2679AD57294AB13E45
AEEB8C6EA105696E341E48CDBCF1F660E8262CD10AA45C67562303483314B5B7
1DFA38A9DCB0FB0BDF53F2801FEAACF75D29536CF825C443DC03930F36B48779
449BAC308C6F43FE6CAB984A8553BE234EBEC0692797103CBDEDCD86C7C8535E
C7EB9F062ABB34EB073598F17484D20A23816F69D08B922AA953832D094E69E6
C75B73F4A9F21421CE158B252D3920883C966C6C44E7FFC2E83ADA764F9BEFD1
6CAD30ED18B6F832E45704E5A2A51FC399E81E7C08A0FADCFF523F04DB3AE666
97F55CC3BD66B83CC7861F0DE79E3532F81D774AD4D86F2122C52BBFB430B9FA
80D08E4430665EDCEC71DC39584BC7A6769C6E2C5C9614AF82D00B6895632E14
BA86B1F60CBD8B65D99CEB46A5C38E81F3C5AA93D24A2FA55862DD7E0F2BAF9C
C5380390D36BF31ECF83D795D880A41CF1301828EFCB01B35A95D0E929461A4A
0166B3AE06752ECD3D3B279ED66EB955E260AF1DCB0E8959857A5B2BE5D9D36A
9AA32C283B25D9E35BED54243580FCB2E4ADBC27F1D1A6D28C2DFD8FA0571D0F
96B18F190DACE9B724F03F06318611075D77F4D74F7A9052961FE3926255FD03
0246AC687884A3547DA00438951DD98D893E477F543893AC88C956283FF7B762
8DEDC307D7BEC1CCD81D28BEDE22CD263C60160BEC9FA8BABEA4BEE2D97206CE
C98C42B1081E4CC1851E91B9C52E93F9FF651429F67FF5F1FDFBE3104AB2CF13
F0603DD2EE4789A37575171281D4F0855953153234B69715E8632B1319AF7120
EC53549A80FA0B8B14AD07A99EB1E46728AD90E833F397246EA4C44A12EF33A5
4D27E5B4AD782AAD5BC54327ABB731AC87BCD3AFBA75DD19D67019F0CEC21CEA
C83639A0ABEC3BE6CEE22FFDB7258B6BDD11A8CB27578D696F794DAF2B18BE63
F52FE63D49E19CFF0E0F07C97277B173AD9F901D26B43FCA6B0D2576675EA38B
6F363DA00B35CEA785C6A29DD5607BFC6008F2EDFC9D74BD2ED07CB68B2B95F8
1B7477497163D6598F16FACD33111BE3C1B6D3DA18B23DE2F45597EE0694AF84
45C41A12A0DD5382793E5A2305E5A491A4E8663AFD3492B955E7936A451691F3
CA712FADC6FD33E9B0E6F4977566D227C89956C8FF6654DB7995DDF16B0AD6EA
4BDB87E110D76E8A71ECB4AD2BE99A7A0858D7D26AB192CCFE79C07C7ED1A67C
B1682C0331241D87492D92E8936325CF2A102C110B060D472889E553C9881260
96DD343532E74B5BBB97575EBF6B7F14B8887F576E9D5C9F615EC830A3048F11
06F98799495DBB3A05C04BD649053FD293874E3894775B2DF1F871924CE2C047
9EA8C8C337504ABF14D1DB5138D126CFBBF05F1A633938FA1F7518FB2920FF8B
CFDF1D312FC0FC0162F47FB4D8D9034DC74F9DCF7630AE1F32E2A5255FF98042
0131F5D01C82F722BD2367DE24BBAF6215F77F00081A0C911F1EEBDCC6D98949
0ADE623FD53D3DCABB2ABAEF03EE07C7219E731333107A831FBE6A6CAF1BB6D9
34295DDA362A7F9E0109F63E133F299913389EB6F670BA5FDBF96EE3E18940FF
69B61DD4BE42E6D87D8F7D9B253A13AA252B9AC41AFF7700001FC8B86AE200F1
14200019F8CAB8BD226CD1786782E809E3CA5CF0DF52B3C9F677F0D6244DF68C
E4F145BD824FEBC97D12858B17B7E640BD4F01B5277B79EC0DB26EFDA3A69D75
4D9E9278AD430142AFE54BD339EB64B357AA3AE9D82F4D14AF09432E7EB23DE8
F345C77A17BEFFE96B9154CF9B9E70BE65FBCF516114842DDBF45DA79D949C6C
C647F1791136FAC55C6348CE752D4973C92CC976AF06D7CBB5667BC5737A6818
1E25A480621D4712CB9DE0BA518494A80BDB1FCB3EC68F27803A15638AE470FC
66B1AF719D4DE187F45F85A9BEBDC37B3AFBB141634F0D84EB6821FC9B0C4B5E
B6BBEF8C466E8E71908038D3C02B1F5E8293BE9BB26F60939C130D20CBAD9EA9
01794AB36126A199A071F341E75742241AD41FAE4BB693A50E24F925F3A8D44C
743658D8D43AF001ACCC0284EE83D6B900DDC005A49973A308FC31A15F849F42
5C90DF7BEB2428FC6EB681B011C5B308DE4B15BA978CDA8A87F21359CB441B7F
3149E46F78BB6AC81DE809BFBCF8A569CFE3CAA6277AB0078199492AF5DFD516
B4ED5D7DFB581393A22169927F6D6DF2BA37169928E7F06723F1FCFDBB7EF711
AA5345C3B278190283BCA557CDB6667F5049D5B0066B051DD9E902E81F262602
C9D87938B75EF929BE66F462F417FC15EE79D98B2F15FFA7271DF32D5AF1FFF2
647F18E3C3615CA7AF845DEB226DF86483BD2438E5A4501A044846C47CB1C7C9
4D661304B93408A96107685DD3303F9A4BA6AADA0BCDBB2821612964B308867D
BA30853A9B90DDDF7AF372B76FE598D19AC35D7AB821CD9C4CB0C0C97CBCBFCC
599720FC9CA0A2B443672A09AEF06637586AF5185655D71592270DC46238DC0E
F662B9AD271E681133A39732C72F4CD00E826B2CA80AEC8F2457B6F0EA299D0C
FAA81A8BE845F00CF9C96E4ECBC4ED6B07D654AE74A7F8B19F9CC9AACA37D697
17C8BF645A002691B4826035454EB98F9D7F73D5EADA826561FC81D82CC875B1
AAF3E7D136D5F64A21F7629A73566E3F728B09D217496E3C3AB94161D816F26E
ACC2F90CA8E188BDF587739FE29D4217A1FA558F1D2E09FA887043B2F75674AA
08F9AFE17CC3005FFA5B7481050ED99F6C60F17D3C84EE40B80DB7012FDB47CA
1A8C880514E63A4BD70429F89E457DA0D3441678A969A5999E0F8A50F8CE52AA
6B68AD467D390AC56F99835B8A4371916BC8467A0044328715E65AC465A693A5
260568334E34AF897012B5F2BC82A2EEE98739699196E77927406DE515EFCB9B
DC92FA027FE054811B3EA3F5D23B9220A659E44717F030B01BA4CA60F33E1060
7D12F488FB74A3B67B5F96B6CB361DAB34185C68A03BAB8BE3D59EB3A0238767
36CBA380EFFE384B94A8A7F314CDC0E477C500A7DEAD963F27AB0F5E8199D0EE
B9742EB0F6BE1DA71827BC04AEB5A0259B91414970B7BBFDDD78563E1D4ECD4D
D8B065ABBF62854AA51DFECA58D6E39A107ECE8A3EBE7E645FC284A1FE7F4530
0282249B72EC6B430828F906E8DB9E47B183DB96A9ED85AD222A233EC61899AD
22102AE686865A31DE3F8DDD32A240FD49AEE908C7972AB2A420AA53D654E17C
875B7531CD1BC116AC4F21FDF43764C2E9B8B8250A8D5E36FB783A63D4FBC984
2E2CBC2720A7206F436E960C845C5A2B81ECB5A523CB2915A925B1655FC30462
5C3BF00BE48C470B0D86E721AFCA140FE6BF318AC1663B0BE5018CEEA86FBE5B
2B3E46711774FEC1F7738BD8C0CDA6B6B8371E23402AEFB1FCE4A337EC7644EC
5BB466C25A47C770E62C69C131FF3870C42B68B10C4DA30F649CC38DD4B2E921
8138D27F49FBA3C2072D491A8497805A94EF9D879BB2E5DF7188DC7DDF4D7C82
7324ABA28714DC88840B711A771548C11BFCD146DFF1E58DD3DD6C6C20D11266
F7913970C783EF6D587F638339D78172A81ACFBA91FA58E49F57376C1D61036A
F2A021FADC7BA27455F796B03D84F85809FE454AFB961F688B8555A7F70F7F30
D3717A2301CA0EF153FA9D4AC7A752D9985AB03A8835CCCE51B50E52817004E4
D3B74E0CA32B5F576FE345B5E929CB01DFC6E4AE406203A42C91FF4F84CDB19F
9211DE8E3C682C96BF0C1C0F16071FE6249CCCC1DAC17E79B6D697D9F368D927
9DF4860951277F59F6B776DC8BF3605D078CD0364E3DABB886B3CFFA93999DE4
06A23361C0DD06828CFB7991365B0DE01F3B42F32F680012D57FD768C94A30E7
A9D75B2E28634129D2AF01B06A8653CF983E775270279D48F3AB967BB12F9377
3A78A1136BFFA3B0957C1905348ACEA2471AB4CA590F45C184C683DB55791D21
8D0CA2A5A7518240DD39B82F047BD27461E5740E90748DFF709D1914D56A5142
B2E5E7C0B22F21B630E2D0D5F8F796E0C285B0BE95D3207EFA09FBB10240A344
C911FF165960436A8BDE59944B07A91B36369D82D571ABF7BDD14C79D796556D
EFD53B378B7F42F6F4FCD97CF3756F137A237753DECF6B9C18201635BAD83120
E618BBA0C7F201C3E6822BF981212D1464123EFB8A2D96FE16DA2F528CDA5592
C3247B8CDF4B9E100A22131DB04E222FA8EF0F6A31B9820C7AAF7C7E748A6D52
5713A4FAE45EAF59536DF5A7E855ABFA3AD54DEB29DBB55842D44C4D6C7FC55B
D529D9E7C7EBD598A511CBE5E5D74E6D3B251A6567FBEA785D838A9506C10876
0A29D43472147FD04D8B9B9E40C1E604CDAAE147B7C16C8C92CD035900986B6A
7157B91999349A912FA1E70FDDC872F75A1B652F87AF1E35CE918A420AB29712
631296EF9322A1BEE0095949F22E99CBD1AC1A0CB1E378A1D59E72C3B7117419
2153787F33A65221802ACDF495CD923E344AF2DBB26F0983369BC48AEA1FB37A
A157C521ACB9F1C9CBB82AD5C5134A39347787CA96E2E00E603690EA5E9BD227
5EDD5E425366E26B7059BBB61BCE486C654F6E978CB8E88E1DDFB252FF9ED5F0
D2EBB74D25A42A948E88B3B323E0DD7E5B229A8753CEACC4610582255028FCC8
96C4BBE6E0A7D10C0337BBFF636A3D36D9C9B199E4E4DA535522CD9B9EBDE34A
75C83AF12492CBC902089B5BCDC5BD2F44C8D37EA22C30ECDD19AEE838447DDE
B103FF247068EF9B9B43A951DC93BDAEF840214914BC6589B20A16C2E1CE69B4
30C9E868EBEEAA1A5BE4245C285B171DAA6BE705FF575048CC768BB8F13AA64E
34D3E9CA3F5AFD8F3024F3B662231E4F893C9187A2951AE96EB4CC354B338282
76F2264F3155D4DD61B4C22C20FD0665DDC72FE8375C91FBD9035841767258BB
436682BB40FA5F2CEBF23C4F738E9FB4CF446EEE45193B12181410FB6167E295
5AC798BB373A6F933FA2EA6A4B871F546EEFFE498C6353DBB65EDA98ED92729A
D82051B27CEFD1F5022BE5B15E1D75D8A3950397E5EF69915AD4B1C75D540538
84EF88586CCB05FFC5891EEA9F07599F276FBD020EE4F28EE492DADDE9A7DC2F
40FF95BE1D5C7850BE983FAA6763CD28EFB3A46FFB3CFE695C7E7D1154066661
038CF2C93BEF8D83E143656B00CD218E6BABC61D437BE1DDDCE4B5F3B3B3B71C
388245D8BF61DD9E0C162A20E2A03AFFF9D6B0AF70E1D643784CCA5F02253111
B6B5FA34108CE6151D158AA7D6F4DBE64EF17B112C9C04AE30EB43430F3898F0
9FCAC9F334426B3BB28921F45A072A6D5CF9F29154154A7FDD41ACAE12447E71
3D2E25CD1E5BB0CD6685444271EA2BF01587CE8E7E6B72FDCC24EE7F3EF93DB5
77D2E225B5250B8DC675A0223722074E8876405E2368CF3BC65040648818172E
B735ED6E7DB302E9AC30AE90D2AE24504F2E921D2557F325B6B31D984F0072AA
303D33D5478995B533818649C643A59579136CAAA1B40AC36DD171BE4B505A63
372AD77E5897138683452EA8A986BD2385C65246A71EE8367101D9A3A0D37685
6B2036634A72710FC8DA959A662B259B23AB775EF86375D6BBA2CE1180857992
FE8722ABB8ED185D6B4A80C1BFA827E4F15E623A96FA4C467940BA85576F497E
B09A9630A006FF0908EA1795C412FF962D906FBA38F8BAB09E1C98BD1D25AE7E
02C38A082ADBF5F708F540EA78CD1DA2FC5C50B24F253C617D02E474808F832F
2E6191D3F22E335FF24246DB126C6397932821D42411CCCEAF45E1ACB497CB6F
88ACB8C90E71F6DC634798172F185FC890116846F6EC00754B2523E1F4D93392
DEDB5E23604AF01B5F46C7B9A6E7C5893E16BC438A985B6C497A9C103CE97196
1454C21222701822434DAB18D387013CB87190E55F6566AAD990CCF0FFEF3CB0
1D951A5C29B28AF823FB883DD1E0F026FC3AD196303B48CB45C985F9C4EE95BC
4243CD63A52C203824E280930FC9BE78B461EF0E883A9D7CF2256FC14BA2D90C
84E46BC870B06598231343C0B0CFC172F078E37D5200F5A884569B14048CEC21
2A30D4391FF1229E4F84AB4DF31358F0215FAB53704241F8D1B2CF663368177B
9AF0F93491F6D985F850365FCA266539D77E9CB0D87B5F005F4B13EC2622901E
AEB8C5516B4205E2419B5EA3CBEFFCF06FE0F6A3D75CD9FA03668530FAD2A77A
5EED85C9303C4F67CB64ABC4C4AB5FA2B8EDB7E7F3A4974D752397E6D2ECFC80
16E7FB14023F405FFF1FE0ACA49F9FF46C7B4D72201866FB0900929A29FC28C5
08A73216BA87955AD8BFAC36ED8F51B5D7BC7DD0F437F1C1A89AFCBF166B5E88
2C100EB1507C765B5E26179F4EB2D5AFBEC53F03AB51F8B14E1AF90C7A388469
A4AFE99F2BE5CCE86EF8B6EFE71983A64DA21CE46D1EE38D6003BEB288D35EB1
1730B049B6A5A9D78DAC108CA1FF9400A3DE2CCD2A72104CFB9624E5C575C80E
FD0638B2AE4201F8617D411C52FA6D8902FEE246506B981C4C25D9FB5C08D065
EB272EEEAE2BE0018EA7C3F081F5A258A6C41B6250DD77B44844920B4E84422E
F7459DC1146671DB157C352CDFA1107C47275A8EF807519A5526F787B53096F8
32A3E9FEA9B220D75844C8512CBC8FA98A881F22B81F1A7B42568636764ACAB7
DCAF96F667A656AE31A131A923B47C98CF2298E1A5076ABBBA618BBA0BB81CD4
D8FA68B3F5914E6B2D81EE9CEB9372786069D58578B215A9606BD41247EA6A3F
7747839BC4D6C9E9BC86B140640EF54B6783CEEE28EA85B42F24249A929520F0
BFC0D0DDE2555BB03F558588B9A6F0330D350A67F13AA6090560EB7CB7404648
6E8482D66A8185D98898DC6B1227BE09D28A1529C12FC3507A9E542AF625A84C
C602735F814808F4AFE461E5A2EFFFB645DF871AE960BD0263DCE9EE406155A1
B169B1729DA75FB683A537C1DAA5EF82D27AC66A2F1F9BB2F144A135DEDF8158
39257D1B7A34B04C110AA8EB4116E9E3CAA5489E6F8F6BF4D8B52317201F16D6
155F1A7B97ADB149B0E8F8723DDACEEEA2728C2B0985C06569529A040D139087
35EC48408E3BC96E83865CE3532C2BFC64EE47CF31BEFA92A9DF8D76C4F49C5C
F8BF118B9ADE367B547B6C89BBCCE6C448AC5C61D17285F9E2E321C96FF91BFA
885DAA68993A4094F490EF2DA767DA69B10DAAFB148E86C15426E4FA49EB9622
E45801FF0A29945D6E05B020A30ECD347E1717AA5D4CB03B26C4A34300BFEDBA
38BECD3B9F74A6B21D04D33D8D6867E328F1F84E51E8DBDB36230DF2369ACF7E
E964D92D0989D89A115F38D42C653878A1F10CC1C84D2B69E1136A43B9372388
E33EFABC51A900ABB51A058888867F82BA02EEA5CAF47CFABA1B7105AAF3401B
AABAA9BD6B2A5211FF41FAFED99B5D0E0E74CA44D80BD99657E6B1112329A103
DA1F874B2053384BC8111436058FC9A75D9A506B08D31C1046AD60C96FC51C30
FFEDCECDFA28A951DD5211ACD684E9FA3D6B933B546475BCFF91C512F4118D14
B1C32C9736D2DAE45A3A79CC5F7ED4B329F1E1983859FD1BEE59B711292C7A60
AAFA4E615C2367341815394F0360220C82AFAC23A7C4A3AB05918672D63800D9
ED3C7BD0994D580FC7051B7060935838E474E21B30B609BEF5130965002681E6
DE4164A97731F59B6017188D449C867D7B28D6D9ED834B9A083C4CC2401ED331
A25863D89A01934A29253E3EF05A00A57078A6C9289FBFAB908E868942C11C37
CED24CEFEC85AD6FEE1DC312F6D9F3B9309B62AF4C4B32045B9F840D1138FE79
B813421C3D5EFAA73A37175E3B58DC33153C408ED9FDB7A1BAFF2F1602E398D5
8D10AC857E065D555CB217F8857FE0DB1F6F94DAF510498C291D7A715104DFF4
CC0E3010F6D683EAA9F7ED48494FF8C072940BA3ECFA1C2AD0E4174917B2684E
F827C346C57F732FE2BA1F6ADB2A95D564B19A3035E27F66F9BDA1DA14E2A8D7
197B0F7D204DE6A601E8C160B0436A5A8023ADF7BECCE45FE0C34367B3F10A18
01F7F0D87034B1CC38C3AD299AEF4A850A8F552B9EC2E7721EF7B803055175CA
4F3CDD7CB1D87A11B6393F8133A84721D8CD2FF1E7D53AB056B9EAE6696DE4E3
9CA05A8F919A4814B22B85222C6861BDBCCBF5B17AA9F218A80D732FA18FDC47
43F39B1DE3C4F8244A99D481D27312DEB6A7DD90EFF51667A11F7CD5CF8FD053
E67223B64D740B7B530FC7AF464D6C86F05088BD36B92F4FCE9B19B7B1996973
D13D7D6E50620550430364C88A1DF224DD3EE5110D3EF847F46CFA54D4184BA4
75B5D0F2361EAADB7574B8644FAC98660F929FB67086BBF02A521D080237AAB4
A41621B22B69289D1D80F71A7138C28292B9684AF30E77D39D1C57754A6722EA
3A4ECBD084FC5DF1B26838D8B1B50DE2366557171F2F72AAE38C57A5F21AE59F
5A0A27987030F9EAFEB7CA4471435271040976A5ED4ADBBBA105FA66555DD496
AC6209BFD589B754D647D45435289028F386F06FAA5E98124881CD477B308B5B
7341714EBD03DC03658881A9C92C09B14BB2D87AA395EF6E1C8A6C78793688CD
B4211AD140E52239FDDF5CD68DF5A2AA089A4FD4BD7A06D8EC0F00E69984EC55
E0B487FDEBB3F2FA4CAC99E70422024A7111D9A6816E165DFB4DC616FEBD4019
800AC8ADC2206AB30653430174D252E3FA2074833A9D1B5FA83270898C37092D
4C0A77C664A10D5F22B4D893FCFBEBC586BCB872E666A060E4D9241802B72B10
72B908144FD6A49D62B4AA487C72F456899AB090246E74DB13E2A460620B8ED0
372A76B058E4BC1F616F6CF7E68EA347E39809F30562D10EE8992F88624EFCE4
32B161B12B699A2FCA90DFB3DD730D96D100DC5B1BBB145E19DD91EC9F234AE3
452CEB3D204B6D79703CA2EA9BAC2797DD6FFE8D8B8EC081349683FC5E1C3232
36F7159C21274390AF57791BD9AB85DE31338F5131E0F8E9157F7C676183ABBE
7DAEF97170046518FF27E67EEE2AA882877FEE4E7B14727B086F27E43E6E3EA6
EF0DE68E1DF0326172F65BD4D4F1CB3CD4D6AE55A5C48AF26AC807ED10723C4D
739EC41CB885A429042F21E131BCBE2363919CCF24D571EF958527CC1DF6AB5C
1ABD2BB2058BEA82561A14100918F605CFE56DA8B9A95E2F71E964DFE3037413
6861EC7A019D03EB58B34DC20C8C69325CF4FFD29C887309E014F82B805C37AE
CF05FD413220403E4AA2925E6C7EAC6B9A8134C4E8F4969C9268F7A2C3061E5C
DF828B56BAEEFC0E0DB0CCBAAC72E5937241C4221E367A0719386E4581BF1493
794B0660A2DE342E973DC505DDE5B82EAE2D54B07B9CFCB958B67A5EE49EDA9A
5E3F9B049E92A7DF9313DC12E050920A13610136D6E15521810F45B5B14743D4
09366D9B06578A1C23B48A90E005021A56F5A6771D14EDB3216934A39C1D6219
45DFB59BF52BFC717F43E4672572B9AF6850E95A9D9EA5D9119400BC4AF7638D
A1EAE01CFE15FB204291B0003D652DFDA53F800271FBCCD9DFAAB5E93F903A8F
EC0119ED1F1EFE2DCAC6A4CF31407A555660E2681176CEFB2BCA160B90019B10
8DE3495306C998EEB3A70D1E4575718CF56103D0367815A62E64AC6F0CCE9A70
43AFC60C1CEF5200FC95AF65BA0898D5292037CB52152485A610A2A4C9F3C8B6
B7D5F265BEBDCA4C58DF75153E603AF1E5D0E6207900F952DBBB63C0DA21C717
E348E0BE63120324C9A91217524DC09852F5B47B4FBF8156B78ABC9E6FC08A75
5570AACC410555B525925D9BEED7A3B4294B006D793CB7D5CB7ED892F1A55E03
7E4750E6F3CAB9CE75DE3866B9FDB6FCEBC5799B4807519B038B56F26A59DA06
006A982153C07311290983DE2D68D10F80121551249FFD17867B2A9A6426F601
0B1050C5F50CA931A8AED0902159A76F0083106745A11A6AB035D69BC4C78D51
F0A7E0E2AA577BAF69930568678505ABE8B068AA1AF3A022D4BFFB576A0FA938
B0A6615694D1A83741D4F258C06B01BE852F4BA86C8DFF65A35D632A67659938
6A9FDE5673CF22A5B543B9F395508FF98E3410ADA67D0353AF45A793207D4286
53FEF4115DF9458B70D2A89EF4E1B65D967A3D2CC787C1F19B923A37FDE7C43B
6BB0C8CA4D1CA68849844F9F61FB670F5521FE1FEFC260F3E926AE8AE9059F32
156D67F7A6D7B5F711E2B3A8146BB249CF5A6432172EEAD0BCCA6315D5D70AC0
7AC571FE97F03509800044C01A924BB9615DBB6786DF6522B4AFF4D46E8B5048
7CD112B59BA801D75428F331EB561A6F257C8BC6750737D7CAFB950DF5FD1CFD
F348B8A1F08379922A63779CA020C76AD0424D6077D5C415AEFEE988A756A598
AB1558D045FA7B95DE5A47A7CAEF9406DA16A1BD6B4FCCC55803F28F09714D92
031E48C87D3089107839390623D35FA5A0DEDF7B0B982EBF82D0914F7C33F549
D3055A147224DCB8FCA4872915C7253EBA33E38AAE46D5DD4CA2E5A24176DF46
F0BD3A5958376B794F2043A295E20E5BF5125EBFB0D710C83BCF6A989C96E69E
411AD2392CD95BC3461390711E0E9DDE26CCF1965E76FF2374E36EACFE9EEA08
2A9C50A057776D363F68E42CE70C176516CF12622C131CCFA722266A137D2965
5E487EEAB7641E10F8CE6986ABBDD4EF0DF8D274A5B7A04B57F2471D31F8DB1E
3194BDA9CF6C6CAD374FBD8DB58EF1E81CA38CEEE678D4C5714622E75955FF3E
78C4575D810E7E050456EECA7873DA692889A66771DA94EBB0ADB9C6FE53041D
6F0012D57FD768C94A30E7A9D75B2E28634129D2ADAF90D6F56F1BE23D9AD388
5E2CF29FC8866B0F82F15DA071DD9EDFE0A913FC4510F990EC8DA8F2D694CECB
52DDF32756E6730A8DE91A44B3DFA2C96C256084D6DA18AC60BA347C03BEF3B0
585CF4539FDC66915E2211707220643682D938AB70D416CD39E8562FD546F1E5
0BFD4628EE3B2378F20710019695188C430E6213CBA49C02D0B0DE799D4F640E
9DFBA9626333A5265801CCF955C1E2CC7C69186B0951AF6C0F9683B4423D49AC
E48AB66C960EA097F5B5F83024E9A3C46A9E901A63873CCD5C71AF886CDFDF80
DB1BF5E73B33A29B7B447820B08DFDE19F69E46267C21FA581E86060A00DF7E3
87FE4360955D6F8583AB9527A8B91C3820738A70AC169757D9D3424A02F2427A
7E2E1627BC84CBC737D30E9EA0D4849962B186F4C8689CC0DE5B6E8F976AE819
1B49153930BD20FD21FD52BFD1375704DDBD27629BD21AF86AB7E3D686CF1AC6
A71C6CD3EBCE191B0F1897F45E676D2D16E9493A2ED96621C4B1ADE33FD14670
C66F070D8CF7E7607B46F7DA28C3CB242C6FB9252DA514A799C9ACFD90A86683
0D015CB69593E0913AED5EA81757E4FB8D9F97617B4622EA2A453139A615402A
144402BC8CAD70441769D98F90D04A001B80A6617F48BAB0F19B660A92261712
3196D101153B18CB7C8DA45DD0F6707DC77BE488A36A54D9D8A2B966C38DD1D4
3E8C7B81DE412C9499615E3078045EE545EEC0E9A6CC520FF3C45B5D1F4889E4
A1C039D6CDC2724ECD2A909668841183ABD7EFE82B09F02939A2DC1199FB849D
E95191E6BDA41016ECD6767F1F30049769C642C892E53DF3AD9691D42235572F
67AC5C0B20E59F632F9E71DB74E88971C070FBAE2C25A7104589EF3884ADEED9
1564F0AC54D70F8EFC63B94F73ACBB4CD27973CE1B28AEAA7F8175295BE364F4
FF90ADDC9DB515FBD59E42AAFC582CE3D91F40AC5876B209A2D6857D7C042EA2
D5A838E2BC3E02750BA9A5CA538A35AD02698EC0301F2EB9ED56F150AD56000D
24ECFC77CD8BBF484BC0F36267A50E379B80399771B0B2912C8BE0428AC71A76
D2AE96484D5D8E1304268CD4715C7B381ADD4976C0C85690DA9C68348CC174A0
91791FA74520C8614D4FB1125CBCB720D21DBE1EB344E7ECCD28B98FBB721C20
95CA99680C2261A7208B4E6FF1528406F27ADDBA80A107AD2914C68F52B884A0
74C4C4441015E906C4412AAB326B513FABEC15C30BBD458B7C032659C5F89187
EA9BA0F216CBBB721D100516CB839EDAEB4DFE011D1947F0D4874882CEE4FE4C
C5F070174140B9901874A34719D07E1ACAC9ADB4EF904FFEF935954AFB9BD204
1241B1BC8519EE8C28795E241E6A95AA4017DC05940F32250DC3AC66888178B5
1B3B89D7A218954721CABDD00A51A9D83D24A0E9BBA5CCFFD4B7A508F64FF002
C8332CB1E5505E7646523ADB2DB97B20AA7D44F776816A160C72924E4113632D
B6A26DAFB54B00702F9DC177B9EA20E7A398A633D96703AC7708CB4C4E9A8C6C
0B36B033E9CB67097BA5E011676A94470FC8ABFD342B6906A5399825EC884CFC
AA127C6C18DC6ACF5CDC8A222C25D7D7F48A0A94D2B63B14621BB032EF0F402E
D81971E9FC729AFC1E778A3C007655B9C7587D2C48AA89062AF2E4690B41B934
3E7259D670B09F930DE5E32CBC4CDBAF63098D1C2149FCE3D09E4C446C77F005
D897D944251600E7A6B304DD76E088EA916CDB2035BA06E80AA6BE0A001415F3
81236D5870F42D06CACE3F59403B19344D5FF0747242DC9C42A73FB1C763E51A
C2C563B89563D0254194DE000681912B15DAD14389A559822986C68DB89F3C4D
A86F1EF4A2A92AFFA785AE4898298C84706D59C727C55EB86C8253596F86591A
47585A4736B1045640800B0984898282CB81A6C172764BD1BAC318E2717E7BDA
4097FCB8FCB635C4EEC525AE262A45F1B3D83C153C9BA5D98CC8FD4F4FCBB37D
E07FA5F235AE1BA3C6F3547FF24606651E5887FE8D8102DBFCD5E9907E38EB02
257D7F32DDC1190AF61B7140075B080F1427BA4D250DD2F37F1F6FC86C27FAB6
32A0C7C3CF9CE8E8FAF564CCA85F904153788A60AA13D400C861C55F6D7C5ADF
691D4C163883BB2994826A94CC961CD42609A279E8E3D4698F925E037E82E12B
021B0E81F242DB2A31AAA7432D7D3B52A094140E4E4D4D486DE6010BD574848C
85BCB7F3D74FE0BAABA30A31E9D23E07A070671F12FC2A455157B1BF595EA3E1
4929085DBBC95E5AA5F99198A39BE62AF7CFBAB277B8A66C8413AEAC96E91B0A
972678A8E98315860D63EFE6178FD39A8BFE625C882CDB6A03A7921BB9F85B93
AC64F9C82C455BF5A10137CB99E97048161FDD3D79BB1648BD39E15558B38904
61CF1C65AB7C2EE42288BD17DB983600580BB4E01BBD7621152899F4B5FD24B0
E8D03EDE1D442961F4A9F5438365BC17C850FFE3F7E590C71D8976E1EFDA047E
21DE835260C8569B437B93FE55D79C954243E49E2B9E56026CCBDC51BE128255
220DDDDB5AA80C637A695B8B86A8CBB0DCE6D06FCC2E3AD7BB240DE7DFBD1F17
FAD068B03490D061C2FDBFDA953408228EEF66661F70AAABE5DAB83C34AC97C6
6C21F4CE4812FA0F007C12820EB7E587EB72F327E03E0A941BECC603AE7B388F
E9F86061AC96964C61BD933742996058691C47B09CEBE352FF40D9E7F49CA944
39534EE75D8B82DBC7BE9BFE27105D0C786948AD4434F8B41FD8FB187D24F232
C6D89B727F1A0A44C513B87939EFD9DF31C42A62BF096B816BF1E53EFB4A2705
670B0125D81F85A311CDB0F956218DA374129A0883F53F8CF6F267B35795C762
6A32B6E41849E2AB718ACE5C18720E3E3C72B08FB19807710498752E1CCDDDF7
85603AFB76B55C10426C6B620BF1890A7406C0C7AA5B89AECC81F2666400D69E
132AA9FA4408FFEF2163FF4FDF4C1C0D8AB9DB1C4EDF7F1982539FBBD85CE5A6
641E11898952F1317E3BC8F70579EACA82C64B7ABFC8E121F2D9971412E29FBE
30049247EC92CD5E35949C216F33F3F59AB471CF2A7D3ABB64199B13F41E5791
3759EB7CC42473F8BBFD5986525AF9535A2078DD3E501EA8ADA6452B05A9E0A4
D4AC85DCAD1DCD36CB4D62885102CF25D2CC7FA26EF0C059090FB93A5747EDA5
7889E0E2B7B8BB46BA0B2A96E810DECF6C6DB8F03151EB9F023D58368A519148
EC8E8B05282FCE440A2080394DE1A33858424DEFED99CFC4E44ED5ED05A828C5
4ACBE6E9B764D69BA1AD4D40E8251B828BDBA6087CA9889B31AA8DD854F34502
EBAE22FE9FEEF344C5218AD07EBB2F326C75FE8C3216C6C9934959E2E2E181F6
0586C124C0DEA0EAA846AF0FEA6F7664923CF9E8C2DAB8CFB4A81105CA978220
906A3996F3FEB1422C06D0BC5FE6ECE778CE2E92DEC09D647BE595260BB70C63
1E70BA8FCA40C0D8608873DD9EDFE0A913FC4510F990EC8DA8F2D694CECB5561
A024C8217E924000A0F81F7D46720081C49801814EC5E47C9454FE6BD3B4E612
41D3F7236270F4F8EBAF6538A937DFD68B6B74FC1097050C100981E983F653DD
93A9A1A7191AE45D1106F2F63B7E9605F16FD2822C03FD42EF8C57F322ADA058
25004A9E46785B47E27FBFAB63E85B9B2EC30EDDBB288EA85EE61F6133348A26
3E8CA42CDCF218F1792A17DEEF4773A7697A57EAEAC1CD4E465C564C11295A73
FE3649A98308BC5906C1DA356869F882F822B32BFC199714C3629512C6A5711D
AF0A3F0954913A0DCABC26DC1B8FA3FE14E2B233569BFF15D65907FCD4A22E04
2B00542ABBCC4B8AEB1D08B5EDEF0E0AEE582ABB6AC3949FF9CB12318E20B680
A50E700B9A05B0553FE69E1FE68FB06FBD58BF563372DBD30BCB727C37CD33F1
F349A85B3B6F37E3D2C3568B2F7CB639939924D07E7B6593B8270723603F0978
03324E2127A46E9DBDDF0946E6D246D604E27CC427B415DAFEC7C78C8BAB8DD5
91AE704970FAF1BCA49C711F6B0E79594F1CA14632B9FA31697A12FAF6931877
1383D3F2349AC7FE93539A4CD397EC8C302420214AF5A20DF60AA690D5D4A457
3B574AD63B6856AD92A1D0D9DE8E23C3F9F0FE606458D0AE66534F40CFC7F7F2
350C62A192333E15418156EEE9F5FE212F5FBD689E5FDC0BDA7BCC4392158E21
E5FF5178C36BAF554B06608C9394954B53D0A84FF84BF5939F8C660BA12C7411
98AF6A356D485991AA3CEA5E4E540A52AB07C4D6DAFE88B2B5507573D039C6EB
48E1D6A86078AB577A2E135403EFAD52472E97602424CC86C82456F1A2025C9F
7479F64DE90E4A3DB09F7D4988BEF2B66CF5CEDC1F84E03D692B02A2B0722525
18FEC11B39FBD50E431C64C8269EAADD0D24164AC378AFFFD85E937D8BFB2267
AC099F6B432F3D2DB5CEC9D0694CC17B61CB6C2A9AE0E3817BD588A80A1F2EE4
AE09292ABF464CE82B4342838788739E078B59ED0110CEC5C7054DE6EA6A455B
0A9036FCAB00F15358EBADD14CC679DC513F6CF350456826AE9945C9DB052B11
12BA32D030042C790E287CE3304423383098C860BF9075A3EF5E8EEA5FF8951D
6E6BE3FB0C3D38E72B68A6FF3BDADA77C805844F99200D945BCCD36E1D04EEAF
5A2C93E5C578285B76AB6823AD536B1E3F3D20616DC98CB112889DD3B16E3C2B
F4191D7947DD3A9462446CEF82B1DDF9154F405413C9611215F218B1A2D47882
DE281BB7AEABF17F24254496DA229B295EAB9A68656BFF3E6F861A0A32EE2353
4ECAB1259C875ED86B498A07983B3415981AF9A4CC1FEFD13FD4BAF26C1556CA
23774A0C26C9BDBFED4F5F0D7A56F0A6E0F662104C8DAA6EB83DED6D4884B85B
FDF8A699A64CFBF0FCA8D2C58054960D0B3FA0CA60A2E57AA31C1371F8C279D4
D209102CCD312E79EBED8E98A4C8A688068C012538FA612295B09E78B4EF39EC
5CC133D14C2E464C13F5C41C3C5F8732512E789A1B31DEC7E8D9D51D81B8C070
6630395890F2374017BAA39283C14E3AE66A14DAFFE2CD8748559E1A5B27D868
EF1F940B751C6D635B6EEFB948DE7F2BA4BE8DCCF6B30BF4A0E80D7F9BACF925
A83F2A89E558911FE182934215DC5FBCDA39AD402F2D930250588201E5EEA700
D301E093F6F0E6AF79F54980C0DC0D9CEDB7CB96FBB8D0C64EAEC1186152F275
1395028B5E93549E4B2D0EDF18CE6F69259FE26F01E48946CAC5D577A1A056F9
0B565FE66ADD3F841E43DE6A129E5955ED91D39A3DF1C5A53FB3BDB005D9CAEB
70A03D20EE9159552685785AF28FF9035EA3B088AA50B2E6E3FE51870FDE1C24
DD45E854C664AE533D0F945002BA7FDB864CFE04BD7CE6070FC5EF576B1DE985
AC000278650627E9FF4B42159E5978F2316008713B9C9A31D6EA34540F4CE851
0AA623249A2A59C3A5A72E649DA168B25216A208A2E6E128BEF94A117432B479
0DE4CE41950CCA335DCE36CD634C5833DB98474180C0DE99C220FA0EB6787580
3D18E4597533BD997302AB59A80803FFE6A274D98FFF22188ADA8049E11A48BF
53CAD1ADFEE69973B24BEB615ADAD672C6BE223DDDA48E95A221C8EAA647704B
90995A187369C0ACE19F3B608C08812A3F39074CEF1DCA265DEEB9EE69C27D30
6A50096EF07C38BA3E6F94A0EC460941BA4064658504CFAE58C074D92E17607B
FDC0C090B33F185DC6A9CA2EF3D53B18AABDC8BCF46E6BEFAE60AA436618C281
E0A0E3B3A9303CC927663E474385016145C02DD6D3D48852EDCB1B314D6166B3
CBB3D21C7245F491D6737DE51F31965EB2F9127D611CD2339FFF6C72164C5233
B6A5629963FA2DB7B544E9CFD20A53AF2A794A23B2978B04F4D664B98F0839F6
770BE3814873EE7A9971FC109F2D1554B18812E3F4211613CE4DDA344F5756E5
054FB8B0A13AB598BBC481A3240450D1453A1CC7358A0E36344E84B603738B27
76D1C11C1CA08BC250CBBAA3A40FB98C1F251CB49EAE29A3AE0601DB63F00AEC
1B51AF73ACE8F4E6B898ED0013F4E82D07F07D00F8CF057D4185D415138F18F3
3B639C788828B5328737410E496707796AE6BAC50D5044649480BC9A5EF2DDFF
80BA62424F8A8F65A97A082EE36EBD373005DA23F468A4C29F6B5F0045E5BF54
F0C38B1921AD261FD71FA2D0D0FEDD9569CFCE827043567C5D18DC3121BD8B93
E96C4A4BC2376163D86CEAF6BA883ED6019E803CE4121441ED02D5DA83B1A7FE
C5FA6E23A2EB89320BACC6E13138BC84B181F1401416C33BD02A15FF377494E5
32B1C20CD382EB8EEC2982333428081F09F426BF0B4733F9E70B0455B6097E73
553EED34DF8DA712C29D713D0DCAC9C79BE3BA370215A15953B841058296B4C1
BEC2B4A973030A9F3040C921F3B82D67AE5E767C544EEDEDE75DED7E5034670F
9B401A4E995B235DCB849F9E774E1344E414D0D88A66D6B4F56BEB9360478E29
A0269D48FA1C161BAFBF18900D500C4CE3599A4B18676160401E3A2478F6F6C9
DCBD03608C8041F8BDA4312FAD24E09402F99116F2C8622792554F2C2347150E
DE5750C4AFD3C29D64922846ED84288243C50777125941EB799A7EB17012A0BB
C430862F6F2AA2ED3B207E61FE343E2257985EC251BED1395CFEF5CA9770344B
E9D85CA9156FD2351B04C09B2B00DEE2141CA46794136C71065BE16758F2271D
8369CC485D7E80FCA6BB52138B82802F74246240B6511B52A145A5F04D46673B
C84C902C0B5DA5213BD45B03B68B6BE3C94EB9F7407120359E05B48B3C29CB96
9639BF2C227E8BFB63807FC36AB88C65629C914E534E393E530139BE17DBEAE0
B5F9BFFC51C373E782A0C8C3852F4202021283D721416FC7D5BD9216B82E0593
62F6B76F59348D6FBE387202906BE8012C9D6A81E699714533076F4051EF2FEC
4E6C48398AEE257FE62A4819A53F5208F59CCF307F6B9C648F1A815D7F9C36FE
A622FD1E43D9493B4E713CD699E275A78A90EA9F52ABFD70788A26EBE7BA4D54
21A59A1BA970992D6A588F3463B38BF385D40ABE3C641A984B36D3719C72C2FB
8B8274AB54A6853DC6784398A6BDEEBC21340E3C283EF9BDDA9448283E6E547D
FFAFA5F5B0A3A68ACF4E48AEA4E44DD23AD5437110523A77487E5F181147EB06
5D30A883FD14933F4B11CC112DE73307906B61387A2AAC32CF65FE36A4DC075D
D4821E9C70F37656EF86B63BDB575DAE9F7E1E55AD308CD97CA63AC9B8FD330A
C3426AD987867C257217C859D48C1603730E328D3791F5417C3912D85A03F9A5
3B9ABF4E1AEF6729997C6F28F87E3639D091922F4994671B22EFD41FF3FBA7E3
A3BAFBA940412ED8EA92E60758EFE81563C7BD40EEF10B28AAA07C0CAAA57932
CC6245542D28941DBA5D2622A7FF100A8AB2CF97925A301AEADBA6FDBFD9C0C2
0A3B4068FFFC99D534EE571D5C749B119DD8A4AA010BEECED988669F31CD984C
BEC24B93CB07C31BC3EC586D74C7499018421D8D93659EC8BF539637FABD15F1
9CBCE5F93259A6C4A8CAD50B9186BF14657A90C192371B70D71E5ADF19506E6A
986394156D04420343AF94A4BB66F40FD286D9769861DFE1683E2CBBFE3F6193
DFF6C5C708439E4EEAE16EED2627A072AAF76D31910CF0F71F72FF52A8A4C819
D119551A8B29CCFE9B24E5B4AD782AAD5BC54327ABB731AC87BCD3AFBA75DD1B
A7B41B3CA4DD5B1DEC9F09A663BA83AB1D5780045126F577F5528CB36333C946
980B89858450EAAA5D3FA2526DE0067D2FF9093CBD6788A412D211A3EED9136B
5C14EBC182CBE1F42E739B6485473B414FCCA4D5C10FF4BB44516C94E1B466D7
2162EB2BBC2E9E121729E403E3325D270821CB12BE7ED0FB9FEAA580CA187AA3
C94753856EACC336165402863E27C1A4EA602F4C370C2628C9B71DE573C03946
3C85D6D80D2E3F6E3D9B0F29434DB161C8B304E5A7B771CDAF55815279A3B830
6D923FD97898413C5960FD91C88AD7CE0DFBD07FC92C6CC5C03D204CEDE8808C
FD9B486A8FB99EE248CB30602E5040B8F3ECE95D6A20B2D81AA5FF4F8A1365C7
E3F4A16C8B4D2A281B02AE570B310DD201CCE53B32D620BAB18A9FE1066FC4D9
D3CB86879490E46BD0F0F28B9C7AD4DAACB1EC98EC9B191BE42CB025D5FB9D1D
24945ADE9F98D83F657534C39FF493CEAAB36A6F25C04968AA801A46BCA9E0AE
08BEB9288E5F2C1040FA69D4FF14791771EE369B64E66DCE2C94CD52B8B3CEAF
5CEA7C3AE566DA6FC9118B7A2B0B115A123C1A8C4F2954D56B8F24B99DD5F1B6
381729665BB977A497915342A184DA5589E192F08B7149CBBE88A46D859BD719
81310F02B957C55D77B1D8DBDA6BB66382C133E6FC0419E3564CD403EFAAE6FB
B65DD5BEB15EA43CF3A2456A8712556956C5A48721B1B1E140ABFD93219B9245
DA7EEB851DBA2D895DAF932C488BF2869EB1D489459F860F97BA62BABCE86CF3
127088FE3ADCC52D8C8565EC5A3E0ACD13B07D4110C5EF052E53560BB5D71444
A36FB4C3A6761D48BE17ECA852F8AF6C24413398AA3A0BE63CDF0CD9A4546C93
25291D11D02F4C228052449CEA08972754E1D090E3889B56BFA096258B227C2C
2BBB879BD6062EF555AE24118F105F6770EEF2A5780A2B830EEF021FA259BEED
B8E53DF62FC14593FB1042ABA8BEEC84B992D45A2680BAC63497C593C90728B1
2B705F31ACDFF47EA3BF4C901BEE4B08759E95A8672CCB51D3051000381027F2
561397EB2C00C2C8E4CDE0FAEAD94134D268CD33668C976DEE2B6D22C154BBA4
3B136B7E0982BDB3E6CBCDC3FF63DA72DC128BE3423B5DBE3E30934203953A7E
3555C74717BEA43B9BDA541D3F3F79AC0D77DEC27C2DA43A817662FDF1896DB2
04DCF514021B1CA2BF34A30ABB7ECEF68EE3D3050D3C98651FBFD5B8B6CF3F71
B4C23DC40447A2D21270DD055EA707AD5124935377F2CDB9E9B2009EB67D0923
1780EE80B36DF4EFEE373D5F1AD84FC79DE23E2BA52D8EE1B1D3F8031CDB2435
A7D112AA3F39BD94F21DCD05FF887330D1BBD00364CBA576C1AAB84E08857D83
5DC38388AF38715630BC5392ED5E489583C42E94755EB0854963D365236AC4C7
89966F03F8B1FE3B4E639624E98063CCA696B1DDA59A1BD136B0D5E108FF047B
7FF236A9312E8DC44F6DACA112C05EEA14EBA2FF1B11E6C297AD4A1AD0E9F2D9
DCC20003888831EF41A99CD202CC0865D4E236E84F3F4DF28C2D3457FD04758A
839B01D3016CB710B5E3B6C185648120398E67E38079A7454B6CD9DC64DE1112
D9A7F5B61F8CD458C787BE6E4E2526A4E19A8C02D1BD76F1DB27CEA5D181D7E6
BD1EE31242B2A36DB0E19710EC27BBEDDD25AFFDE220C21B8C12F59FCECF6F98
48B491C64BE4F4D111C5CA3DD5EF79873FCA0C01F737DCE787E36540498DDA51
6D47B0F1789B861D786504653919C9D747DD8DEA48E055AE8A59DBBDB3CCEC3E
E3C80AD06EE105AA7D96542F152AA6ED7F930E0A221BEE8B2CD455AF9B5F2A63
43E45D28AF8F8398D4756D91BE85315F65F184B284179E82B79A4530896BBBBD
4054325297D9E372D2E38E5AC885C2330C556366DDA4031A8E608B103688D2E8
60B9BDBCD50DE9E960AA2577DBBD57648E398F5A052751A5B22688404EAEB34C
1ECE9D5E75EE053C7DC5E9415BE35C9DFC6B48E8325AF766537462AB0B27E20C
0BCAB2F2A7AF596629B4F95CA79970844ACE2775F10833F8E987D55514A86E18
BECD55F1A39D72DBC52997F0A34C70421BC3BEAF9135B4E45707032333B21928
0BB07EED26EC0AFF52F658087D5C67D702AEBF0B8B82FC8C838BC00D349557D5
1B7B124C64E88902FDBCC110EB40F4BE6FB515312A345FF18B169B121155CC01
83BE0978301A03015901FD3A2CD7D5958BC9670F372257CF2CE99D1A8C7C2A6C
659F3EE6D6D5F242F5ED8508E63048E0DD8F43CC580213BEB59D15D30B7292FD
83B6E027EC99575EF2ECAAC7649193843D694E6CA59318C0163885030C516E31
813AFCA02EC2AB68D12BB1C155658C63BE6D662D84240FBD48DA483EB5178D7A
5954B974FB5898E1530644E4601D291DA077BE63D94C9BCB476ADD8584ABABE9
9BB44C19F6098ABC280796AB83D55299C88B054F18A1FC081323401CB73F7430
866494732CD3E379A18BB907B0248B6D4702C1A319CFDF1236DE3C391F309339
F897318358E21B0A78302026FF3FB4A65396C7C62E415DECE0740B1C300F284B
0149B5A1D5AE3492EB2FADAC6C38292458961C7716671EA29447D603AB7AF996
1F0943FF5F02016DD6F0563A268519155A1C9026DC8B53B3DB4FF6C21B348CB7
710B99297D1854B057ED2C599B423AC51B24F2313F3398B4923815D0E410A7D7
D2067EE56B77B4C936FBF48D27831269D30E1A71DA5B83052A3947A20ED609E7
06465267C2E858D318D4564C28040B982EBF82D0914F7C33F549D3055F1DB764
F538E97FD6B1BB2AB26E23DC03A8E6F3F0880429DE864C97582A155AB9928B3E
0676CC131BBB42EEBE41AD2B5C96C1552550FAD7630471C45B19DCAEE5454D80
7BC1B0BD37D5F03F931477AA59235FC33C523F93DDB2074EAAD1B895B159E2C9
05459D2697B2819F3B1BE0958F0F14A4424E00738F4D305CE85F7416979CD264
4CD7D85723EBB35773DB0933927DC21081E67E5DCF4E46E4FA5849011BD76FF8
489964A7848FC6F3CFA44B7F5465978236AF7034155870747FCA1150FF64B719
550BB7ED836021A6B8466391813B9003AC9B950A22EE900DAA652F44D0F969B4
3B0F361FDADC54CD1A8B717A6973F1C4E39EEF33CC0AF6A8C1095C81DC1E52C8
28A7A1155DB7A1A23D203D3190EE92A37D3CDC54F6D4A3E47A5325B6AE6E4C62
8D450E7E1B4025089EDF05D020C458C7F48A9F7F187558084D9CD408EF7FDCE2
3F465AFCAA8EAFC981CF447A19D91B8CC30481B5C49B6ACB4DC451F9C1EB2C40
187558084D9CD408EF7FDCE23F465AFCAA8EAFC983ABAB0AC230DCB02818AF9A
164918DEA34758E047879E37ADC23BF2E23A462019A6C8D0750307647DCD9837
57F04EBE73AEF3E76CF72463FAC5AA7A2799F1C34DEAB8684FAAC5E93D898F57
080A6AB935C3254FB03772CA6CD87384A6ABA7D08ABF7962B41FE88CD10CE24A
D96B20700594317808F88F138D4968B83BBF7DBE3A71C4D5C14170C38F61FE06
BC63C0F4441BFACC75F99FEC2E64F07520CFA413E0F85E1E6FCC916ED5D9D3D9
FBD7BDE11F15D300A9E7DB8EA194DA5864148CC03F6C3A1DCCF42389A260FB4B
DF2F5BBADBD746080A8FF738583D7F1CA8D7E459839796CFABDB32C5CB6252DA
FCD8A3663D04059E66E93E43F1100F43B8CAD15F8DA73F6BDFA2250B1B59981E
BF2BBDD15211DB3605E9D6622174BDE3AB3916E34B9EAF5DEFC753AC58F9F5F6
6F1571346ABD5D7CBD7A792B3DB47808945CBB3EFF04AFD1CF67018D820E1C9C
E14CBF5AD328803FD97FD11C60C1A0C99F8BE96CCAFB9BDD35DE010A9DCA01C9
7EEE4F17AAEF29B1E846118AC9F0B2E42C04E3EA9587192A73243F324E91B042
4EE530FAB01CB47BCDCA70FD65C063768ED394770CF07675657587CB8A56596C
99AD5B3C3DFE28AC43FD186B6BABA7FFA77683212C8AA7D5E03D9BA945156C82
BF0A3AB246BA724F69FEB1E8EAC3FDABD09D5C3E33AFFCF2B17C22BD326CB870
14576CC54E07218C8272237FE1ED4BC9AB7FB285F59E534B4B837719529CF98F
AE59762B466BA2AE3A811D1D1E63F320E1D97318746023E1C0CEBB2773802FBC
CF917593D7F59EF2F31348D48E48DD59546798FC4EF75EA4F294EA8496D032AB
CB2D7810974954D41B1FDED43967E0676CA53A9CC5E16C770DFF9D1C35B857E8
0BB677C002F5B67650D9D434956C7787A84020D511AF8AB17DD10B3AAA7E18BC
7AACE9AE959F79620D150FA44AC6C6DDD2C12840E74F65461B5F14AF73EB7709
34B29652E763300876BB073367A61A91B741B4F1D8A88B0282F50FD1EB2568CC
35D8A54FFA03883488B029928A70E0F07705286911B646600FBFCD96E60F8C7F
48AF78C09E13E90690A80DF614F24E9D390EF7866D138319159222779410AF29
1A8C4147F7E7E2EFF13DE16BADA68ACF4E48AEA4E44DD23AD5437110523A7748
7DA4095A14BC7B27B47AB8E9CC40C85CEC9807E21A6FE5F5572F21563212B299
C296401C85FCEFCB9B92D2B264B5EADA0E65975F32FEC44D28C440AFED971B84
6D77054B870820DD196E4EE2631788B5B292CBD205BD8A7EECBC7DF682ADD469
2AC17DF0F573E96B0A3A213680FA342E4FF5C95044FDE2392FAEE38BE1EB6D08
6F2AB69CC11C8D3C4E497D1E90E7A0F10941DE0F2AC2D901074A78437B607378
E3C4AF5B2A59F36883269056908BB3DAD235066168CB6D42230045E7AA3F84DC
7F506506EDE0A8F77D0028E65449802E6C1E310E78A4D28ADDB131FA21A5C959
7EE5FD1996F8AAE791FF65FB53F78C6F639F54F8EFAFF4DDD78DDA83C237AF56
4E874A8CC6004D04193114792C1DAFD35FDA10C0E14D125C730ADCBACC2CBD7A
A998E955D662DC9AD78F82C29C3DDC08B6A551B0C11ADF18F69F1E56264B8E31
F7850BB961E933EAF370C18D0D1D853369B8ADE0B18E8DFDE785893B5EFD6019
A335CB2637C3F3A7BDC6A6F5F6AFFD8F05E6C0D35AE058FDF44BB7B3572D01FF
FF3BAFA6428355378CA104CC8684771EFC40376739E8B514227E913DB1BE7C90
5652C9DAAECAD5B9383AB433359862DCB30BA53A413B5E9941CDBE1B7083CFA9
0832EB06617471F08399B1453DFBEA75005AB7CFFC1288DF89BE3A55A7A6C770
D4F7E864F942DFCB8A2F8972427A47CE65C55791AC67DF9ADFAE768CB940CC0C
6940EE386D68EC1320F9B4B7A60D26292FA2066ADB2182BF36E33D367D772C36
2F558A7C977712FCE9C541568232CEF707373F07E753AE55712F2E5C5BABC67C
9D4DAC9CD8A7A770CAA8581C266CE0F84E6822AC0451BB22299DA9DC600CF989
B042B6B08355F6EA73C7005C3D71BAB3CF386AE54D6D57ECEEF7A86A51787BC1
C7740478F55C4D6DA862B50F90997989CE492D884AAAF30BF5310D575C438B2D
FDD132D6121E7EF980861BBF194255A3335FD103803857B8046544BF2723FF4B
465FF2D89833D8FA824F73E37CEF5B7B63DCDED18D6B7EF82EE0F1AAC2D34401
87C8FE2527271954A1419D8C5A458B65D9ED512D024828F35A805DC0E555CAA4
9C4FA866133B4B133C58D716D29E8FD7A27BB14FF676F11A4D37A0F86D26258A
210A15C3EABF35EDE800133D57DCBE106D4C2EED449992426730E1A4338C14F1
8731B696800881B29E107C77DBDBFEE4FA9528484AFEF77CB10153CFFEB1AE7D
1F4FD7BB0D32C0CC64B7D418705295AA71E6B163630A2422AB980B7CF013681E
4A51760842271A4E67065D1E7CCB38BA40FA80982D7D4CD0E107D7CF24EE0EE2
874DF99ADFD2E19382CC90DFFB25E67F6FB764BA9CA1C113BAB6AC38D8E04311
8CF1325D3CDE7E1675F430F1FCB2560AD582DB153772FA61136A0A5EF8DA1115
F1E2BCE859A035DF08003075C5109F898D7ECDC4649398248DEC8BC4D496F325
6DF52DF43E87AD00D2E8241896C832D3A03EF24ECB073936A0C035ECDD9681A5
2D8A33E72DAA04EFE50FAEAA8C7B9291E8CC8AAC6E4AEE01275E1239FA447362
47CBAAD5B856D7BD6E5E186ACBBB523BA29473B07B9B4A09D6EC83705AD53472
2FF10CA1F5957F220CDFF1BA5AFF56910C49B957170DFE24C8DD86A56EE7205E
020B27F5307ED073863A4052E6E84B860F562E4BB6582CECB0CAEC72F2A28877
E6BE1D335FF52BCAE9B82C4BDA9CDD98220A95BD3612697568EA0D83DDD7E1D8
3FAE2FDECFF5AFCD939283F6AD6320CBFD44AEDF807280DB07957C96CE525F4E
3959FCE2A9A26CB9826C79124D008ACD573F96BBB7D7BA03548CECD9D12CA669
D16A0C25A85CF598BED89CE4F91A24DD7E5975965843EE8BFAE98A1C243F368E
7567B672BB20632C49E4671C9168366BB2CA30F4D8080BF16C9041485C16FE90
05D865F680319DA302AA75A675D510AC96F667A656AE31A1B152FCAD7FAF8498
3CEC5342F58562CD8D210DF5C898304B7E77CBAB25E38A439176C4EC2DF9FF58
31F242B8B5A0FB902F9B2355F429FF53BE2C86DD8CAA9E18C093BDD727BE5CA5
4B9CCF4A837EEE7766DCCD9B30F171DDE639B45488B890196ACB0E77DB1355CC
F8E3E54C3BB8D661E4DEF3D5B062FFB88512FC72968C5783506819BDF21F6A3C
2FE3B76F5D2D394D2B300306CB5E11A1DF57C36C6E9EA13C0560C3C952573D14
577705EFEFF28C43761EDC0E66A5E026E1A82F6A03FC79A00837C7DFC6CBAD47
0825AA8979C2394D7A345D3BF0599B1E4A6AD4E0C2BAB7AA375883C30B805D4B
E473C1D5495826470F3A1F450D1AC2C81C876EDAD5FC0123DD8C3DF484971F00
99F9CDE64ADF6B92D7B91F689926333DBBADE123836D66660FE986E602E024F4
2CF00EAF3AE0B8065551895B4AC5C28C310F15AEA54DD1DDEAC00BC5F1703A68
17326892C857A51A8D59DE97F8A01E890DA500847930E2A6CBCB92E92D2819A4
1102348CF94F0945869364D108ACE6D74B6A4FBFAF7245D8F075ED7497FA4DC7
720BDCC4A76466650B00DCAF38B8C9332CA8DC2E6F451970BA008CE0F1E72265
36AA7589E6118B332B7B3B42882B5DF00C1EA26A509F71696EFD6AA65FE8DDCF
6896665FA7518D8743FC64B26BF9E44921A707C2CF3EDBA68613218FFAA7132B
E44229304ADC8A686D6732B0207BF2E8A26CBCD370455A98A239D58B788D47EF
32CCEA3A270192C50141148F1ECA353AD07C46D076DE76A585CC2F1D575314E4
7D092A699F1B16C8ED115437A8EA8CD328F1BB1FE014251C3C2EB411F1DFD619
D6F72BECD582160B052A2BA4AC57FFCCDB5AB2208DAECAD14F460F8E24FCBDA5
14D696EF93DD9F32C5BB3CAFFB9ED72DD8062C58AF743AFF92AB12E18F4E7970
53166FB0DB325F71E11F7BE82E40874F4AE55118EA3F62891AD4DEE7C73D21C3
9D0FEA49C7DA55875A3CCD94F522EDFCAE0CBDD9C928971D57114767FEC20D2D
BA71C87061EE8BF523D5911D04D1E14466BF3406D2AF6DE5C7F46BE9F4D5016A
AF1BBC2741AD688458346234C0ADE6580CD710315C8C992FF3610DFEAAD917E7
F290E617903792223A2AA23AE70254E9E3CF25BB0C4EE70CAB7C5DA7C9BCDCFB
67F1B66FBD71AA83D699485A7E03E71DA50FB2096EE5DAC923CE6F39C694DA7D
CA8F8DACF03CB8AAF73775122C66EC7D565F62B047B0584D28F6E8A019F0BD18
514E15E72B5B7D835D816FFA74EA387DB48E6AF9CE01059DA424DCE1719F0B8A
7611817DD9F8319F565C7391D8A7007268127B065F507D69BF5E60C95A6FAC2C
F9D670F1FDC3981ED8BECC6417A81EF0A04613947E06077A4096B01BBC967EA0
E4C588F40F4683C2295FC0C58D564A2A4C4B2E9163D796AD65EEE0ECC9ECDC61
FB079040BB113767CF48AB5753EC8D7DDD4250FBD6AC4DEA821CC5FE79FA30F3
78698BB17CB6118EFDFA622B219121677E28A2F95530FAEDAF5D6C7BB6E40E63
1D6C201F2CEB2B654C091F210AAAE8AE94F744C02BF2E34544BBB19D1B5F8197
120B060D472889E553C988126096DD343532E74B5A87190FA9A1CB391D0DB8F0
9F9FEED88A340C8365AF4B2DC79BC7C0F4C7A421734301813921B971F6B6E7B4
1B0D26EFADE71958B056020FAA6FFBE7DDD4DBC0EAF8314553AC94A5007B4F76
265BC8875392B5354BD38DDC1E901DE981FF38A306FE6BA6A35630A7D636C1FC
DB936628544B69EEB8584D6AC888FDFEDE4783A639A6DA91E20B1694905F21CE
F0917E1CC061E828255CF22D3D1FA8B72664C3DC2A325932A4EABB89DCEDFF4E
028F3583A53F6E5C8E686F3F263BC002C8884F38F3BB6E09768DA940547FF24B
2CB8D87BFCCC85B1F91277DF1E391ED329CB19CA25E72557A4A35F82C782A4CD
A36CC832791E32AE8A7D3787F3633E6F39E55779B029D5F6C074278B1AE1A147
579752BCF5C8B0040059CDAF1118CE04D2388E3B9EFADC15213545D7EB212CD2
9841E176122E3D1E1F19A5C25EAA4EA92318EF052D0394C18D3AABA554C3313E
6B317559332B34FB651CC92781B4882D36D3C1FE68C7A6252DD820081E3821F2
26D8D45B9E0A9745747E0161F641E51F352F5ACF474B8D104A5677B231727E89
E8F4A9DE0FE46BAC8456A9F64EFF4A9E0F4E362A91FBFADA4209F17B7ED3B19B
BC746DE44065D4297B398A16D12636A82305B707B99B0F3343006CFBE10D3932
8466FD6BCF6ED8D9799646156E1491E5521FC8B9CD9158D75CBFE77D8D60441E
898B9240AB3BC8F14FBB57279B0CE70D339C200E954B4A6DA6617E3A56D72EF3
32FB941F4B9C221A9BA5FDE6D30F9B08478DF3844BABF04CA767E3B5A05B551E
D33D19A1FBA979FF7BAB06B1AB21AC051F12DE508EBD20628389456D4ECE6D70
1656ADC48EE39630FA2725A0A86C028FAB0F20F238C85528B8B7946ED9BCAF0D
078C851C24E2B2C31D9A9A1CB21383E4B0AC2F2F8B8171D61C586026861AD5B6
F039B09F94B5758DE7536D2ED92D563CD5E4578112195B3850FAAB179C83E3C8
5ED80C2F016A43350F0034B1CFEC671B7F820C3869E2146C42B91F3F42C467E8
599E2C88C2E4394A3AC5CBF8622000AE4AA5B339C187F52630B52309834F266D
7BC77F1F7478509623114B059BDE45E06DBAAB8396B47AC06FE6478E9BE33262
66B2D53D8C44BF4406642BE1A49834A6BF71A5C347BC61FC9D969260FEF908C8
444011F06A093BE6DBDA97035EBD4EEAD2BF636BAA602EAA738C5AAEAF6D6363
99BDCE82B6F8A7334923EE9F5271510FC852325F71F89C5B67C2510992C25F5C
959CEE0088B9B616BE6741F1C32CB8F4DA2D11CA4E45E5CCB2BFA4B9CE8EC19E
6C93F62E5E348A9E2746BCF8D43577DE468B47D4034095EE75CF015922FE9336
89ACD25EEA2AD31694416CD9F076807E9EC0C141137CF78275DCED0EF87C1192
976B4797AB830FF4C50CE59A51A6707CD7001B09E806DCC825BDEE57D8013FB1
B535430CA42B90F22BF876FFFF57D6E9C8821D945DAED7440149570568318663
879F0D368163E990D54FED995EAF372B43F6FA8BB753ACD3BBDE0A6D6F1A6B03
46F5E4913CD00C62AC854FC5CB6BB0F51914C268CF6F5AE4C45D6027A5364DB4
157AE13C7BDDEBFFE3127A90F1242FF31B357CD732888E0742B9604491EF3D1F
565F8FB5692D7F4852859B574EC73923FE5829217D9DBC3A4A5914E16FC93E8E
146A7E083984F15B6FFBAFEDBD8071034F5EB20952FB99C4190B42976B155DEF
91C8EF1AE27B1561345D169EDA27F467169F3CECCD0AF58C15FBDDE9B0CC5C07
A24EFDD8650E5596272AA9B915BD6782E4F8FD33F2424A5913F8360AEE63A676
7443C7D3F710ED10D3906984432396FFE1B7F9DED15C30B33EB1B2F2D8121F94
7D2B345BCFBD126D2A656ABE2CCC9774E9779651F6D46FAC9701AF19072A5964
77145A13F67178E80A3080D1CDC2B81FFF1542AD8C861A730660DBA7EC2C2C90
C1984714EB131D7495818CFDCA404A2A03B1A3E49EB6E927E8494ED12C92413B
B84292C84374203B1A2C8994BDABE67427CC7642E06BB2EA72527C06F3518BD8
4A9C6A871B929E9720F0B5696686A989623267700FE353131FBE9CF589A63047
AACD985C46835FE4E1F16F65C40D4E3ABF808B7B6CFF6F58272CC37DFE3EAD2A
815BC6AA35AAA245F7035B38EF28F2C162C20534CCD8AD40C4084DBE6BB79DD6
2F5EE5BEA71B3A53283F3AB8FF6CBB10EB10DB4A058B97696DBC2D19B7F5B7A1
C0DBDC7B1680C150F36A1C47D50CD1F688AB63E9D986BB13B3C675E6B14F0408
1DB771018172A0D76EB2788E24ECC8FFFAE033
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Bold
%!PS-AdobeFont-1.0: LMRoman10-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Bold known{/LMRoman10-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Bold)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 60 def
end readonly def
/FontName /LMRoman10-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-486 -295 1607 1133}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105A2B97A2545FB4AED6E864068CAFC11C1B6D53
286E0C557881AFF6159BD803AD491E349272C4420D2E2274C589D040CD3285A8
9B4CF82A5D6CDBB3A3687E0643D2A256757CA467EBD41D83C4068B5F571BDD53
8E7B7B28273CEB38BE621F8217E7D0555F034EACCC39DBF40BFD9FA372B08F97
2001D6844E132A16F34B8B7234D5EEF957099FA45E43170CAA6EF70241E1A720
C1322AA56561CAC98CE90766897AC0611464168BA543C5664242BFA41B3D7688
3D1F10E97CAB51F4BE34CDC94C0EAC376AE280720C33DA72613F8C2D823AAE57
05F548DB3DF8D58096A65BD301502685F53ADF37350A323E263CF938292ADE86
4E420919C2AF30A8276BBCE4CFB3684CFD43C529A2C3203616CC19D8C144F695
88C9ABC4B49497A29F2E748D7C8F5637D9C9D7F057BC0A7ACF91BA7809044D7C
28A2C3C0B39DFD381EB48B2811A3B289364B9AD88B05EC6A2B79F841BB4599A2
76A8D31BFF321CDDF6112BF0C2C1E565C889A49EDB7873A2A09E0B2035E8E5E3
E924F96B97B49382EF212BD25A0E1CD7F132B4D69A79D085D4B3B4F7AB8199D7
54C5C273A119FBFDA9F913E211DDCFCE950DAD1CD18206D7A505D1F6F0BDBBC3
C6692C9BE7A04DA687BC96166FFE480FDDC1ADF8DF328CCBE1B11027E05957EA
41C4F0C0F64941E6A006433B78D17D537004045CCD22F9B96D8120CFE40CB7A6
FD8FD92293D3389F42A29F4F61A8D4A782A141035935D0D6DB2BAE585A54CD88
012870FC97E3FDAD1B5100045CBE72B72E82A6E26D2FC22656E4DE50233CC0BC
C7A54B9F67758563267093C77A86ADFB33603FB3A876C770C80B465A53F2F2D5
8112FDE19AB9A4079E0C90855C51249F2C2240B6EC1B5E300C7F388406E4C645
9490E4F6CABAB531EC31521D635B141538F192D31E24E9D288F43A978909439D
7A156AC8F37C032256BB99967897E536D47EA366FBBC2C9105B7434040077762
A7BC54551705281FA3DBEA2D747BF4EC1FE15303621A12288A2C6010594C8634
3AC38B8DF7DA899EDC907556CB0E315523080E6A2AB98CB984085788D5975852
3EFE904806262F049E69436E357D68B13040C580E9515013E4AE9A29CF63C13B
40CE2165EEF09471B8E6A3E58986C54B7C3CA24B7130A94CEF9322DF0CCE8FE0
405D523BD800B3DE120CBF2CDCE50EAFB9B4957B842BBD708F52A3A0E98FC71C
AD89BAEA80D288565525B1444BF2AEF21A43DBC273DB1BE1C1F5E1A5436145BF
8491766AD3F80155E920E05E6AD03A0C8CB629C6AC474AC2F118081AF2BF003F
30990745F489487179A2E91E4E911F74366983E8E2640C074C521CF379526FA0
FB75CC1D909407C9361039B6D297D934C7F01C4A836B41E43F6C2F11BCA28310
F5A1C98BFF1C73259669E3AE2639BE0ACE6D50AFEA77528149BCFD7E7E0A23C7
5927B4FAE9E687F69757335FD237E4F663A9D860D38443A0264CC224DF908AE3
E9BBE4AC0AD95EBAE53E28EDB2678C3E34B413B86E867D0207BD48FE8067168C
4412FC80CDBA62F8B197C199ABA21AABCAC412960C8DCA687FB2321C2CF3920B
6EF07098D4E97FEBA8C650810E23D6351C7E66DE68657BE375BB78C141535DB1
784F2126C001C2354246A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729F6610F
0F1A900F658E65A28FCA65062E70F4703BFAF170560C0AB39BFD238A0859BA57
0499CAAA419F556FAFA343A4F0E10031A8D199E5499AE2072E8471EF48F865FC
FBE96EC4737CF89BD48165E45DC671B5255F21CD1C797A817B3F07D7CBC20755
BEA87379F2D211F2AC6448573251000E28784DD4E38CE7E9E4B0407F6A70DE97
442BC98689D002BEB5A6395AF413C985328DD50B45FC867C26294EE34062E3B3
92D2CD3152665EA6AC56160496E102C4FA87EE82799CF60EF345B376A3D20B11
E908D9C6195D8D3E9BDEFB663D035CB73868A8696DD77372304300B93CECBFA9
1BDD117B3A9EAC1935F8964877EA22D9E5D4256F3134B7F3A381CC15BAA041EF
80C5BDC12EC1F5786BB41A5A210C14DB5C1BC7937F8538038B8C4E7968D0D35C
8563E0F4C828397B68F9FB7B70C525B6BF8E81FB59B55948BF6E9180221EDD0A
CCA578928815D319AF71359640C34F8E643B53372E4F87992C3AC9232EEB7A5C
5178FBC21A3BFC4E230375D47F4691E0E9E35431EC32B3DC1D6955B0F8DDAC8B
124A3A4E666C8670C4B6CC888FC8C04990D3377486A6E2D252E1CAABF922D3DB
FB6E2C47CCFD69AB3219507B1EE615054441DEAF6EEF29C5E0366E567ABCA156
54BF03B38F6419499B6A09557EE7668528DB216195143E8CF31C5D103CA1E66E
AFA343A4F0E10031A8D199E5499AE2072E8471E99570992AAAF45866D8D63736
A1E7496C76AE7950F5F5D869729A22714A5F0E7DB43CE31215A0DEACBB90EE52
D196EEFFF2D9E6B8CE8CF9F32866ADCA85FACB90DDF81C9B6EB5D7DA81F91253
1205130061A6581DD678A504A6B8528B9F2B8D803C41812E5A530C0BCCE72CD7
F3C5C03EE1146A1F417272A82EC705585C9FC2917528A1E4F90EBE4A58DE01CD
82B0B8D1C26998B697212048EDF14479D008ABE5E434897E2C25C96E2F9F5588
7CE8299F546BDA7F7AED71F6B5CD27B12AF8024E4521C755D34B49654CA7AC01
EC0550084F4709EF60F4618CDC774CAC643C04240D102ABE0B634352577A9FC0
9BA8DCE049E5487BCC7730A01122D441E00B891AEA4F86EDB1EB6F46C99B2A0B
DF73C9EBABA4E997A4D9746B91E7AF8BB5042264B6ECC5EA3A45F41D2EFEC1C8
DAEF79F5F1E8DD468DA189094AA55E527E64B9FA87B6CBB9AD96CF0DEC60B30E
411B0C5A9DDA5BAC7801BF0949E4A2BAD35ED28FC0241E827D0608A6B90E08CB
F44A30669AF4E20CD5C7A97FB69444911B4B4D6C2C0D898787A43C1B428B8E62
2923DE34A7C05AFECC87868D475C5F8015B05CB8CC2A24DD1FACDDFAD852DE16
B4A1F2072361A0A55231C48BB48C1A125F5FA55DFEAEF94A268C0F308677A5BD
F5FB5ED657B3AA5C942ED0C061CC7E03513CAFFB25ED64D56A52BB620D29153A
1A52CA65303AB423051BFEC6663C275934BF33671BD55C838F4ABD354EB298B7
8A35C263B535B361A120CD4CABF7E48B4DF39B2A9C06619AA6CCBC3DD8120AE6
6A6A6A8862CB10CA263187BFD652DC36561D27A9335BBCA18349AEF198BDFD25
8BC893B732CDE0BDC342A927FFF8372D4E1E5DFCEE38C970B22B6E51EB375632
C6148404D292047914C795B0C7A30B9E18D86E1E99ECBD5080F51C11495B0944
DAB553727A204C65A18A0AFA2C09BA5F38AB27268AB9968C77CFAA501F23AFCB
21E2771B8DC74A06CA42F8B32E1766E712AA0134127BD0D3662E05BAEF2FD087
93AFD1D55A784341383124196569481872D2637F7C40061417CF90E308F9B718
A1F6DFBE0C02B70E0D5161B7788007618251101AE6D340F9F0AAE5DF997D6269
2AF3A1C2994AD4BD0065D122163F2CB1D255658BD278E676961389DF3E0B2890
D204E55C3D6EF69FC60D33727DAE527F728889EE5596C05E093E5C526BC73C08
E4E7A40A4129F8BA7E405259E681AF12CAE9CE1679120CC4D0A0CF82672026B3
122E379A0012322A325BEF16B1F01BD51E5460CFA0338DF1F5726862FAF91505
153348CB2630542D5636ED8EEA52F319ABF14F41D320087BBC9D613D96D86A1B
B481B92ECA008DCE33EE4B71CF92975BD18850BB73E507315CE88A7A4CEAA6CA
F2F2FB122CF87CF933F558E4660C9FE5D440B33AE6DD498B39ED703F7B55B609
7E73553EED34DF8DA712C290F0BA4882A18B6602235F026F9D4CE871E5CC7EB3
05FA66555DD496AC6209BFD589B754D647D45435289A18CCD9786F929BFAF65B
9F093F66AE0198DB15A1E210A9A0DC5A9EFB7130EE72EB3313510EDB1DF48D80
17FEFE5493FBEA5FB1D26743416B6D20BA817AB4914E4F155166BA36E2A6FA87
45C28178B036AC8106A2A6FF86D1A71187A40F5776AF971B1A2B727DBD2810D9
0DCE81AD466D6DDE336D4B5F9F839546983922664F82771128C675DEB746189B
1E316EB3ACCF5F837F13FB1E9AC14A1FC533EFF5BA5F1C74DC3A24E5C00A7BF8
088139D1E75C02DC8F656D10BDD680400080666ED7406F2C075B87AEF6FE35C5
5601F999B512A80EAB5AC0244C26ED6EEA47C3FD8D9159594CBCCB6116A2614C
B7465B022FAA7CD29DA0F0624AE6119641B786548F0FDCC7AF4AD93658D416C8
6E3048847925F29A5304C8BDDBDDC8BAD0B87F3BA50D36D20926718FD3757312
D2EAC98DC8423EFB3F3A2D2CAE793A820A25BB2D9B78DE46B661721845AD3438
4FA8C4BB409F880CD959AF2DA98AE590A4DC2533D2B8E7897EDDAD9A3CC20177
6EFF8C4D4B6B7A4D7D18E8F9AA8DE19087A5502C21E5BDD170408D11B95BB8DD
BD96A7A874B7A87DA2AF636279A8B02475144354DC5F63288B1C652C7CC59B14
A910801C278365895F0BE4511A6A0DB25F6E9DA30C0026AB90EE57BC17191E74
5696CAB5C2BC92E5EE3FFCEC00EC532870FD72E532671CF9042E72CC4F3293EB
117340E2EDC4CC1FEA9BCC5FD7C550F0399CCEB87DCBAE8FC26A6302FE928673
58E2F5C27C016B20B867FD21BAD57A16FCFB51D3FBC0B1E1925EE1764C0FDDB0
4B1D24EEB4DBB360CA7518709F74BCB9FEE4077CC0C499368BC305182A720B37
C4B2DCB7074666A8721E8B581360B401854DFB47069E7114C3B4F740A33A6054
F38769F153C67290B03B7ED8B3BCE6679AA5D0433A84060DD8244CFB3A2226A1
894ECEE154601E6FFE4BFD3B348D9AB2153E5FD86AB6C2C7E3F1538C847611F1
BB88442F4C77D695AE1106DEC601B459460011B806CFD4EDE8ABC0A23C7C7671
94D064B69A9D0C7BE6E9218A6F873E05AA289E73D8E363798CE25A27C8ED7437
73067464CB460F7BC558026DBB07CAA9595DAF1E8D5CCE5227A4F01E1C2A9279
7B8FAD5BFAAE4004D75782101FF497C37FF3EF1EFE302F694C5016A2B3384E68
42737EB5639A3A30BA415E13158237535ABF09F9F27608073B580ECB45053F0F
2A618B6EF085F57FB147CEB89735647EE159434E3AF6588F47FF9722B3A5D1C5
49F85657DABE84D440FF54F0E10321CFA3B45790EF15C2A291A8A4132F4D5741
34DF09895804413BA74E6783AC3979608E0F6D544D92EC2B0F3684CC2E3FB874
03F64797942F9227920CAAD43D1B48EC23887DF1D5D855A488DE2435E8E5567D
483E1C52CB78A2F6903AEE73700E62DB2DDD223779B1E677B3B8D760CEFDB234
B4593F38E359681A22C141ADF967E18EE39082BF868B8A0B30F96DE8440B8B6C
0A4A50043A59F3B636DFD18A95CFF677ECD1AC125C7750588490111E7FDDEC92
A8668FC79062A6F0E358BB96C815AB13296F3745582FC99F5AB03A8835CCCE51
B50E52817004E4D3B74E0CA32B58F2324E9DAE1176C7724CEE2C70F3A203377F
7D1E8BE7E0BBC2D1323B239944FC0727155B6A248DE14B83C0D607B18CEE5DD8
43B5FE4096F520222A20FE01B307955A7D46B57F996D0B21E89872FD564ACB36
CBF058A6C4DAA811AA16248073129A8325A4859341F41089169420CCB70AEC09
B7B7D697A6CC355BE29D6BD5706D9F0A69A069D979C33F36A5E3BE297EFDF302
D8E8D5CED4481B0ABAA93DDB3BFA1AF853AA3AF3CA13CDE23412FD61FE23EAED
9C4910218E0E1F254137D816B21F76617F02A6A8B2C95869C26EF6419C4C12E7
A2941391819066BE33B8020D519DA028D46BD8A6C8689151A1053F96BD81DCCC
5134B80411532BF22520355476023178043584B70F134FC3F996348D63D35B66
CF799F616CB0CF628339A9C1BFB022F9DDB367620BC0E945B4AD75CB04BF5D47
A60DA45AEF703BCEE9E7745FA63A3E80745A2E1EE8BB1E2717DDAB52753B3670
5655AF39ACCAA4F671E3A60CBB746D364C09DED261E309760C370694988A2FCC
D91BFCEA5EC4DE842DE437C3F5FF3B88789AA8A46B6A7C759B64D7CFBDD25F22
AA73784982080BB2B7D7775E395BA4BAF7F82F0850D4EC408D5FD8E0BC83825D
1B428F0698672E8720A77B1E74ABF75AA9FFBF437C16AD70B17B9AFE2E0C0729
E5F10461A8DDBE0A8C52EA30A8EE16315D4FDF3D2B521CEDA9446FDBF1F03D97
B9C6282E98DAD2C3ADE7D975F1B658A581597ABEE6780071A93BC36DFBE6029F
878FC59A6546157858A6B4ABBB29858F65E937CDE31D67C847719779DE0B36AD
B03EDA4CAFB3DAE3C39B1E9D5222A83F9E39E4E85824567D0A1E58BF77AF2475
42817E624007F1C8D14363F8B6FFFBBC97BDB691996991542A8DB0D0565F05E2
F4B0AD8FEA7A39630BBBB33F5D017B3EC5E6ACB2207C8D2423FAC4FCBCE04F3C
65EA11FBCA1F9EC9BF5BB2997EADE9046C3861AF304CD78DC646325359D6E004
CA0EE326B98C540E93E970C957A49424DAF279B5B75E71BD3E4F21BDD6E22231
45BB57CC47D2960976543E664CD26055E8F13843591A8845AD4C96B871697F1D
B6E55F2EBB231F88BFE9882F3847AAF7F2D25F93A08414E5CEAD55C5F2EC6115
0D2E80B53B6034D3719C72C2FB8B8274AB54A6853DC6784398A6B9961394C712
D244CF986BF72386F3675257AC32605F72F404526E18C29421DB4FEFD57CD2B0
B7721EAF2B21AFA74F102A86D9482DAB615591731CE5AA2C88B3F79EF0E3AD62
ADB2F4FE7F99D1340D27C4479C144AFDC37E43925474CE25BBBF3E7B160A35E9
6685E39DE90AE39CD9F238DD95A554E64ABF5421FD338F17B562E955B4EB2BB2
CBE384947A14739733F9011788FF8C76EF12390D5D59BA939C42B4A5A20E3448
07E04623E5A083B06F5AF669E8C54611D9D515EEBB7192C63D22D02BB2A5A272
7298F394B55540E870497A23620FE7F21F1CA698A994BD5888DC5EFE67A2DC0D
F375C832B0315453DAB180934BD6009EC8819BD71981310F02B9D791F1B49187
1E24F734782B05C88C179161C4E080C3A2CE1EC3490BDA85877AE16BC30D56A0
B208DA546903B801BE47FA3C345C43C74E88A8A1E527B0E77BAE62868382DA75
9C24327559465FFB90BB57BADF1019900BD7DF733F0575302CC1993915FA6273
1A558BD50B46F924568EAE3B9019824F9FD2C73F1D915C9CB74B1DB734A10BA4
315B09596ACE79E7AA6D35E67B782D81D57BF7FD8227DE2EF789801C595958F6
B8E22D80D1148B449CF1DF8E35E7D920C143DEDBC054B6BBFAD0FE7766EDBD7C
E06A64C2C1495C14BB5FCA67D1E215EAAE959E27A01DBA71BB6660852126F491
688AB4FFC28B25F44AEF8261BB77AFE3A519787974F7593F2CC8CF006AEF8B11
06D9E42E1BD394BA97832A05A92D139A80ECA6D61BE7D20CA221758CD80FAE42
975993E68DA3E1ECEF8F3FB57A5CC84D1EFD5DCB88691D35FDF7B2A3B17C6456
A86FF9C72B59ABFD14DB0DC9C6175EF0A6F4686548EC650147C6C269FE10BA00
EBD20E34B1B3929EA15A4FB8D129DA0E15E678488C77F8A45C29401B7EBDF030
39F113B2CF4626600B182B937CEB198392CDFEAAB4E9A75A7A4817071CADB861
D1B26E44EB0771512E7D7086371BE3A8E4186D7E96116B82EE6A858EFFA9D7B7
F99764E3718CF5AAD7E227618CD86400D878FC92B08DD94FDD0788C9F6991876
71D84C9917EBF4E753A713F08859480588CA6F6C580A811508D80098E54CE3F7
58E2C884D6830B00E1FB1F743CA153EF4F768148C131B26525D173F07ADFE2C2
AAF32AA66EE6B2566A1FF654A9C7C34BECF48CD9726CF2A49D426FB9A98256BF
C6A306ACDD86AEFA6F4F2AFCE55BF27AFBEC987D5C3329FCBFD894D1F2FE8AD1
BBC6A27EB8263488B3405C900AA958F922C67A363426C03C53A0FF11DB5E6FE1
C1EE5A64B3ED6EC586613C178C668558824EBCA3386C1FBC1311951F039F1D9A
37844C7C6D9D856D9D02A14DA5BD9E017D60FC01124BABE23FF62E75FCA39BFF
4412A7930533FFBFA7D387CF7118B117913A10D597DC6E75014C8A068F6391E1
16B8811E79F3456986F268ADBEE6C0EDF9FD7957466851211D639820ABAC1E6A
7DFDD8349B3232580D03A566125E537B0D74B990FFBA7A3E63C82B1ED730597A
C888AEEC3E466AE803B4A1CF0BE5124AFF65FA70E2F9AB3F0406D1C9E5F430B5
632166497EE0559C01123E97FC1B226867131D1A1D230F6644C15BD25D51283D
153D8785DD1AD632A308872EE6696F1C924FFD9E94B76F6EB9D89B157A3F26BE
A9131853D72AC7474753A387E4FF6B9907F28808DC922FBD29732D4FAF1D5D41
59406AF232A25B53642F10D60835FAA6AF3797C2EE47AD35BBA52F360E387AA6
DBD6AF825F4427736C9E61DB7F0FCC062D4E32B9D21CB37C994124ABE851BDFD
BDFB0800183386582831736A70CC3AC659EAC07AFE7DC3807891D039AECEAC3F
500A09579E6055A0325DC5A5B0D8ADB5563588D38C1151A012779EA95A7E7164
A60BC32326C2D36742C0D71D21C63AA4DEC82F324705C65569101693F0D22636
A00F43261853876507C3813663D33205454A1A4B2D9173D593615C4459845864
FBB838F923953C393E4522AD74E714466099CCED942CCE4104BCD93691942E93
5C838E2CD3A397BE2BFA54C86F9DE29DFCAC798130C0CE5C49E1C5FB11EEEDDE
9BA607C557462D5D23EA6F98133850F7FD4B4BC918307C00F5AA328DDC1E0184
42474E34B858E8E5EE6920233F6087FCBBB91C5832B346E6D305C12FEEBD26FF
453DC14D99F0273CDFEA977923FCA3E98419927E5400DE477310BFD2047978C1
602D77C594349F1E95F04AC8DFB987412982ED98260DB84337892A232A3A1E68
8B860321B136C75DE0FA273D40D06AC07B567DA70D25CD24F51799FFAF3180DA
F4C93897F03012645C4E8BA1B65C396094832C8EC9EDCF022E141A5DE5496F54
EF7A0051F50F97A8A62296A2D3EE7B2B79BF7494BDA2645D0FD869395E1CE48D
9D7DAC7D581318D98098F86960E1482C543A511AC6077F046C5DC0D0400E1D29
B35CA24FEA1B3E10B9B1973A7DD95352BF1532EB87DC7346FD25DA57E50DDB4D
90FD4145E934F4F263CD7C1A67E0FC85ECA6DB85EB8EA0F4B85C04D8BBB1737D
636F96E460224A0A39F29E7E10E5CB790D96B2678A04EAD1565FD603D36259C4
33CA1E5CA818B7F113E20B3844B8A87C093937215405A4E4D84599E52B863137
AF71C8ED83A3155EAEC79A80F7422FC91F2215AEB2916B86943E19CD454468FB
B4187C77274565279391ABC6BBFFEBF0F70C0EDD2BD69F1C8B71B7D3DB7BA3A2
D5CBEF4A3F0349311B6AB1EDD831BBCE5175266EC2BA44C5A01A477E2B07EB1B
DB43D9DAC45F92D194E89E217B8FF4AD0B943B6D8D89FF73A6C4E68CFFFE31FF
38D74D4571BA45E0BAFCB1FB0EC115ACF946A77B1CEA2158DF6A4079D92B507E
DDEDED083B55AD3852A4542B244BC71E85F656A517CBF4900672537C96B914B7
DB80614C0243F3B3C291206608A791091199899AA25C2C92C8E401705B850860
9A854BD22826FAF9E2B6F50F1D8890FDB8C56DD06D24DA09F845947FDF83467E
880BE636CDDE883E1C3A0DE64C43DF2BB04C9F9837F5810EEDEB7DE01E820CF9
FF3A331EEFC0E88AF09C8E66A6F27EE257E88F34E6654EDA485DC955B8BFC587
40A672F654863B573C9F2A815B0D819E668CFCB1710F359D8978FBBCDCBFE8B0
1C6B3DBE65CC617855A5A7A4B88CAA6F1AA349F54A05085A8791024AA39DBD05
4E7DAE9F6A941E5C5540002F3B3B51C1F68CBD0738828217A69F02E7B4C69CAE
397626F38C54171E3379E1A8971DE620917A1D8A2B2EF5319D0FBB96D1ACDBB8
397173FE341AE5D973CF63E96A16488E0B375356B44FF1625F8400B9041822D7
257822D94CD06740FC6A22380B10AB2CAAA5C81CA7B836A376E0D298191012A4
1EC3DFB3D0E6ED4EA7270F783D6D43AC0062BD35EFA7F4B85C04D8BBB173F3A1
285DEE9D690E225CEED663FF359543D3E20D2F490B50F61445266E23D6981BEE
578B354E369E7AD534BDAE57A86ED294AB6E397A0521E4E636DDD749286B80A5
C22474B49FC5C093A8220C8B00D8C6BB07B717A6E7AE78D5EF53FB8CC9D91F87
FD7BEED6B69AC63EE2AB32A29B2D317D76FBEBA106D7F43E8499F0BB7ECD1FEB
1ADB7696B6C8FBA9A8C1BED055C64DF2E82AF19552D766E652B80E10105FEC8D
BF272C8895C459191023377A30F50EE2D9C8C41FCF68538F3319E9808BC12155
1BD26F4ECFA13415BA19B37938E772157C3DBAB84A96C2D9BC543C24439BB8F9
521BCD1219363429CAE52817C005CB1C0D2451E712783BF1258C51EE152D77D1
880741555F4B089778D5E104CC29E7ECE17C6C4EE8337CC2563BFAB7A1C79DBE
2F3BF63F068D0F570BA9DBD9299ACEA7D4AA01F7A336D53612B2D3CB9708F323
F4DD930BBB2CA7410C1A522FD9F55FAD8DDA990A4E2CAD521B4AA718B04AAA97
52283E94DA285E4F37C7B279D709F4F202D9F4FB0387D88E49621A5920BAC550
C282E77B26ADD4D6461EFAAFD1490D4A0B81934BABD4048C2190616F793DB313
10AA0A8F45140EE4FAEE0A3080A7E3C12A28151255A190C65C5AC1C17E225F9C
5796CCF7FABDDB6C50DF2485AB8138E3D841A9D8F9FE29A29A5710951883B78D
A708C33340589D3651EDD7EC0D94300AC5C68153E7DC46AC75E4031836536A9F
F8F9855E1CC36E692F4624D84D70949442CA8BB93B63EEB1403F1E88BEDF8B54
AFD478D9E939D0D4956846605419ACD352743A4AF692E07EC8648BBAF792ADBC
2583F79F3AE3F07C2329CFC7F3BE8C6BE8424A13F4E0C9A5C6D2470C3A2E74C6
01B6FA29471DC34814FC81A1E1A5155A16CE020ED7EF071525CDB93880A24EAE
ADF171B5C077ED1D529E5A19177BBF30C4399A266CE0B3208E7F3A89E85FB8B0
A4B09E56B24538CEB6AA2DDDC988D12BD4E15431333529F06FDFCA1636023C3B
45D99837E560B852E1885E549AF3C414984EC3C46F08110639CA1A051626DA0C
7221C00902D4D9B13CA2F70CDD4F96B7B9CFDB7D6975EED6B69AC63EE2AB32A2
9B2D317D76FBEBA106D7FADD58B0A0269A1FD38BAB95AA31DF4BE8804458E1BF
8F6D3C9D20196C16595542D8F32E962D41213E6B67A0997080781A3933176B6D
2F9F20CC9FCFE265DC647D4A310DE049A86DA160390743698C6DB495B96D2AB7
F854A8DD21FA514C6B9EEF4C5804E7FDFBB5D0A20D24A42C38E5C7CE17006D21
50F6D378FA4C1844C08D06E40C5AFF7ECEB393F90304CBC796437C5693AF04F8
447E9EA4EE57C3F11EF27F1C85D2D2F86B2B420E9D7325DEB5AD168AB878ADE5
BED2698E34B2B91899AD22102AE68684FB9386543ED82DD7C0F29D3522C88917
F450648A58EFEFDF95677F396E04C5397A9827921C64A06B47323028E1D3C0CD
A6B6B8371E23402AEFB1FCE4A337EC7644EE347986D89B13B8AA5F1D41FA6239
6D75D56EFA3BE863A69E42D36A43654C207F12B1FE6E4818BBBBC3631E0B426F
A688C48C7DCAB3F77CE8D16FB3061E4445DD5B88906B59DFE804795EBB845DC7
9269C95AC4738876F604768A8BDE0AE37AE6B1BF69818F7AED76D89B3C3DF7FD
48646D6A812D934D8158A5CA9A07C2C56AA0A1132E7923DAA394E7EF44C3BB72
D09593842B429B1AFB33D68BC88143F92B5D64DA3F8C8A1C47D6E6A8D59462D7
59009B19E9E4F465753B6608E537860572E77BAFCFBDBD48AFE79140EB33D410
6D91CAAC061DF0417F99C38DC963AEC0363B88C91C86124DE8325AF77E9C396B
60AC5143932D62BD7454D7C4A1913B823AA0108574C5FB78BE0E8615EACD4567
3984D60AF359ECF70456C6FA92367F53163018F1C92103F42A7455D50C1AEA9C
0ECC5E1787985544273ECCB27B5D11115702B8F37DE282B5B6062984CA5731AC
4034A3B9A917AA148150989F4B398FD87BC27EF47166DFB2C258B6D773FE8E0B
64F5FBE3E3039D62DDE6FD8DE9F6E6F0724FA05D869631F4A535C0ED4336C1EC
FC74F3865CBD9DF1C0D18C883DC6C11B83563C6F6C1EC01850336C56A12C3887
2EF579A535CE2816498D130303EAC1F421514704B21FB79B8A2E285ACE63FCB0
B137685611FDDAB2E8FA7B08CBBE9055293B5878339F2AC0A1EA53C1373763D8
804B66AE65B5B3D05416E7635B913406E7DB2B5F5DF1B65C6A9FB777EEB850C7
481B4A353EB9279731512C993562806D6753D23390AF0FEF7A9FAE4339270B8C
5D809F374FC2FD02F3F6970F6306B22213A308C0C5BC567604FD48EE3B46B215
0DE67F616FBA22F823AFAC1A9A7DA5D61D08E1B7902E070BE10FFF031CE20930
C273EA5FD9AF3E7FF21E598B73BD532DF4D9AFBC409178AE628143F62365D187
33275A1938886D2DC102825CB3EF2A7ED40A9765F9059895E4915405709607F4
B3FEDC85A3A05118EFC3A15FC3CBB1E614186292D44DCC6A69F94C1F3EC071E8
03F077572234B5E42D053482045F9AF9790B22BCD7B737B63982514CE4041249
E3088A321630BC1ED32B2D20D6BDE27B65F9176558D8B65362F61FD87D98787E
91837B822BC091A27912F60DE02E09F6EDD7742B45EF8F80846530A88228B1F4
4C73E8CF8FF1E99D5CDD9AA9627071F647D5D73708274E5718EF450F84B5A7C3
C9FC0437C82A2FF545602010E02FD28AE7F2FDA0209CD797A8379C3AADF23AB9
DC687ACA989BF86F24F23F68AE7FEAB1E85CC06BC191CF2668634ADC3C6AEEA4
E810260D3A2E74C601B6FA29471DC34814FC81A1E1A5155BC810A7574DB1DB82
B8242EDE7D009471002316940BFBD997B6383FB3CF998B84796AD4F1646204CF
A8DE394FE17577D3140B4AA22256DAACF1B9CFE374403C5DCEFE82A7EC460941
BA4064658504CFAE58C074D92E17607D59DC220E60BF304F643C6EB7212A420E
EE69CD6499128F3F89E182E472DBD90378CF2F2CDC50FCEC4B5D63D0BC45FC3F
D89AE09FF322EB01B1222EF05EC89BF7023CF02670E345CB8027706AD0A4C81D
4BA9759243F24512C2EFD0DBADC1EA404EFAAF8BE15176E475E95DF937A12F57
03434A1CDCF5A561849FF0508FD81A1EC8D91EA9C314B5FFFC86409023DA0394
E3CCA13502D03B122C25AF29F818ED3D21E158EDDA88772235D781043CED8B0F
D0F67D876DE7D40EE0544D5492C33FA350F6787ABC2C2747353171B8060DAE8A
58AF29A28A5E7AFF8DF1AFCE6BDA8471D498B5988E64D3F957588B2E07F07D84
F8FB132FB91CEA4DFB1C7C7682105E23A374BCA91885E743ECE75503E25738CF
EFBCF081E46C55D9E7AA3C194B3EA21A34145D4BB438DCDDA7F91DBB1C8DC8FC
6BE36CA6531A9AA1AE684E1539E549972C97321FA0710759B6D079F1ABC92A92
C3F42F4101AC88024884C018C7D0DF6768EC2679AD57294AB13E45AEEB8C6EA1
05696E341E49FE8A1DECA223B4FB7B82B0FE9A4F5710BCE38063798D9AC7F158
60AFD1DAC1D9EDEBA1A64811CFF78285B947B41721EAB25C87FAFE044CE17F72
625960EF2FA838F7E175D06977F200F881FC5238ED936026B990B44488290383
6B05FFC68D8337EA8295F7A6A319ED7849584DEB4FDD8DEEA590BF99760E2DC5
ECDFCCE4922C000B053636F0D77551B8EFD72B485F950B8B4C0F5E25DA3D226E
3EFE2DCA1314503CFFFCE5CCF041A02877B76050B0774A73C749CD28214D84AA
201E7A8E6D59B712B2AA3D7F8338BE623D279E89D2256A1291C9288EE3B359ED
8579BB81FCFEE30388380927E5F20F65E61032E53BD00CF5429EFB37A1EB49A9
9E4A07515606610BF2B74AB4A22A3BF1D539E4754CD2C62F1790F8A442D94ED0
7F5F983F143E771DC0346FB0B2BE60F45ADB075D21522955F0515B75FA23CB76
10BEAD29527EE5A5350D4D63EC9EC6DBFCF4D7C545BC4D21C7EADB5AD309E2D3
27457D09F349C249E0BE6E4DD3C751E3FD6AA8BB509B5085445A66B6AD1C7006
B2867C7E588D43E047676E81744DE1D89FA01BA73D1A4EBD95ADCBF77272CB75
48B36190D2CE0DA9A22266FEB2E4CAA480DD1974485126E0DC86B790B23DFD7D
D69842B10468046D3114D54BD3389E38DA769C572F2A723823EC950F683A6BFB
55D22DFB161E1D6B6DB67B50B42E5ED7AB77C3AF347CDFBC6BAA5BAA1CDC394D
EB5F43A0B79F1D5339774D004275C37204346C0831762ED10BF3FE09037D981E
9E7FFBBC3F896535D0DCF53E89036E6DA17D2763E1E130164942DA5F704DE35D
983D13687BC8E498A4419A69F3E76C4A1DB85360D56B2BD4B1DA9DF2AF345352
B2F6616FF952D6E2618765170879A0415D1B321583B42DE5E0F9AD77BC7E6B1A
6CFBD3FD26CEC5E9A92F5BD3EBFA4DE86C497987700E9FA4FE31A065FEE879AF
D9523A5B47463EC3AA91AA60CE1A2305226BFEBFA63628520A97B48285DA87CE
D8A9520D66781CDDEA873AC7B461E0FB63D7C1CE62B8FF34647199217C624E97
A63FBB1D5283638A1D4611412ECF92AD53346E942DDEE91AF18427CA61F1FD70
81F840EF225854008CE68172D9CDEB063F4E4C2205AE4503C71AEC1836F56324
BC4C2B563E0C72CDD85AD2871FF6E171ABF32B8405B1906E86A89FBBB5BFB227
7B07A4EF8A1054F86D66F10ABB2058B6E41092F1256C0892105D3C833F5A6EC9
D89D871D883DBB1CC9F5BE250F123027EEAC691DE5867E3643F7744D0149327F
0FFB5FC6CF9A1854A07D5D39D4A8B9872AF546AB78693C639B5AAB5D013CE6B3
FDBB2D7843E991B821CBFD12998A51229EDEA18F865240EE10B356E8A92F9531
A9E80120579A2560FDD25F5477D533C1D4357204A88570D920452075DFD557FB
92419B6ACE0CCE49BBD3AF7E6E68A775B21757D17CB5968A384D329CD5607BFC
6008F2EDFC9D74BD2ED07CB68B2B95F9C2A779D7BD85B9A80845B563220566FE
B8F341AACA788AF9F2137F05F524A46A9757D94335F9AA9F42C1330E7C900B9F
B33BAA1560B6E30AD78DBB5CF7F1BDCC7E2BB5C81E55EF5123584D5A3508FE86
CC6FD9A1DBD506B7F61727E46A9E6313BAEB3A19493375F93917170A43C45747
AC7A395E0A83ED0A777D023E226271C826E5FF8740C83BFC8CE815CF8DC0CF6D
4C15FC110A14C6B17D87A98A408FE3160E3A68C5B2F1EA996FE71CF6D1E942BF
9942D10296D1AB863C95186206F7453C174D514A9C40773EE5A687703DE8A0E2
FBE6DE800B015E80DB2C9CE864448C77FED6B293669B9E9683EB4C4567A7BE6F
097A98C134250A5CE240A1171441D03FD75811F371B3895FA9644F5A8352E417
810A48AAAD3EAE66BBEE79E19BFA88D98DEDA104BAECE43AB290DCA2C64EDFA9
51B6DF8D5A66E6F39D416B32570E543C37DF2901B611D9294AA21C0386A09422
A17124B098EBB0C3F25994A3516862892FCB550F1E9C8349EAE8AD6E578A32F6
0AF460C546781C2A9F3A9ADCFCF2099128D1C3565C6F5FC2D898DF5AB90A1CDC
8414D5EC6418DB8179EFF78049A3C48F0C0371B55F2BD0FBFCF937DD3BE4A5B3
1D1B869CF99D01F25718167FFB8DA6D0FC305210268A94F787E3E726E23CDFAA
6A39A9DD54CC812427C84198AE47E5F9E080732350D75E4289F24E742ABE0538
FB7A82BE7DDEF5CFC3028BC5E386CB5165537AED62A00B8079B49DFAFC8C084A
F6B9FF8D46AC997C8ED678DBBECEC95B1E3EB16DD6DE1104D9A0E71EFB707579
0A3A1E11482D57964C8C345B858BA53FA2D0813AB238367A14F0ED1EAC26E444
B6BB36AC1E08E1C53C079B8BEAA3E0F907086AA23BCD6FAC143E32D66EB3AE46
1EDB7CC7A45957BC5C6B1992738E7EDA67B3085676EADB90FCF6FAB4B71CEFB4
3381D43711DCA3D368F2DE00F49673BD3CAF2983DABA4741F36B4597279C07CE
ED888552651930635E620D5283C7C7C3E25CE319D61413D43312587BD2D16F26
5FD71A55FCA1A5A1B1E9E3ABF4574A2C48557081CDFBD8134E7A8F27EE906965
7AC718C065A32EF7CA8A1FF5880FC66196E4DD6215750DED0B87A8D3282C72C6
34347874775B6F2C761D9C2DFE3DFB24004666BA8435FE10EC622EBE16E146E1
5CD143ED4B9C0145E452A23171A224ABA4D376D9409B291A35B5A1EAA58C8E13
5C5DBE19ECD7851035CCF3F46291162167E3044463FEA836F9BE6691B79CE693
E9325714CB9D2D3330ADFD7241F285D511A410A3CDC4DDC49BDBECCA3D62CF86
56281C776890FA71FB5A983B11FEFB821CEDEFB4941ACB6488C1A608FA21A2ED
C0D5BEFCB5614C4C7780B37A1BDA8CA057CA210893D4EA7DE35DE34897555E41
856D173CED91E77A8626A29B22D9CB563950C39028C333EC869F439054DECF38
B5F68743ED9E420111821EAC567FC09B4517D9443FD0145DD754D3A31F9E4B2A
07ED6A2570E21CE75B3DEFE1A57A0DCB5C9DC2F356C40059012FA7ED8D85A93D
8FE2BCAFD3BA6FEE1E99DEC48FF875F36FF8453525F3585D54BBF851729317BA
30602EBDBB815DB995569B3E9E6F95C41DE849EA19E733A2A2B3C97F15CB4FEC
940C45FCD7F44ACC0941CC8437A4D888FA4FA4772845A518108C5548A8E10E76
5B7DE0751CEB8AC65DF6188D622CFED081D8C2F046A086339B1B853385B5877A
20D4B5E9E26C70B028F8795FF96BF2056A346F656EFAB9595A6B92B409383CCA
C3CFE9912B34040061729AC4D74A7A206550FADDC77E732BB888322ECE5E1401
63A2811BA7B883E037E1E9E7D6C10518B7AF4FC2F56904C2849F7F05BD9E5029
B6C1EE8ECB866FBEF0357FBABBC1DFFB65AA474FCF20136F731E4DE1C6C63C0A
CEAA1B0280C4A7740C14DA2F7B6EACCD1E6A51F20F8718629EBBA2BAE136BD30
99FE1299981AAFBC99CE983EA462DBC29DFBA80E389786A0EFB5F1DF5A823A17
6D8387CA420A441980D3E8666043259C1173BCEE0AADCD191C733C695B8DF016
3FA0C03A323560DB8B64DA350A36AA9D2D421C84071ACEB30C5D201664567600
7236EF014B547DB1C647753E6CED53E3678ADF7AD111B10FAAF8DC17EFFB7A46
733C277C6506C049B418C2086D69282E57BEEF70778FA415716104652713839D
7CA480468889080FB68E9896AB991D6C62169A651D80224B0BA4B135CC8709B3
4137EBE447A68F1A9E8813BB45FAB1C522AD1C2E54E6AD21EC14F219950F42B0
102034F3A7BD9EF3FABB04B5081C33120741EF2F23E76BAEAA1ED3F498EB33F5
99A9B377084AA5BBEC4DF7F2709D8EBDD1C6675850CA8195A4F9FA9C539B62C9
F307BDA79CDC5D0B6324F16FC38E84F659434AA8FF66FC0D1D9146C4433B990B
0AB267D3837F53B0DE93BCDA2432661CD5E8909C07B0E83CB291B89B4852A379
E8315591AA135407E77E5C63C947FA320845EFD26C85AE8813AC233B56338A6D
DE916F06560FCF1A2F982FC8A95F789CDEEEF84470CE48473C02DB8CB2AA2B88
FC4001E69086A2F647F772C8099CDDB5F3D586B9B5A9D9CD9D7AC9777C870820
6A64A0577ABD20656EE99E9FF5470C355EDDA1581965B562B579F69E34040E2A
7FB3CAD23DDD55CA2E45D3C81804FD90ED25996C2EF257A01657B6E794074307
0982A18F0C8E0C30DCCF75AA82589A8BBA11DED8C63595FC63432BBD708834C2
1C13D4C26233E6B9B91E824CFAC4E6405FC7EBCA18E7EBB869ECA46DBB479AC9
ADA6E2B3D7A7318DCBD4400F26047AFFE55B3FFD5DF73F48ECFD1E409F6724B9
4A9C9BBF31723572A434250F183281521D094FA6DEBEFB280385D2F94ABEE713
B7E40F77F7F6EBB4BF933204D9E5E28D566140E4C2747F40513D3A7383D7F877
F1B45D9AA70DDAF8F50436472D2381DEA09B8B3BCB109BCD72332A948721F991
BF91E100A0C90453F042B791A35E7384C13D310F3F1C47A86B201C936B617642
737ABB76543DDF0952CA08B5C8556593E8108A69448B94B8CCB8BA5B23183B49
CB9DD27FFABE7D4EE3D49BC3EA738B8EE3AB5DB426E3100C0CE0DD16BF37B7F6
5BF16CAA1F8532C777AB09B7ED7DDEE33862366E73F1B6F8C9E9B6BC4616F128
73375C2DD83EBB521A007BBBBAFACD1E80421331CA8E68FF309D90C25B01C8E9
FBBD07ED19F6A5123FA456A3D9663CAC9600077256060E7D111356E2BD9CEB9A
FD5C5D562F981C368E486C0C4E1D85236CE1953536AB81B2E45EF4A212D3FA7A
1F3D5558C746FD3E9E95C7949061F1368E719E3A3D5C8CFAE64A3124FFF2E50C
FCFE0ED9B64F9EED0FC8956E34A832D262A7AA0AF0691AE94BDC359223337417
934FBAF368638B9366AFEAF7C6AA06AD15F76D34D5C8EAB71EFDD5440B54C687
E31C61985D1A720C869C73E408632D9DF23EB0A8C23D3C30D9DC520EED8AA36D
A18A24D9AABE05CF5843303942FF208E74F26AF54FD1969A2329DC19B40252C9
73081D00DD969CDB3356837789A63D1AB18E710860A801D937B774D5D02D5B14
BC98B1900173514DED0F14C5CD9EB768E6C214DD009667C727E4FD346C415248
AC999407FE1134C80660502B82B3B3827B4C486DCC43FE5F81B39DE558E5EF9E
9B8E5FF1939C389FF14E1195CD1FC311B606C57A15EC3537E0C7370728510AF6
31D5D7B84309C60D9C7ADA97C79E7BA1FA64F17DC66219806D3DCD21091413D6
0A7865BADD2E8564D4F5905BD8F0AAE0243809AC52EB1503B46A92FC43E86E64
D63068D531559C721052784D140E4A690E7BF4BEB7FD5733825CDF4A716744D3
D19D55C659E1C723E63612E607FE3962E24694862920EC775B437F17AB968DBD
13BB5BBE7F3FCF4DC361594EDF85C9A82EEDFC6F5E184506855484905D789438
E2C5E7E34BE76AE8302F7BDCE21C49B703688E4A660CAC5124286F254C574A0E
7CDF3C896B27F546F37FDDA7E9EFA530D9A5B023EC990F3F4A6388E10736FC92
F76E2D69D24B2D9020C6179A8F984CA143EA0B78319B18E7CF73A0BE8499AB97
91FF88C0DE48E35C41129520135D445153AFD3F9CA54FD8C4D50A15FA38A610D
CF0918E890AC1330BCC3DDCF29A54C09FE32174671327AD3D70B8B63529753C9
5A9F026A9D3691BB9DCFCDB41094C1B7414B0EDA38D8E7F5E272A12A32BDCE6C
7046514C08FD423DF8445B8A7F5F389573E580C7790332922B32BF554694E0D0
4D34DF7A779101189ABAB7C5B3333E2934846654EA5DD7B632E1493BBDBD184B
56897263D807A22304034B094FC12497D7A39ABAD0A853087F303D7CE250174A
661C77CB26D9DADAEF5A0E49245421586127D700F26C0419196D81B7FFD00FBF
632C27A5385042CF33A2CD24D7C6CA01377FFBADEF06F547418C57780EF2C043
D8C5101601881E836FDECFE692E8E8B9F532FF29482511E6574A12796426B70D
8BF404C0C6F5CCE85A413630449682E13CFA07FF5C5FA95025C49B00437950B5
2C9CF390791BF3F65C1031B1549089FC76A3948D06EAD8E149AD5B28578E554F
7DDB26D77984A9B3D26B6B8ECA1A2FE45A37211C066B06EAC454C2EC2E3EBAC9
F764A06E9E60C07909D06DF5A5456F2AADC985EA3F7DE9B68B5EE3E8BEDA2DFE
B34FF7CDAD91FCE8BFD31485CF5E245422E09A75AE820AB14D4ADB463575A422
30DAB8A4460A9E30CE1C238A72AD39C16B83008DE7B492FA9262348DCCA518E0
FDB97AE3D439B656022769E77674534C3D16054823882B1FE802167D360C7B14
05B83D705054AD6D795B7DE9CCB89BD853A7934DA4D9FE91618209C19E3D5ABC
2C65312F3438B3725FC401B153AB0EC3CD0BBA9960E8345486A591946190D745
EBF7FF7FEEAE8BE890625D85F3808CC35E737DE78A1EC2A8489FA364F402D72C
703D4F5BEAF86A07BA4BF0ED2F6C0D6F13F23678E92900237EED2587CEBBE09A
6CF916550A559CBDDC48F6835B48E5008D5BDBDDFE4BD69490C2A3A4B6C52482
BDFF964A0D658041BDE35DF9855DD0483814EFD8DECC3294ACE34AE3F82C6002
D54D2FF15464772A7EAF65AC766F37052AD407963934F3579070A53C7A6BB14E
3E1BF1BFE22583E5C0822C1CDE3F8F1D536BE9E7852F9DEB015D549381D7E4D0
C33D497923BDEC0E59B9740A24506714D547977FED803064219D4265508F2F1E
5CF85A18C47CC16DA17EB0E6F223CEA5C7C94F2E55C3BE693FFAEBF3970D6180
408A061F38E2498B33B246D55CA97185BCA085F67BF26F1B899A49408E7EB3C2
DDBCFB7ADCEF22944474EA4F6C5EC71594EE5AB919403E5759D3BC3030C74D52
9DB10B9C390C705A5283F92E041D53B9FD274E34294B5E640E4A312D6E9E34E7
D37D0FB8B1380D3F1EEFB96745930A3A2A8C1BA6DB1FD9EACB9FA503B4BB61C6
2CE8592785549D8FBC15843EF18F5770C8A0A3024921641E1B35111AC7B52C4C
223701F6FAC5409884F052D1DB422D245201FBD6463F31D7B1B4EB97468BD4A0
ACDBCB32858E4E8F8D51878297DED4600FF1A1026D21FDF159A19E56214C4673
D76EABA263B52CD8D668604AB7AD3980A4FC8BC539F10B05BABE3FD2B8C461A7
9CC5DDED97E8B63265F0765ABE3586EEFBECC9C2479ABBEE1DD7629A3BD2DB12
7F610DFF8D7911DC00DC459B6E635C2253C08645F0BE1E25404BF8131379A057
266485F3AECD0196D7EA238A39BCAB3E4F74E31F649B3D501EDFACA1AC5DC311
A762B8B785369B724520AC4D6A008B6104FC92AB24BC2F6FBA41D80517AB43E8
D03B3EBCCA481AD92E8BB499319D24B31073CABA228597620CFE210745D8062B
467F22C02913B0B9473208F806F01DFF8394490155A13F5F261C4B1D7FB328C0
D7067199F5F5307EEE54D5C13DB29145F34834CB555492F33BE080B7123D1AB9
DB0761D0AA8C08CEE5C1BCE7D851B114424748CBDFDFFCCE57C101BF68EA7588
A8FCBEE927AA24E6249DED6BE45307847599B02E5A9916FA93917F9BA4CF9FCC
C78170EE737523A4BF6D463767C0B9FC4D229E006B524AC3A436C3AEEB98E5EF
223A0ACEFF4E78F15B5218C35C6486D0508C12F788C939A034BFFCFC6627ABF2
C0D68320BEE5EEEDAFC50E2EB67D50BFFE05597583B3F4D6837B1A4999BD65BC
07D7185611349F5D60F469BD5EDCD1219BA0E9BAACA98B663BCC9506BE716602
31C53199F23717B33AC5FE5B0C327D4EC83FAAA2369E9E6EF7FB99402124F1A5
7C871E737ABB84A750A16A4999D5A59AEB5FAE6FA51889E8D3BED46127C19D65
B3BB2B335196C22E2ABFD20200876EC70F9B5B9E61508E73351A66B9E3959D47
2420643FA8C3AF3F47B01C0B444E759BC9156F70B6326F0ABB4CFF8645830B5F
539975CBEE737232D8071843B4940B62EB3C9AE0884F16FB18B656E977425A5B
438C55C44F682603F889FE7B6C29A33753F7869DADE2895121ACEE9EB51390AA
52E08FF3599E2C7AAF8135B385926191FA8CC5B1758BA81DFF14211B6E5C1293
4BF8B7EB907300DED6A5D946E8483FA4EB6FB50DB41D0328B0AA79AD1C0A6661
A06EA2336BEFCDA0D4F95EA383C09A8CE7AFB336062EDDB6D3EF823FBED884F3
EC8A1CA3DB5FABAE38499F1F07E779B54E83399AE0F4FEDC5A0EB1332795B455
062788853D0B5FDF37CB3D89611AB38004C94890899DD0F8C2F957399D31DF24
410EB8C957B60AE08DA639FAD6277B8DD67B40432C574902372C09780A2703C4
3A5529F0ED7FBE021EE576D804C5B83051BC46076F01E2D91BA27FAF9AB7A7FC
E8A0D8291A2B2BB5745E739B4C34BD9F2A837D1397234869DB22BED937FA03CE
28ECADB6655BEF2710A5AC1ACF299613813684DC597FE51BE13F6E5753A07954
48C42CF697E9D5D68EC6563CA73B0B0CBBECD8A827ED856CED56E383A11A0AE8
33E6AF5E61D92F8CAD7947FE438D90674334DBE3E151AE1BBD2C4918C78925C9
F84522FBAC322E084B186F5B7137BE4BFDAEE4408513AF0D32FE73796FC46B3B
9D76C1DA381ACB230D1E793BFC2501B8F02252CF0A85C938A805AF8855FB4E2D
527FBF80D86BDC60DB268EAE4450B76793568200DB9FAFF8C6C8D5B42DB6BD51
7B0D9757CABE80BF65A6A4E1D5572D0D7C35BF41BD886D3BB7C3D63B8BEB2B76
4734953A54294EED3074B87A37BA2107344A8F7D48352F1E73AAAF6664197E46
232152D00433A3E31F85B622881583C0649D3262424D9BC090DA2B21F28E0CFA
F36FBB0CFA78A1197FCF102CBDC87BBA4330AC30AE820590CF22DA6BD5621A49
4EA63AB3321C9FE29B8868A720100CC4C8079BADFD302EADA542E45E04E73C7F
D995F4154FDB773A7D9E29FE46E464E602CD2063F54333F86632004CD3F88A8F
206769D0BD38632F5A010FB46C0CF51784DA23C2D29311C4F82514DCF27C6B90
5717A115ECFB15B40092DC0D71B8C221F564E3B93CE3636EEC5039310EF1F4AC
EA1A40014BA27BD58490D247257AD08FD7B68352CACCA2D75D486446E7369DE4
8714C9BD279C6FC1B2450D42BD399C56FB0CC69625041A796B0C5E9FFB9ECAE3
547008F7126AD69C187BCD86E3BAD6330C98287630D3AA7097760051C714E5CC
619EA9A22B321A1BF1CA2D8E766EA49A0587E907958B012077842F0AB85295C1
EDA418EC017302C9A10B894CF4D3E3D2947353648C62BCFD951918E3C38FC184
0CADA01F9CC62DCAE4EE399FF9148A791304DD3DE38FAF7CCEAB8BBEA1DD266A
5E734914DFE1141AAD50CA199AAA866D8D8A9C41AB98190EB3E02FD4D60440E3
1355247591E61380DCCF3FF80EADEDEE42BB78D302F49E0F4671DF56DC8C9204
0BDFB00339E0C8997DF09799557A909FB47219CF6777B17E49A74DA16147589A
2D3DADDE9BB1A63A4047EA20DA5107CCC3198BDEFE566CED1878E813B8B28C88
DD46AA750056532E19C10201720A898BC1D42C79E65214FF6067DDB9F37CC6B6
E6B39564D3838D43577688FF0EEF8EF652A9612F5FFA5A474ED0ABB961F6629B
9FAEC2285AB30A338BD4134C8C65B2FBBE4C4D1209DFEFAE449071A9F5AC2281
54EC7DBB3A58840236BA90D553D86CF2D967E7EF069977E88971C070FBAE2C25
A7104589EF3882CF3AFD9D65C06F84A291CBEAB880B16D7DE7352BF4EB85EE45
ACE597058C23D84C0FB8BAE6E8B396D944701B87D7C6AEF534C4587595D6A94E
70F6DEA969386F22C834281FB6561D4783F11B5F18891C0661B5B9D413B5025C
60E1384258DD79183EC7542EE81DA1CA75B365B7C17942F05C53A38F28069AAA
B553F494289E7D83612F04A94A72C58130F704B86E06D125D612B8C768F65943
4AA8FF66FC0C61D0DADF6601B1902F23373679A55C1D669CB2B71E8ABE4A2F80
AB8AC7D23AEDFC9A80C9788ADCD45BDCCE6FC98B26B74CAEB03D2EF733A54C68
1BA8DDA33082E313702A7E3C184F151C9265EE846ACCC266E6895648A6652278
A082E96BDC5D82872E30CA63DC5D4FC31B8B271596919FD1ED07778DE2F62958
FF409D37332AA4BA88CB70FB7BED9BBBA6BCABDF0F1771AEDE8BA1D267A8DDE9
A623F208D2B653B93AF76866E38F6F5B4953BB6790B90F69D4E5526B66BC38B0
CC9669D8D3BCEAEC9258D51930446A9D33DFDC62868861B6EA02DA05D223700B
79E93316FFA052985DAA45786E411F8AC6D254E74DC1322A969A6E40332CC349
9D69F12F4CCE1ABE416B7B9BE2D9CE28B46789BFD576826B14E2D55D8A414957
F08FEBED014B96DBB311B494574EF19C61B310D1F7F73863316997776B12DAE5
52242C36ABA412F5E466DF81367C1ADD10D6409BC8E9B22FE9DEC6B2470DFEF6
52B6995ED4FB77757441CB218614BE74156799657C761E9EC389979AC060DCC4
9059749E1A6816841813BFA0CBC4EAC3E4200D65A55B2D607A964D70472C38DD
6AF2264FDAA0E15C07BDD776F745455220F41A085415F9978112BA299FB6769E
965CC959B06CDCBD35589BACDEAAFEC66EC7E35A6AA57A6EC848B6074BCA102F
D704BEDB462DCFAAA88A7410DAEEBCABA15728EA19017B4FCBA5495D25FB871A
B1D71B6AFD3A352A5E074048F26EF96A8D531466CB24EBFCEE5316BAEADBA562
76B647ADC37A896F17A94685279AB322D888AE662D19514D98A464AD8C5E51A4
2920248E4BF77A7876799B1FD856AAB0EE47EF8610F5D64D3E982DB93A891A56
A74B37DD1196F082D575A66224A996F8D8FD4BDFDB651048EE2F62E25154115F
2BA6968282F5A68CFEA8EE5D69AABA34CC713612656CB6A3DE71994996492956
B4B2505FCF6D18A10A5ADF7AFBBFFFECCC90250FC6A533B7793344F8C107A428
0E462E745BDA2D612AB6667B8825B774B16C523F0E2E7FFE9382A570237B4D89
1245EB3074E0D4D42A8B7B46D7A53C6BA6B301D3F4AE8E3A3051FC88A04FA39B
D026C402C7FF7B200CF9364204EB487037B40180A11E51ECAF6B080048D5655E
8BCB589C3CBA03A645873C1B9393313A4F0DCCBD81BCA46CB1A427E2807ACEBD
7E4810921C1BB5875B3238EF2044733E6FC304D46FA54F09E87DF7760C0B265E
69091135318B5BAE543C44CCE4E09260D1D60B17DA2A733EA88A189F82702007
937AF275FFD54DF2FDFDD1B4174B45C6CE6EC5F60D679E3EC620467965201A06
5613A91379C971803AB56A7510E8F509E4C425DEE68E0C5388870FE9754E1078
3963ABF26E8D9C94836F541EEDBA22D9C6689B5B6A57FD550D1A583169455F59
59514C8D12CAA3A1588E3D77CD55ADB6655BEF2710A5AC17A39FBC37C05C42A2
AF30EEA757DA4A7D78046F9619A3F60DA362CAE32178EEE7EDD4885079941919
11881B1ECCAA7BBB3C7D88DAAD64EA4C7D1B861CF372B735FCC43EFF1B13F40D
3F8D619DB75BBA85281C413245BAC80BB2BC7D550144AF357A32CDCE079C1047
F1E55E05DBA5BB377471CB6A755035B1B05FEC856A5909552B4CBE08A34F557C
5556F9AC9F3067296394FF94CE3DC0D1C32563C2DEB1A616B65574A293792D09
2636C90224AB60D7CBDDA041F50164AB6086D2C2D95B64F2A58DD1A03FCE8732
DE541E5E8A41FC87E1FCA5CCE6657DD536BF55E7669038BC12FE40176C417A05
E5556FE4B86502516ABBA71A3837CE8DEC9CF5422C7025D310D3601F2E8ECF29
36E74C53FB87A0B0CBD175F000EB0066F7B50ADE7D40F429F96D0DCE41EEC1EA
29EA44F7377BD5D7EAE4DE0A8330DE53327E86F2A3C810B8826F0007D81E52A9
A37AD5CEBA8EA63929093ED0DAB9F7CB69F842AF5F9A3D74162C8529E1C2C1A0
78F05D9A4101571D1C08E252E05E49679E6C7AC81F42E9372DE5AF63C56FD66C
AA90EFB30BF9837AD04D995C4F9165B1EF1324DCFB5B856A8C34BC6B1DFBB5E5
E0FD6150E4A8F790B028431534700371469A49A9C05D6FABB7A8C644DE5DF1E7
3FFB8A600F088414D8992ECDA0ACC39AB210921C5CDF1DAFEC73B8F3419AF9EF
F1090AECA836F70405611203E62533F9F3689D9F8CA2BFF3F9D381CB388A15F8
78F91B9A96FDF0798A4397FC6B28F7DFB72F5895A6BC973D3D6E537AD3B43C6F
3A905597570A8C6B0B4A5E0A4C5E4AC5C28C310F15AEA54DD1DDEAC00BC5F170
3A69DE278E6DD1D0D5A8590FA66FE389609A47A92464C8B38684767D7AB50B2B
B294132270228229EEA3F8D8300C82E940883C279E4DB9DDE98CE3627068BB6A
6C7E809C77F171C7D51861F9DFD5BB1B2BE38AEF74B73AFB0595454C0156F51D
96F379E644CE76C1C3F8CF07BDA40CA48570713463F8B8C5FB03ED009D04CB9E
BC3A3D377322FC994DAAC423A4B40357DBF6119136BEFBB6F17E8DE96E921502
FB19F0C21F0A490D2DA54EA6E94CF68DC85C76FD06BA4B0915B9EEBD5BAF23DB
20C9F233D885BD42C04DC9300D4CFA004F89A230F38BC56E6D63DC99F2728F99
C9484517D7C558C8E8610AC634549DB4DF0C90A4B15CCEB79085BE0B5CB46B2E
8AF3DBAFD25A690FFA7A7412547493DE47855A0209B7915A6D06E7F1D805EA61
C00D706AFC6652937785BB0069B6AD2437A74C3F3BBCD3BF42193D317187C145
EA97C631B1B9CBE0AC4B46A1289FF8C915A2427C20488600AD058F6F2C021728
9E81B36EE84055B1F9CF94C24746C3FDA17F2C848A47115838262A3DAE23A4FE
C8948DC1EF163019E604B15ACE59F9353B80D6D618A5DB1D28EBEFBBBA74C957
3A48E8EBB5E066666021AA040297C80939840A8C9C7E6B5A7AE4F07485AC64F6
2197B85088749F3CAFA40A6A3223D4CED495D13A319ED965A99750A337D1FCB6
E77FE5E754546F80AEB7BFB5A98DDCEFB765BADFD5E6FBE2C74CA08D62111DBF
927B39D45FDD5D478254E1F52860B93DDEDF7525D9A5D13D60C88DAC92656DA8
FDEB4022640582C972655ECB16686869E6DA6411BE343CA7BF15B974CC4C85B9
2A5B8592BE056026C8C6EB7BDF753FA2D419AA6862290FC295D102DEC16E24B7
469E59D6EBF6DCF9A3C3CED684ACC196240725C472F32BD6F79AC4ABC91F9527
6C2FBEE256D144D46CC263F22F4650B6685B60AA7BF42C5564C2FE2DECA6AE84
58D60A5FA2904FD702766B36916DBA8F9C96141BBF4788FDD6FAF0ABB488E704
5DF33975EC34387F5E4BC4A044F9F784BF9C76C921024B55FC6D5DB5BCCCF772
26C214AE85C9C6AF76A0DF223531C12CDEC349D2325D6FAAC3C6EF8E7333632D
F0689F1A97B9D3262AC9D1AED22C2EA9873780769277F5D4878326B6ACB12347
7906B1BB4661BBA76F0105CF821C0B3CDBFB19FE2D0349FB9596AB57E4422554
41F39A7AA01C8B3074FA4CAFCF8F7757FCE3BD953C4BF1E33F57AFC1010A3630
5676659E996E97F08CDF40FC29928BD4A301FE0D421209D7A5E89CFB786C7566
9D16F71F69584F7429632BE6712DB1A17E6665998AB76124449031E53A79C65F
1EDC5CC0D8A503C01A1425D5A6527C319457561C360675567594570C1D1E194D
5602761EF939C7C5BD07EFE4467605FB8B7A51DB0423623BFCBFD0612A1040B6
18678A52CE5B79FC8CEE2816E93938DB7DD7A60B5D74E163B62C4911ECC1311A
DE12D82876C1414B6C2D05E442F6F0F901537ABE3F108A48D0FEEE3B1A9713DE
E9400F5F752721620DB18010D0E8A2F6F71C5CD8623B1DB3F5B933E3C7C42C5B
E570F6F465C25A312852770DAB7D39E1217619DADD5A5298ECCF0CDF22BCACAC
6B2846EE200539F53F833F07277C245859428C13E4D090E30886D8F1CE06E367
580D62A6AE6CC57DF2FDDC2F0CA8FCF6EE9A2FC1E1EA97EFF8BA37DFE337EE9D
1CF9ED9015E8298F8698135E993E41E4982105EBF30E48A63C557388495AC4DC
9ADD7F4CFD8CF9016A8D1F3C2B2F1E1BE1138C61BAA39B0F391D1208360D54FB
3283AD67590ADEEA3F5BEE429ECB64F4D53B7AF5F25AAB7D4579101971CD67FB
E798789D7BA32DA5A306D9DC8876BCE2799BB87BC5BDAFAD35DC7712C8DD1468
D27805010C1FFD4D5D9A6F5F6C0C76B875FF4244C728818566F026E25F3508C4
8A8BB31377DE3B1B9116196F791A5FEE14044962F0B4269F80FD7B5E55DC55BA
944835E1EF31347807DFAEB7D1FE2901AD5E7B28EA439311423D1F7A62C216AB
FEF928F1E2BCE051279788C2BA231B9B37EB84B0D6297FA506FDD296949F8FE9
C26D83DBB2906F07D41FAF883A6CFE045B60E7795A4E3B234C41ECE2BAB5CB91
31A76DEAC166A7C449A549EA5111F215583F619C9D0C76D10D5196DE0E2281E9
B8191A5F2F433AE896BB2E3CD246D3B8EA1F1CF55C4FFC374D56390ABB50E5F8
401B289C1AFE7786DE5C4B8F8E22899CB1E7D70F658EF0FFCED5A85272F876BF
BB22C806DC0F7CF0BC749003349B9DC64A0C56AF16F19A4623D00FA91C814B18
ABD2C55E6572B6A97267F4C63D4093BEA8A34B315CEE932B40AF051F91344637
96F7BA5EB4A7A715A034AAF603EA3ECD4183703365E481FB19B8877BBBF6147B
984B193B34B3FD060105FECDC2F3625DBCE623F5EF3F028DBC703E8A8CE32235
DF2D5B8F39DC143B2B9E67EE401A77839F9A545D9A66CB7260A7AC10A7E5DDE9
37DF53D823C7DAC8DA44B2655D8D1D0EA78E86386D29A7CCEFBAA8F35B4813CC
9D289E55E844A5AB5B5B58046899C9C5993E7302C870678DEBEF475D06F189E5
448E5B26813C6054B0EFD355444F1EFDFEB1B3338F446210484C1AF9ECCA460F
09EA1C8257F0BDD3076E3FA521B5941B4A74D09E1EC4F2201CA9FDAE77AE1195
B48B8568FD9FD11EDC99325102F07E88656F3C3632D3EB9DF7477A180FF3D6F8
76D5E3064BB81E67AFBF4BF722D8207FD68296B4ABB049ECEC181FEE5B3FBF78
5EA0700277DE0ED84321CC016331B03B13C745D5CE9751391B49C6C4867AFCC7
CF8CC9CFC4121A19F0FA1C4C9FB1498EBB9CA680A624C20CE95AA5B5D4FA8B06
2904F1B3DA27604A975C2DB6FC1854457C67C54DC08841D15D9FC0E7EF756623
2A6E51BC4CF8A5EC96926A7DA15B1BF2645039DEEEC6ED0214D63CC1A4BB445F
0CDC3705ADAB3AF53F56505013232F52D81A86957B89DF685F5E2937C95B50D0
7C6316ABC08495EF319F076900421729DE4DB2F27D9264336152062BF9C1F7C2
FE9D86F51A671DB10D74D95084ACE3907DCC79E6B2C340B1BC7CD495156D56EC
5DA36213685C51D23EE8A56E374BA80BB2611AD6460F73243DB763DEDBF476F3
5162EC8AF0A43BA935CCA30ED45AD40C0450D6599AF701C2AA91C6B5EAC5949E
50BF2533AC5644A7DFCED18493F771EE84F30278BA09247E4ED0DE7B4DCFC79D
E08FB93ED7FDBF7A1576134C73A11C45766E2E2D3463B468EA89318F21EFADC9
925B98CC9178F1C63689410ED30875E7723A7D87C294A904129BE92736A0C3CD
42366136655BDCCF4084ABC8ECEDD1E18D65E8EDFF3E085DBDB2B3055992CB9E
2069035F970A4BCFFDE5948A4680EF47AF79410A422B9831F443C48DD0E5B0B2
C42BBE5DA70AB9A5E97E866DF89959D51C957584F40EDA1EA42A5FE1B091DDA3
42B0D5E075D4FF8FEA6713B201AA51468B021EE6A9381532764000081A0C911F
1EEA232EA9DC4ED432F5107AAC6C8EA201789EC66ACE781DFE38DB5DFCE07CD6
B383450430CF867408666C11C1BB4671860A3510E482B8F1F7BB9DC38C630604
1A2FCFCF20582ECF3E3E820C3CBF690D5A6D4299765578EB49D0ECBFF9219537
AC98E1666C760F3C795DDBD3954CF74C2C881A03711ACD7355594B806021459F
B6F81F2408C59569F5CDFAAF3113D089D7C85E5859F27B8DC4C5D866595B62E3
9BB855E9BD68C4C0728A5B37F88F7B480E18AB0A17251AAE386456AD8C5D6DC5
DC9250E9BD356EE8D33DA1F39792D918C940DB138D0D872848BA9D707CE8ED1D
6F23CAE1979CB3C181664164352198C1DABDC0A0DEA590E5EB0FD33434F389C1
A723FC6138CFF4C93BF0BF93FF5CC9FE8D9AD16D04DE108727FD7C001FC01FF1
29D04511C79165B5315320DC3DA94674E8E633B7B3CD5EB2C59F0A6EEB2AC5F9
14648253D2943F6015EB8C46229B008F38320A9FBF505203F59F2124ED1AD4B5
9F7CA1B9EECE0F88943A5D20C4D4DF5E7FCC61BEBFDA248ED8CC931207960C9B
A56892999790016B0236D719FF65145B522C655D52B3FA5AB67BD68C97270068
76DC67F1C9E867E0DF4748B39BBE76D32933BFB3185C3972FFB744FA3AC53A51
C4843802081696785BF15D76F545786054B20EC609BE0B28114E5B0AA42BB0F3
8F2251827A46F44A4CB632ED0C2C1FB31D3A72F9889F590D1F350292ADD6763C
4A9C6CE0611606F98D6C91C95824E00E0D4C166731A52984269355B641D8A041
4D327EB4BC88FA87BFC5923FF388AF224055FCA8F870A215D2816E94D5D36BB6
AC48DC8F6ABF68BFD02FFB30C7380E4AB9E6E655AFE030A5DB09F7284A186924
F1D302BC8A984C08999491AF9C1FFB1C157CA626EC056A68B66C652833CDCF08
803A59CA514A567CDF9FF87DFBC5B77ED158C0EF082D34E9B263DD8D3DB70C51
870D9ADD147E7E9A41383D1E6378810ACFACDD70B4E5993274D3E69AA6F6114C
7FDBF9FD6A4AC644DA4F97056AE238AE68366A59B63E74FC255D1140C2309F54
1BDF8B1BB46BAB7376FF7C80634400F1A76D4AA1598B436C0190DB0806D6AB66
6B48CEBE799652B73C8C802A1517D9C6FDA3474591F19D573EB051F4A19346C7
64334AF337B596E4F1DCEA2941CE46F0C06AE5D1CB6169D053BE6E7F3E930BBA
9BA05B63D75B801D8EC46021F039173A98507B84A1ACF2699CAE72345CCFF0E4
3E4E692B8EDAB13CF5AC05D11A33F2D53EE26DD1560AE0677BDACF7600C3D48C
F22FFA08EE54E20F8AA0E113D6978B315F723A7E8296AFBFEE1989A09F9F9943
2787922CD209224DD5987EC19F5BEFE9E93C8DF81F64CB68CF25000D2B35448E
633F7CF2577E2967555FA75382CBC902EE3E520D84D061679F7EF91967AF19B1
7E86A80C9B8B11A0C4F01B34DE02BBF4A5BD6DD45229F8E0CDB19DF4589570B1
0C98F8528C76B67CD77B1BE1B4105C823C56CE06FA954737B9CDAD690F8976A6
77A2CF0A816FB91AFC16D82DECD741EEE6DEF7D4BF4E48E8A8BFC6867B4BAB02
08DB3C5DD474D8829CFB026CD795DC06DB6E122547B3B8A76671E69A4AEEC0DF
D78D5A44ABF2241D1D17784CAC36FFACA451C02169A1AAE781FB4664822C8973
EB8766D839FDFE58085B97DF00EEC1D6D5F21BA9C0D030F2F68C45ED7A97E0AA
CDAD46C9612AD72411612949FB1EE1DEFA61C65CA057C080A8BE721961EEE20E
4859BFB9FE447E3877B4741F9F58F15C92A6FBF7B831D909D574766075BA0425
9AAC658551DA940B4655CE1446F65CD42FE47F91FBB7C0F560C3477C6632BEFE
3EBA5240A6F5EAF3867D0BA21009BDCFE0D7F5BCFA2F2D0B524300DCB79BF860
28FA508EA08521B0DEE85037F42AB8C92F57789B62A14E6495133A1B3B110F97
D9D17E623F50F55A041447594422EEFFACCE6AF7CC9768F724E096047F80EF28
2429D430CE352A7401B02015EDC1237E9BAD36371568B1DC56EA11A577D6FCF2
FE162CD1B7B582B325140F12EEBF5F137AEA6E715DF2BD80346151DFBB2BA3E1
166FFB864767EC49C42245BA5144765240B44F6435D089AE6DE1EE6E00840C6D
8B1E72BB83B1FA8BCF37ADD8ED5D75D6FE750D2373F997362DDA16A0D73B178F
B7B6730726663D4C63ADE304189A993413F74081530FBDA87E66FB415E1F7080
AFFCBFBB82DC55FA52076A34EF8C82D888FA37787088260621587FC16F7612E2
60680490FEA4A7E02BB791DB1A56767B0A22F335A7A5AD395D681A059CF206D3
673A778B833326CE8172363B1B4AEFDFEF2308AB27A1268D6E761CF9B883207F
1478ABCD112D3ACD5D2F7ACA4C0234D36FF51BACC428CC989ADD61913D31D450
15DA602B025CD7197FB2EDE22202B8A17630D41B7DDB369F3D9B1A1CA16D9D51
FFEEF04B7AF5F38B219ACE086F56FF059F996B83FBD1511275A29FB284F38140
FE8722A828B6D49DC8D8F8898CC2493B42431D2AE3252FA3DAE97DF65B061285
7F360BA1F06AF09DE5CAFD23D3E21C2980385DF1C5D1849CC811EFC463478E13
4BB12EAECFF81D992813950EF2F36050AC40D1C1B6B67463B7A3898DF3331C85
9E3865644E0FB30C566EB42AA77732CBECCF3699F2DCB791FEEAB84BE481A6D0
8C2C5CBD95A0C2A0F7B3DFEBA6518215D7503415D08FB8AE2BEA81F9C2737FFE
AD2689AEE3E930BEFF452CA7CE9509756DBE4BADE6118F4DA07346171F817A46
245E943A7BC0C6309835F84EFD13BBB1D2AE839915449CB8CF3F71B4C23DC404
47A2D21270DD055EA707AD50706910591341EE1E896557C5D491FFD9C5ECAC8E
55DBFF3DC5E2345AA680CC0213F630DBB2199A8DC08CAA78FC6521979A92FBEB
7B5DD5CBB13A886B8BDEAAFFD1756AB617E37CBD332EB57640CA4878CF17E822
E395763C32F260F63EFE2FC361E1EA453299493D312C7619222184267894E405
957E67C432D34DABD05059ACEEC8AED9F9C886E3084A4B117A591C138B430C2D
10CE6A1C7B80F1F1A6E1CE59D2E0E0A1A24075AA9F2EB2A871F588D6A06FA4FA
68C4A0C748338792955E0242EC975D2BEB7CD953BF01CC178DAD3D35670F258C
5D392138E7847EE9AB3187A80BFF75CBCD814C6B5C42785DD8FDE082F7994E3B
BADBE914004577EA5DA2CBD75E4BB6D0402E35CE88517F209C939D8516182CA5
F0966CCBF971FEDE25E55FF92BF93ACF5E651F75F1C47F2699BD0DA86F7C5E1E
96E755E337FB59EF89B24C28163F9270AA4C95CA0F59F6590953645949706C49
6AA58E47B44A9CF5140968E46952FA49B03BB40DE7F8FBFBD36B12A1C1F95A92
C431E1D1A7C1C28E6E823E0E6CD2F435AA4F6E1226A5379E546360C1E7EF7566
232A6E513C7453D17EE21BE265B060F4F859BC26DA522BF30ABD1EA63BC89AB8
39E8940525FD01355E77AEFD9C87FB10B1D5B965A057E710330B3F5EA1A13FB2
88AAFF6C88E57AE9B7B392D167B63BFDC1102565649B536B2165A1182A8380E7
4F8D4D4FAFE246FEF66C656BAA6392F887D06AE994902A4C425BA9D2E84EB24E
65F3ACD00EBD51803C92EF682894823A5A2E63C5A5ADF4F2771740AA55147A38
8E68FFBC5152DCCDAC76A75523184F814ABCE4E4F66095247497DDF1D000126B
2CE72AC322B4D962537889CF225B3385AEA253DDC582060673605C5438B65D41
06CFABC41D1D4AE10F1271CD61BBAE0B6A6CF275EF7628F546E9B7FD043EBAAE
9DE070E73A17613406C711B92AEF8134F99B1404616E07D44AB5D1CCBA8DBAD9
ECC6FFB3FCCBF4792EA43F5DB00C952DEE1F6CE6A0752411EC61354347A6A288
CFF58110607A91F8615190DCE9A8F87B4EE44DC4C0888E0034288E97C143576D
2AD37F46E21F017D2EEEE8ECB7DD6B6C1E79369FAE640729ED0A010BBAD2A987
B261FE1B14931699CCAD9EFCC6860FE8E232465908E6404AE00BB438525FEF89
E5722CA9A6246293E1D7F5075CD9BC12767A250ED404EA4085A61764AC5EC0B4
DC2264C80E8BDB022B99F26C5F42A789D622CCE2408EC8434B5BEF6A8492F020
E67407CF321E01EE8F2811A9C0A6A92D0A8959D899C05E423C089EF4C750437A
96608C1AE04BEDB1E5E9315B4AFC92C6FCFDE3D7912A87B5A6ECFCF27054887C
1A67A03BD63D38DAAB64D6298026C40D612DFCD85CBC56C283CBC6B66733AFA4
FE8480F8CC8433E7AB3493706076D62F4C407BE252B5F31039CFF52293E55A9B
84DB541D8D299C5C5F56DD69E7635073B64665DB0BF179A7625A65F55FDB5407
D4C7BAF438865A2E99F8B04A0D7F1783EAAB80313773E1AEEA857364EFD47BBB
A175652189C87A734F272ADF580BFA27B0E3F70507BE0EC7763167002ACA1C42
FDA977BDB626E9F4E52E150F2E573B497FC71414EC35FD8C999AC0DE28E6B0D6
4D790962336511EBEB173B2F166FDA22E38A447F7408BD9DC974B52D744EB720
E8DD38E27D05E801B0A19AE1B5998A9FF5131CB71E02A128DCC9D51903ED585E
1581310C8DB07D3998077B967535A2A07B20BF381DF39103950091D005384C16
30A121F2864C5A6DE4690B41B9343E72559FB85FF30083A1C4698C66A8C9B2C2
3A60D82D8DF0D4C083AE1520F279CB15637B97017B44266D4C1C11220C5DBC68
277B064583FC15D8903589445F510395489A5ED95EB8E39A0ECEB49B06B90F4D
D63AF86FCB8FFB44569C330E70C3226274D60C73A3F1E6B94537D9CEF904EDEC
7EBFB0E60995CF6457CF02DE45B36845109DC23451027036ACB86433421BE553
3A45673206DF0199F38940EE471A591D2853C9C4BDD0F3E0EAC8425CD2C7E5D3
7D9BD147A2D7C0002BD278795ED9F53E80438D9F7C29BB8C9B2DBB5E8B8EC5C7
00316226D5EADD68EAAF5123348235E774C11DC59248EB66658A0742420F8B91
8C099F9D37C505B7884A037ECB53223F091423C3640E49DB20EEC64B4FCE4855
C5202ADCC2E6418BF5FC0965BF7B986A7AB74384B436F0F77D1FA3F3CF11D3AB
92E3F4BAD9ED532F88CA8C43322942E04749648041D56423C709282E78112807
19F344F012C3DEBE89D81E845C583C6DC0F787450A051F772C8E97738DCA8163
3BEA765221F1B6FAC132FABC578D010289CAB6DC4609ECDD00D9F3D7DCFAED91
6F4A6539B7DE7FFB491112DF0BB686439960AD51AFB0A1B4C053DCC37F5104B5
D4F4ABCBCEABE6DCC822ECC1A5C94F0BD61147A2D289825FD859A4DEDEEC8ACB
14DDC909C1DD5FB1CD935869A24660C94975381ABB54FF6F2A27074986AF6265
34E14C052F7BA12221EC01667D6FA0C643F87FBB332797BA7BBE145C068FC8A3
B79EEEC794C3516F1EE4C13C10EFD1BF4A7A748314E64F7D2290F93D0FA7E579
9DE64E5EF3C30AA6A236264711DA2CCA9FD78490EDB4F50DE270A8BF50FE3FB8
548966B09524758ACC0E68F6B9D6E97AA4778CFD3D1BBA034601D56EB1ACC0E9
0B264F1945DF278924B38A3AE5846A723037C8FF1B174208AFBA9716E895A520
DFD2B4169ACB7B7F70AF7ED39155798080FC5E41B5D0A7F3BB0FF334295A5FD8
68C8F663872B23B4D77C98B61CBF80A3334E7894A677EE4E05049EF58E6A636E
F9A361C1FC43E48BCA78D097463C358192CC2348730C4A5DDFF7F762A9692F28
85C607FE7A0C9DAB3FA8CF71C639ECB81DA4B6913F69F92CE27D2079C5036C5C
4134EC76D9062C20E560443EEA6E4D563C585000C4B1301434B49871F9AEA896
271A3B6DB357503C6F87BEE4E5C1EECB9FF3B7BF858E1856CA6D1296CA1A379B
1E8E30EE1CC8D32A2B08D71ED6386DBE50D1144CB77534DA37877C27AB763C01
D5EBFE018B6733688374B1F1492E6FFF00E159D0884FDFD2DCFD865E06CA7566
A22B1392487B358B3FB8ED5AEC0BF43CFB8D0847B0276E53C105A38DF6144721
A3944DAEC9A3D28BD98050CBC6B4CC5A0959133FD8F8B125200813FE2E9CCE62
35643713725E4813E05782689C8A1454A9A16CFF7EB22FA117ED33E7D2393DF9
529F70D2124C1B79F26D8FCEBFAE99D76689F7EE47531814169D54F003E0FE16
54FA8401E236E64F56D0CA826BD8E2D92D5C44B880600E38D3E6FB444F2C04E5
FF1B10EEFBDE49F8256C3D070FE92A4CE0DE2A60E7BAEEF5C9AE720511EBBBA4
1201E46FCB5589A74D668C66BF3C8A8F6CBA324DECB086CB36FF1BA71C989242
D1793E41F220A6E48AC68EF3919FE465EB90D1EA30754474186FF33A9C5C7BED
F386683C1D827FA48AFBC36DEAF289832756381E2964F3E36E576F150EB5CADA
8E66683658BE776F048C385EE96D4F4FEA1166CA227322F177F11CD02925F542
C101BA1E4B8791D090DEA01728C77AE50176B29A872D14CA30373B656C3BA0FA
C88F9D09AECB22C614FCEED52A48D2EC4D1E84AAF606D5233A5E6EE723AC5998
FE2279D70EB9A6D23A3DA9A4EC6C822D0179F1C65993FA1B7544802664ED6E21
456890890E9F21F4B6D7205BB77DD35458B6517236661D2062F22456EA16493E
246781F94020914D34246ABA77AE489BCE477F1A2335AF368269042ACE27002E
6B2A5F91B8C0B4B022FA0CD803B8707398B3F002EFF851BE87C7633B50233685
21A97241E313E35C2E883A62F6E57A190FECA1C07FF25476A5F50B8B454E9B84
76AB473FABE903A2CA61DE42D78A4F8724457DF4ADB11421E75C876E10FC2216
1841A35364E573321A79F916CFD679E4A84F2521CEF17E28A8F359B74C19F609
8ABC625086DCE40487B6AFA20CB8CD4C1F7E576327F70A00F33DC0838C1917AB
DEEC2B786A5C1658F817C4A2720FBD29F8B454B28E7D141EDBF5F786D1EF9221
10079E8C2C197DBDFD6BE8C559ACAA867D8125EC911E74B231368BC31269889D
CC28AFFA01A62CBFE50AB715DCEE91F7698130A70ABE814DB1CCD84E6F7B5FF8
E156C211331156DC39DACA9B3150C60193BC0327ECA853F01AD6D119D6787A46
74B3639A1BFAD68A36B983024EE9541B608AEEC227C56817A7CEE794145F2D2A
DFAC9948F1865F004BF806D13F6A0016F721EE8768AF0C9A83F08068D43512CE
BB420DAB207DC4F27DD562BF5A2A655D8C91CF08EB5BA8ACCC9A2599B36375DA
CF663CAEB24E2BF7B7EBD2D44109F27E7D7BB0D1E3B774715A49159B46E1A61D
890E62D419595958F6B8E22D80616072051611FB80D0E869F0361F19CA0A3B9B
738C86805D662E14B3970EF5BD53D58B5AEF3281969B836DFC2FA895355703C0
CFA911741FCD3F16F8BCB1088CF8EFD1BC7FE7E72CCF91963BC3EB39572B6A4D
2D50170D32EB22E0FB31AC88DC69BF64FE49C19522607E3F6231E9136F619623
33E0DBCA0B6B41B727AD7AAF1F1AE3A7CCFDF2C86749E1D2113F5F644DF75B85
B50D703C3C45461E579F905EA6BE28405DF7C53E3FA2641685E1D306B3E6357E
CDFAD1ACEA5B74B3C14609ADA913A3EA72BA144951C6A5D4D68AE17EDCEE02E5
2CFDBECF7EABCF129F31A51A73102D26278D146F9686A7B52606263E45F887CA
5830B6626B2F91594A6EA54E8A8ADD86FD770249BDAAFBDB3FF2BB9CD4561D1F
B9C3D6CAC73F106261AB194A1558AA195ABD0BCDF2DE9E22CACCD5273DD1F2D7
511D00EC4BCEF752EFDBA002A52DDF35FFEE04D4BF4EB740331F801C84530FE3
A5C9169AAACDF8AE7734B06A6CF7AD51A211C6A6E205757EB63EE9E85FBC65E2
F74BCB27C3B69F9F8F2A0F317706D292AD188FCA5ED5CC3788DE916E2267D7F4
066A3954C0E2B25FDDCB76A704A984A36BAFE364BFCA0C393F9244FC388B94C9
AD415F129DDE9C298BFB3A1E462EFA14BE78F06AF756B2588CC63A442125BBC8
B2CB4BB9C32A05A8679B578AE53D2F7DCD823A4CB2398DB3805292D0240A68BB
1CFDD695A3CD92638DBE0287E6CFCB5BD88BDBC9B9016E7DEEDF237234BC4D41
06717C56581EAD9FB47CD95D53858DD773FF46F9CD6255FF0EC9BF7AB97ED16B
2EB75FC9C76A5578D15D6C4B7CA1A7BE392DBCED764D8D52A10182F14141927B
5FB2A2EBA7B7EBFF2AACA49EFE6DF192C0F11234241D4318718E491A48059D21
4266F8A3B52EA8F865176EBA824CE1E818EE1EA5BEE83F1526346B09F35F5C45
D6781826AA284F790CDC3475855ECD75F063A19AB956DEA84D48D8C4AE159DE9
560E772E000A53D2494420AB38D80A2484AF4771CD87D9B0C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C2D1AE634032492B7023944DD1F9FD0CE2F7F4
67A41ED7A40FEA86BBD50B645BA87E3D9B98A309023373FF75491743644413C2
ED9D0848A4FA332D582D8BFFF3D0D13EE0E49102ECE2D624A0A5EEF70005594C
5E0F074DF55E0355AA33C6C0F2D5F535AE93682E855B1BDD6CE955627284BC9A
9199F188FD2CB5BE9839DD396DE541D181016DD6F0563A26851AD5E3E00BD661
6EA0A416902D3AB5EC977DFB9A5ECCECE360FCD3B1A04F16826F1B2685EF82E0
928B3862C03581AE7F5CFB6E28E1D1C86D9C66ED01B855342AE4DB0F802C1129
6A0BBDC33436A35995B50C42EAD39029814C8BCE19DE1D6EAFE04776A6E23862
E9212C1F00409F1184AE358D6F5C5432DBA9D9E35C0C8D10D99B443B1CB9294F
D84C265B934A0857ADE490147C5AB8EBC973CD8D3946E50D5357E57CD8F73589
E001EFE2B853747CA6CF900D3224297F610CA3F3B2629EE272DF9530A35FC614
5232C379D553953F21303DA3CD71A95070A9FE43ADCAD26A4C067109780A8488
50FB9B3B0285C7FADB28A3711C06273B79FBD3438B9C18E6F4E851C2F2033AFE
6DA413A1873C063202DEF40DE082B544B4AF7127EA6D5B8FF5A07351987E5325
EA8D2985AF7B9F14EA2C7C51096681B7712C92271F818BFDFC8AF8099CBCDDCD
FFE15EE19FBB79108A5969895654C00A5F30A5F801DB4597333718373A3B8F96
8B1440C691B1FA7176E0CE92270D872A5B65E2A540432B97CD7F69F767A67AF3
BAE02C93A4D69F7A08162ED8FB6C594E1B6C10BEF2DC54827C9A368306780B31
793DC3588A170E5A20B20B7C7E7B74D57A23326CD8E2332276F32283CF0F7169
EE52BD767834B73D8592C922B8284C6C64525B4CB3EBAD79CF5CD41A9E52E33F
D14670C66F070D8CF7E7607B46F62671C05CC371159F0D61B7E136F99D4F86E0
A6CBFEE98BF2D01C80F225EE14F3FD8F77D0AD0DBACF1DC91B90C11A6D6512C2
7B1EDEFDAD3E3E67342B0432C996FCE6733B371BF36034355BE2E7E7FE9B2134
E3EFBEC16BA5B0097D7290777354D1403713C59D3ABEE28BFA1EE08172B1C2E9
6426A9797747D4E2E5E735378A10FB3CFE695C7C9A778DB1DD2B545FF4B9938D
2EE9029BD66526CBA20B0323265EB13FC896A9733CBD9F87A2FBC724621FC19C
3F62414281BCB53CA46A8161D536C2D0011A2CDA4BD7D71A5116E10B5BCF752C
369CE03BB374617AD20200638DF7E3599F62B0286A83FE867DE833DA386F93AD
2F241B5CA8B55BF28DBD16720BB1C42C9A97BE58542C45F05748B1A1A133EC7D
FFCC255E05EB61E60035946C6E3002646FCD01738AACB9AD52BCD0D6CE9DE7C9
D0A7C62D6C1EFF40A7DC27E4C022403E18AD9CA02B5877B53747D33126D4E427
FD7ABAFE5A711EF72AC4275FDDEA364B0E8DCEA6E5D95B0C3B9E3114AACA2D0C
BD42EB7B100B99333D004155898A4ED4C460E1F28340DF37AA75DB61EB4929AB
62872DAFA2D779981672F5D7278419D03E92B51E62CE40C25D780F60DB82EC24
53C76DA0E3EF221EE13C10CE461087B005576CD68727714EBCDAB1E069FB552B
244921DCA2ABA2125F364237560ECA59253BA1D99F332378689F4FB174E3C634
54AFB214A8944B2299D75F55E0464E42B1D8A06DFD70CDDB936FA8B7F15B6868
26B5EE4D5B6011D4FE891B918DC0343A01080548802256FB125714890F735BA0
46895452AFE7D73D975A793B5241778A9148CA6A48C797F34C92CBD4E803317D
C22FD3C9D81F1FFDCCDD170A6C690A75A165FB9D0C92DE6274E7B9341B3A54A8
6155156D151FAA47D65AD5350276CD0478CC177AFE57D15B1C247E7FC63BCDFF
874A75714FD324FDD866414ED5F0DD2CFF466DAA91839D038ED7CBBE6993BB74
55CB374C4630FB4137D55F76088819802AC0ECDE469085BCC3A6944D9AE66BDD
C633EF0ABF651BD35A09736BCACAA027E0F029C5D7372EF249FA0267C140139E
32A3C82F1A821B58BE53678574253555AAC69C4F5FDA21D1E2BA3F3C7D49723C
B3509F29909A009B6625CD539E94D15B13BC74CDBE6EFC6692B1EC142E866CE7
5F1FBD94D01A2D221E3D64D048CE34560BBF01C461E2A4BB3A7C9A4B24C0499F
B1611320491A48DED20371FA6B02A50091FEAF534CA528E5D88EFD8566893F56
B21C5F06F30EE2F085B06BFE3AE025A0542F0D7F681BF0FA3906F211147BA146
D78C62B62FBEA3A04583F3C4458CDACF7FA1C6FF8AF6320D750231B552FB90F1
22B0C238170CEE768BA5B6BDD6D1510EFB6BEF2419C91B23F690945DACCA92EE
9061FAC3A8E1B8776C69FE99207EB96A2E6C2297EB8656E59E82D8B8D8D9C3E8
C2D184E6656CFE6D2A1A68C78C7A79A202BB5A04157296D730F9FE2F3B9316FC
41775DF4F288C71B517BCD8228BF9EAF57081F57DBF9D74E7C3017641863963C
A3AB5D13CB0500106B9ED5D16E0B45FDCB6775C88653AA81DF891DF490B9ADB6
AE50712D08403465468DA164B82D3C3FBF6D1C7B96B726329E0436DA0F24728B
F15F78C8E8ABCAEBB05F8735424FC707DCE60D51BCA42C273B2E43D802111363
88CE2ADB1B7390B800C5DE45A3519F7136A882713399C831384FA1269A135F65
3A26842C9832772C15EB82E86734FF9C26917BF1D1FAF692F9CFA48CA51F17B4
EC3602751BA8DD89E21D8EFD175AC6DA8E033FF3DF0FDC7F4F675EED0EB2B765
8DF687C9A775D9EA3C72674A561939FD2FD163FC7D32096C6A7E4E081D61DD7A
3FD9373F9A7F4BDAFCD55BBDBEEC2355065FAFFEE86C8BA72ED4E9CE6645154E
C1B30B318967776FD2A50983CBE06A0A21DB992DBD811A09457BC00D7C2668E1
663315B430D1C80D2D39F88E87D4554095A2258ACC3A750E94CFD5C2D2ABD635
DA7FFE17BD725283CE013C9E099C3AD560BBC9A72A50B39F367043BA8C5B9684
01A3CD81976D2140ACC6FA3F605EE3C84A10A9B75142A4F86E27E5BF5701F9D4
D8E4170AF7FDBF3C09162E8A4FC6CD47C150A8C737BE9915BF08A536FDF606B8
1E306AA0F78F9EC9834A8D9C9B376D9B539BEDFBE4BF99F37C4A34A69D56270F
BBCD33071471AC139C90CE7F8D073A8C47D478FE1788AF768FE9FE3A7434E53F
28C0417E0BD2BF59C4723FBA2FC1A1AFA932B1485A158736FC5E3A6EA4ED4A4D
375B2D42DBD1B70D7A5E03B4FC98EB53F373EF24A82EDCEDCE509D926BD5E3C4
F6E6C2EEF52B464FE65352F56E78D58BF1E0922FBDD3D7BC680226F1D3861E1D
799628816A876C6FBAAAF8270E031485E13EC41B411C533A5CC6E2B556B33648
563A0D611223C987C29D1B9B88C659BFD9CC3BF9C51B407842090E3499948E43
E1C8C0B5376C5F3608892370DE073A17C2694902D1FFB4C32B93B36DC34FFFC5
8ADD6DFB3405F36409B4773C99EA24A21A41A2E09D3F835FFA6B64A7EF9D4A06
D0DAB15EAC74E87BB7E48C5097FDEC7E76941324E7E83F6542C7D49E060F1B93
C3C9C3DC4C5B052F3F4219582D45949B8C3A7907A725B3B781635DD650F404BA
14C3E9D3D5937698573BFAC64BC00CC0F54DF8024C28F61A2AEFC4FDC3734A38
E4986917C375B1F8A6FBAFE03DA19012968D082494CBC866E41065DEBF0051EE
2C4BEB23ED13D15CF65A54CE36C42B22AC76ECE7686E4E8DEB9AFB5E6FC2ECAA
69EAB2EF6A77F16BBBEE7D1B30682735099C174FA03E404C0C5265F6C0C3FA83
4F23329A968E3863DBE038D516FACF2B71058CCD9776C8E84738E53D6BBCA98C
973553A811C8DD08009B281549D63C4F0992CF23F617D40DD0BCC5AB7A2C0DBB
F87EC7D6131076BA25E98C8D90513693094FD2953D7C2AA9A1EBC1DA535DC05F
F15EE71F5443A876C1402AA1DE45FC9784EEBA05C07C0316DEFB279AC52D6EC9
31716C5991A46CF2E4A80594BB4BD3513BC10FA06F78BA07604609110A3275F9
581B3CD22C3D31962BCC5728D65B86629A18C936AB40F2DF4E6AD3AAA4197624
B5E671D7BB68F21E1163038F0D3340465C49BDAB33E2BC38EE8787EFC7FAF8A4
D10DF88C738EBDF041568E0DD14E7456D7C51CB856383D1AABF0209B70104DD5
73F986F2A6805837D5B87A7E3F932B6B55E0AABE2DCE5FCABF53511D26FE98C6
6E17C49C6AC5B8EBC8C27112B676B37F2088FA9735C944C04B919B7BB6A60DD4
DDFC4447A2676F9821158D56882769E3AF7B6C0F8F856AB15E37227146D0495C
B5F6302C7BF689BC9A13BA20AB4FD90943B58E76A1A69A835DBA2C92162ADBE1
02CCB703C6434F4DD729698CCA8E164CF91AC096EFEB2EB03400B20F87F87659
72F0A9267A28E44BBB2787712CE3CD69C6D0DE08B6A41DE6AF42F220B87F2291
3A4347A452235919452B55B55B3486D471A1D8C9330591D5D7F5E37C8646D083
7543BCC5D29F88AEE951C2452D22AA967D32C3F37A94CB1E2D42F791B14D83F1
DF9557666B4DBE01078C794023D45DB4489061E78058177BB5FC517C2FFD1E69
1CDB36F6804E78DAEAFCF2F76CB6963097DD6640CAA6F371F54874DA5DF4281A
F10CB05514B8549D459EBAEEC256F10D66BC78DB581291EE36C7409884F052D1
DB42DD6C56D2975E0EF1F35FA25E9BFD6863219631F3418DBB9E3DDBED5D2669
9EC49B848D2F9A6B78E6AC615258E663C9D255FBECA07BE6FA92F929FF69A8CB
D1565CF3B86A0455B9121D1B79B074D789459F860F97BA62BABCE86CF3127088
FE3ADCC1E82115E1BA9B83BF35C8C3C0F0BDB52607DD06C28A27DA86B844AB08
380B69D16F4A806B3B5D4AB4CFAC640685F4C77CE979AC3BC155D6E5522EFF0F
BF9E86345FBDF352485663C127B2002D66CFE9C86B1E0F410914EB6037E97B75
5E4E02F77721A9E29F41FC78136D61A9BD39702ED035D3527D67762027FF5209
6CC941F47D98666AED0394960014969BD78FD57BCFE092F16FC59B70F6C8CBD0
C31707470E0F5DFC1FCD7A928DF0CD388ED13FB14BBD83227FB5AC66CDC561DB
B0BB5600EA629EE2DBCC518F0FDCC7AF4AD93658D416C86E3048847925F29A57
582ECDC7317D6A8D4BF728F12F0F85E5554E9E55EECE0AD3357320847B6C1DB2
96E14620C75A20AA65A6D8B730A3D9A8EF33DE988FD370750B1D2B370671C52C
ED1360CED7EE928D24ADD7FF8D9918C339A8E8B4138364FB87C7C229F5140D0B
98341339A5470B4C89E24C9D70CC44A871CE8580556C16A49C4B4E8851D93331
FF30035851FD2B4117D6C8BD31464EC731C92266A97DC3A56F72BDA98152D3CC
D67BFACA1F6DA762470D545CE6B8D92473B37A6E4F397CAFF417D6C492240D8D
E4248B0D000EF055314EC651FFB47B9E1675AA41B9F6713E41EFDA0E65975F32
FEC44D28C440AFED971B846D770233BBC64C04B9B9C1300B4CE6A4306C5FF411
62443F74116076BD5C9CC6EC08DB9DEC5670442C353BFF38589780CF54160426
28EDCD86876B9AD32BF87142F762E1046FC4AB8254E49213F3A65E698F73A56C
086FD9F9CEC203ACBB02D26465A3B7C450A0B6C5ECDAD7BAA8CECDD7671216AE
BCF33F072CCD073AC15C48C5F0EACE9F97B59EAD3A09AE97C63F4B86A143828E
66644DC0B9108FBB0DCAFC017BAA8166A39AD8117BF368B91934BC6F0BB4C683
355B43C06B19887EB524D6E65C5726EB9D729F36FF3E4BAE8BD94DC0BFDA6BA5
8119FCA2570964C9054253269F8496FFF2FE5D5DD1C32DFC80408D750304E9FF
5B9A0C15BABB8F3C63EC967AB3F4A9FFFD6D0C06A8341AA245691069D8B35B3F
D90515E8FB41A343AD66AA4DE16163437B6C6820C9DAF1286142524FB203735B
CF9BD97219ABB9D6458C50623617827002A7C7B1D5BCEF24DBBFD388A89FF604
8699D6732467BF89E8EAB9E1EC5ED7C22F07A7E31DFDF7112584229885DE2FF1
F9AAE228A6BEE836C87B3EFFBC7AE6E871DF9A0A8B66CF87CBEBD37F537F0BF8
1BDE35C2DB54682F72DFB7E5B5F4024C51186C469B5CAC9DA580FA83A811D252
2D513555CEDF10543411F3AB5FFB7895206B16E8AF5B4199F0464DD336E890C5
A6644AA26EBAF342B0C3E48313478861F1B9AAF83F3912FAB22CEE40C1E91048
F094E9AF5605BA4C153BF2E8606E6BF54F0FF19218B2D628E86983FC680BF20E
6D2D81A638B4A399462C960C4353478F04E5C1BD63FB69472D782C659F786267
1FEDEEAED69BE09987E0A462594AFB132AF95D2C459ABFECFD7093A2991B79BC
D92436047E9CFD50943520808A6B7AD79DF83608E25FD6C1C0C80417E05E34B9
78DAC7DC9F7D22F84340DB786E290974F9FA28FC998BBA0706D024C4B268B380
5E4C75D7B9426F419A31BD9E3EEE0CF4B5284A1C71EEA1C710C9CCA91C3A0F3D
DAAA9B45734348FF7096EDBD12F041CD64AFE61BAC3A46E4A43E85BEA75A6E5F
78C1046CE62078A5225891310D66A356EE9530ECABC69C940C5C65706A3C88FE
907F39B32311E4DA0766B36B6192D003985BAB6EC9ABA9DBC835124A063A4719
7B12F695B497A37003D77B4516E25257BB96CCD0A712E33407446CEAB96221D7
B3F4342FCE26F6EF1088EC186353B9C4B21D7A86F61DC5FBDF3F5EF04FD02B4D
2B19D6477314944427FC7FC91F7BCA627AF35A62E39BB855E9BD68C4C0728A5B
37F88F7B480E1F0EE3082F1144BA7FB613F00CF3DA02BD88B6DC71C848D057E4
AE3F360A382EF21A8DD920396F7F52B7D55F17ED1997C1D450F67B0FFD5674E4
853E4D6EA1976DDBF07D6A24C06336351104954ABB261B61F3B8B93FCFD205B9
860AE8DDAFFFC3D0003ED796304292D07DA5C9CEE4EFB147786586BEDE9B4149
F8B0FC58FE825BC54EA5B184716D9B3136AC2E7C2B34D1FA03AA6E60F1173DD5
0937EEA219B78822A55E3E68415A2B6F890C9FCF40E7E8AF25AB31DCADB49DC2
FFAD134DD8F85DEAE44199949AF13E05167F6C95C93AA03915F99709710D5563
03F36747CAB7921E974E0F02532DD06620A3146C19FA9B1B6BDA1FDDDEF45E7A
99EAB7423DAA56070BB60BCE7A4975433D1ACFD965F3C47D22B2B8E48E9FD2D3
BE7DA00D170B6C4BE782A1AAF0D752E7FFF9F6AAAABBB24B4044034791B7D700
3597C4740A96A9278A6EBBAC6D1C1C7CF6BEF0700968D7CF74E2B3586C8CB26D
549828D6CEDCBECA38F7FAE8C1363A6CBD8AF8B8B9D290B264D2A274CD739F6A
9A8920C2DF579A8C1E5ABDD668E4D853093DA735DB67694569E8A3115B94FFCF
389C6DAC7302F6B526482E4C9257CDC556314D5C972D352297C8500084FD75CB
36F23C0BEA5C55AD278CA8D55636820183FA16E59C55091C22CCF313C333CBF2
2FD74309E0A7AE912C213D0F380112FEBD737CFF6C1483C4533A2592269E14A1
1BA6A5BC7DECE20029034C88696774E40BF978D860252ACFC5659CBFFBAF6426
94D17BC8EAE20671CE75ABA0286FC31EBB7B819AE455CB993EFA46E22173FC98
BE95AF020AAE36B57C5244013011F77094D703ACA74A06B39E50628A40C4DCDD
90B738B16CFB4D81A44548B4769A0AED35C6A162A2F8042E0762A9360CD5D674
E3357797A5728B46BACA35D941E9307561A0CB22D5F09607F27757905BDC13FC
37F566F4BD5B50B889C9DECFB5134DD46C874040B8B4DFC0DDDDF3EFAB051A57
023681D7BAC7CFBD831106C2C195D22E11BFFA2ECC0657FC34E864486842B6FC
A421949403B6179D3A010B979CF58A257E97A14969834FEE29E5CDF49CCECF81
719B26D9BA757902C2B35C13487F0BED5FDC378F9CA52FB98CF2FE36B36F9968
B5CF9FDBFA11DCA0E08D087C4C5C3794081B7ED0D12F094EBC9F3A303E146D5B
42D12F6B1616A90F3B8A854B7EF90FA0DFA208E4C47AEE2824280596B3D4677A
6D2AED73403C90884F55AF936438B2181B3330F0F908DBC35574655C93E13E24
9C6F1EC310FF7E2866D180AE2A7514B8F663BDF359978196223BBC6A2C510331
888F63D113F9572C0413F8C790BD5DE8AA9D773100C8DA1A4DF6C8B7B019CC31
279CD27DDA52E78AA999C30A5438CFA2F9D3270AD44DC4EB4988B9CDA336FC9E
E90459E00A2F7DBF72B2191F8A281E6314A36DCB2551BF27F03DCEF58B7EAD68
370E4A0A6FDBB0B23809AC35835B40EC27B7ED3E03770C23A83FC926E4E49F99
A33D05EC001E45AE4B4DF4FFA56A85E06839D169AD9A8EE1F5618CA219210BE6
4E980388B8DFDB208F9A000E029606CEA40997B3DC348356B5CAA9CED2D8F112
F9841D2076A59BFF596B165E5DA6866E093125296921D3CCD32E4B6170DE488F
3F4A6275DA09FCBE2D71F6D287ADC8E589A26BA22D3EA5867040E96A12AFC326
F472736F2B9B0723922DFF1D36D36DCF2721DFAFAF77B153CB83F3C07247CE52
36EB13B7F1E8A15AB9B0819C35691EE099B35C1CA40B9417A1DB1BC9CFD7A726
E5853FD368AB54FA49628CDC2A8FB41FBF08C850C509FF5EEB4E8F3354D4E235
28B5CC351E220C6E82E8E0DC252E65A40C031C3098D75FA68F325D05847F13D5
093441992C830C2CCFFFD54B90CF0768E58BB4143431161281F06B2922138E1A
0E0014C795C8594E6B640D8A3743852743D53F7A4833AB3A61FB3C873145F8D9
1BF40B4B1ED3CCDF202006800757A8B9FD89AA53571EA1D80C46D3B0C6F8CE47
D04840C0D51533C52FEA4C92CAC9C00B37CBE46C2EFC82526829AFA5269D435E
C9D6C2D184275483553D8A07FE9C30D2063D4FE95EE305225DBAB91B15400EAC
8A995556D07CCA4FC7DB3E226045C8A367D37C6B0F44A6153C4657AB6CD41A80
EC051E875DFB42746D0F1FEF45942CEA347D253E10733C2AADCCB3D0A0CDB0DB
C05574F7670085AE08BFBD0425E1C1A5524A2E538E6D307965D35D68353E1FF4
2EA4870FE04CE89D7B1729711369CEDDA424A9E19BED13D137DFE3F01C935676
06AE4A6A86F7EECC222CA705C035DC49777BD68051B1FB669822A651684F29C4
8502C848213933CF171FD63619C4277D4B2600B4AADD0F5E3BE9C929E8094F81
75E5232D6644A258A2A583056CC0E88897EFAA42F007AC68E8E3A48CFB39DCB9
9A05EBF834AF3B1B2AB054F55A192D587A28D58D06FE897CC93339DB2F5D3E8D
3640E5C496E1E2EAF70680BE2B3D13B9ADE40F20C67E07A91DA287640ED4A368
1A84D170419B1D9D825F30DF959CEB4C0C02210FE250E64C24A95C9342F0DCC0
ADAC14486165558E554A5389129C3D22C556E2F6E624ACC2B41BED193E6ADA20
C9BFB9FF931ECEEE556BCC9C4374EA6B2CC9D51A66E61C25984CB5511FBAE3C4
8B1B02C98798499DB7848E03ED4E13B10FBC49549701D11DD0F209FAD8DC3F82
BD40FB1344156DE7712A41673F44DA2E1E7D41D9B0A0B8DD6BA34A437F711AA6
36231EAE65D3CAEB8041388F35588B794EF9FE03CDD26508432F9ACEEC0C86CF
B46347C4DDA85D7764EBB31166290BA5CA2C3CA4E8607704435564B29C5DBB42
FA21CD2B966046EFBE1744123AC8C0F4CA8C980DB119518F8915D1B650DC9399
AA84E583B94A24E13A3BDB4D791F82A5C3EBC79ED55666FB6BE037AA2EB10BA5
74F44852596E049207DA39BA7C96926AA7769E7702305CEF74EC07C03D568BFE
44728714E2A1A31368CDCB906BD6C4851075D08FB7B54F4D085798E459B5F96B
09DA6000AEA0E6DCCFF81F5CE5E6E43EE754496B51991DAE67DDCD3EEBDC9F0B
DB4D90FD4145E934F4F263CD7C1A67E0FC85ECA6D87E7772C16BE5309CF91E7B
9440BC8CE2D95FA1D83B1D8A896B537462AB0B27E20C9D3CF8D27B81A55DE3F2
E371A721CE97E1FD9A0EFE937656C78D3EEF3837812A55C0F8FF663005AB32CB
4B565D620C2A709C44F011D5818225FE6DAE2EF781F5D51E018A05D65DAFC6AE
168652A1003B7E0FBE24C3092C12DE3464AFE71B5A359C4A0929163E8EF66079
4518DA430F3F274E7F9DDC8E3DFFF7511A3261532247A8570D855602B2B0A8CD
A0B452409C8C765E4F4CC0F2544D7E77C4D3E0302A3F923AEC792F34C5A9EE4A
2883849E7CCA7CAE31CA56A093582A6625A0A463106BA0B36987484ADAB3A2D7
A3F9ECDAB0F6BAFE6AAFA9CCF6E2FF9CE68A0E1D6EBBE1198DC79768C37618A0
857DB155AF4C8E3E833E87535CCE8E6AE9527227DE9FF96147F750256CE1DF64
41DBCF231FFE79C61DC5E6BD7A0BA4E864DA31832CE3B416648FCB28C4F2D4F3
7A3B26398A1D5AD2F84F0E1339008A3CC69AE4311BE9AB45B21FDAB27C8A2820
7547267FFD6B8A6457D249AFBCF651BE1ED1687A01278F81AED807AEE24EB7F0
85A9B20DB623915950B4C87D72F27B03AF938CC0541197174C8AE0AB34792AC8
573B541EA6139096323EA9E8C2D786CB4E75B9CED103496C03093961B820AACE
AB8E76A44DDDB0F5E05E68FFF895430533036E256B8CDBAA54FF0F25A13DAD43
232F7EE4D840B4362174553BA91A1CB9421DE1DD7BC5D109B52B7093D785F43E
2F9003D58682CC9ED169B3582C030C9343D40421169E969742015EDF22C12D9B
C0CEBF5B09B91DDA2DC1E85C570547A5A0817887BCB9F55C05FB87B760B29C99
F7321E679FF8EE35A93B7E27A9BF39734B53CF410AB3F3A01D5F2B920DC304A2
52193F1D935ED5268A6AC194D211C7FA576A0FA938B0A6615694D1A83741D4F2
58C06B01BDD19DFE9E7E2ECF47D44931E96950E83E418B529E91F56FC406E4D9
5578B4C5A9BA10884C31535448C20ADA9DF7A53C5CA6FA9E91D8A28C719F9348
509C0E17D6300085A9F2A0B2D5DAC354F55645D40D9CD64B4D9C60174E755FCA
8F3572C613CCC6B7436CB4445C100492702A71DD852365F390804B9039E21F9A
FA0066EFD1B14F9C365E5A68E2E06C672AB594515E77BDA65B99D4E49169C803
CA14351EDC49912CFA3F1CE3EFDE87CB740D0BDFE48737AD1F3BA1298620E515
4BD437A218A74FBA68A6A0F3EB5AA7821E177146EAB77C830532ECC754850D94
0888F720568B818F514EA8C11EA59F4E0308697E7FB615FA653AF27F65EE55B7
F978890B8DE836F9B03EBBD7AAFE59551BEACF3A00742420FE665809102BA712
6DC518F7D2E8FE4BC43AFC8D57D4D7F60F0329462D2EA09A6577E0795042A5DC
3DBA4B99B1158F4693FBC314E4B464F63C7588955BF73F38B67E1FDD63579EE3
AA4C2AD4901C01D1FB2F383414084419552DBF048D62CEF40CB9A322D4E4B9F2
25EEF68B82816888826930854329F9194F695F5FCDB616F45FDA682823143D74
30D65217BC3719013BDBCEFA2098218C07205E981A506B03CA1D1D06570758CE
347F60D3830085F5B2B4D380F11A63AC1E78F71665EEB52FFB958D70206769D0
BD38632F5A07224262D7B4167C0A622AFC28FD1A1F890D10DF396A7566992846
C6EDA2A2DED66BF5952BE904C3104E28F1BE70B4E494649AF8F9C74E36A94204
18AA68FBE3D77455C7A97DCF81A7B3ECD67E5BD1C1967437DBF4F30B4022D8BA
2D5832E027FFB7349F60E6157F6A770CD5657F0064D24DDE8F3E1DF3669284F8
5A961B1EA3EA711CEB555EFE0DA9A33F1C12A392750F3D1D4FE99AF4D9A17725
689A9246F1420227229158747B235AF81D9C07C40BA8F4FD754ADCB4B3957E1B
8A795D720A30B7DE482DFC8ADE71D7D0BED41B2EBE007B95C1A2031DEA011531
D8C32EAB5BFD98ACF80D5927A07DA8A3AA987A899E28ED6CA9FF5091803D40FD
EB5242D5EF2D6BA4E5DCCFCFE7F8EC158A3A9D45C3A6C5634DB5B2AD6BE04FA1
69730CB696ECA5BF0FF3FBB3CDE8FFB5ACE7782A59FF0302B3225CC80522705E
1097BB1B43F79A40D1DD32FFAC02A91ADC3C8244F1C7033B87072A685E3DD787
AB596EB2039CC1A9D525BCCF2EFD361F7BB5FC9649393219F61E3864EA623699
354F9E26F1AC160106FB5B457F222918FACD5EFEF326E367B7ECF5DFE24EBBCA
1B3C039C2B6271FD7364425F4F2746E13AAA9CA20BFF33F6D85AE4696E813BE9
158CE6319482DD1CCB62FEC5AE724457E9628C077A0C7218B75E6DE0046A4A17
B5C3E9DAF063B335EECF830F146463E8EB9D414F7457EB664B2262987249C560
A78F87D3790CAF51F7ECD7897269186E9B9BDB632C776825C0B63FFC1E1CA352
F141B902E3CEFC036E46D8C0539B41792E2B7B5361930A7492B4703E08CFF946
34679BF2DC572DE33AA0A7E4A4F64A6E5C39382501F2377EC2525EE7D9853223
CADF1D781A7E4D07DB3D4F16AE250313E92977239F635F5CE9D418D6F164B55C
7031555A45FE3019D310CC10E9080C619F102E6C0EE4F80F05C1AA36D23E56EF
E60888332A3513F78E149823AB548C2BE8150E5A4B7704DF0394656DF75B0DAF
AB5A00545DAA9E5F78D800C043DD15BC8291750EC9A65655A71AF0BF094980DA
BCA7D280DFAB8B0B3ACC533B21FD461641C4FC3D225D8F5B912FCD30E0A36D1F
72019A09393FD526BDE566C4B1EF387B58E928AF7F0DB257A40AC29D2907B4EE
E416B0422DFC5718733EEEF10A2E54A8082A9925BCA8154C3B55C72742DBAD65
6CF6320CE66934AB31C295D2F19D27BD64EDF7574B612B85EAAB846B6EC144DE
2D52214DFF582F813D52392995D75B70F69B13BBA1A525F22D7BDAFA02FDA142
C52EDB1CEFC22E44808A4436816A89273642095B1E04CC60718A2DC2BCD99B34
20287D56CB7D8AAC4A74715CFC76B176E1104CE528460DD02978813B840ACF32
FFBFD9E8DC6ED9FA9FF379C70C8E463A8D34362CA0C6A066ABEA6C1D3B8F4023
8DE24F302DF7ABCB9E85A6904AAFB352F840F8453B0B5FE4F667273D83A2889B
B0DE1E2E0D0646A3CB0E5628BF6C8D599A639800089C771A6CC556491A618D5C
AF173FF8AB5A6EB6B9CE70F9F9E81159520DC45679D35E06C8A1C712F0DAFAC0
73C8C79B30EA5D28A68CC2FA966F0EE721CBD2FF3B2058736D607CA8EB562EDC
8ABB5D6C02C561986641ECE39E618667C59EA499B7081A0844B6DC10555D2521
3EA2B4C4C59B2FCEB1291C549BC9ABD6241D2D9C1B54EDF248413B9AB45604C2
037E471BD24485A77247B3F5448C704EABA8A055F8A2E33E28344A7A9EC8F2CD
1AC4BA863C12856A1AA45C4CD84FE0E96BC0FF6BE13588640B1697E7A5AB01D4
273EFFA969966A789FA2F37D77876A74CEB12B32C391633A9B6BB2C5C386F76F
1DEC299ECC46DA52F4ACD3B9C99B013CA669943B050CCEC5C81D68C4D3B152F0
38F5EB1239AE984A8553BE234EBEC0692797103CBDEDCD86C7C8535643BA8DDC
EFB765BADFD5E6D79257FAED5A1C5B00550C3C179922D2AAAB4C6AD5613E10A9
6FF8E3C4E290864262DFB96D5030E787961D72D02C195C669E792C0DF514AC03
01E4D98723B5A14A5EE325D1C4CA5023439ECE575A29143FBEE75E1C89CEF25C
A0643BB2A4366A5EB5EA7D16359EBFD88ECE219BA650EEFA3DC87EB05F6EC98C
F9AC469D1C54EEC2D12FBF6F0FF47380478B53FA21F5EB3D7E723C6406BDF51C
F409246CE2FBB04C34D5007FCEAB3C586AF1689FE77C7C772DDD390EF466D40B
68C1A750C73578F9434A856C060E479AA7E0A5C8B360F273832817F889315EE9
2C675CC9143DE91EF77879A078A5317627ED3AD4456E3A67BF5BB49920F6FE66
20D69F546631A4A81BF6562ECE87586E03C99C4FEC726E5D5B2EA82F40784356
690DDB982F55FEEFFCF946C6DADBC4C7175875B876CA70B1C7D8A94FF1FF6FEF
4143E5FABD856AB9716843F33B7143D941433B11A9FEEB5D4A9ADCD157D5DEE0
E6B465BC273668725BFF2B6BF271B4E43FB0B58D3D416E5E034E36D9C5FC0B33
B7AA0D46F3A3FB97B81236E42B64F1DE8F7B8246C840F68A08DFEB68B4A9563F
37CCB5C6F49F964FB9EDAB8FDE5AF3B0271B07660B6D09BE359831087184E41C
E590F9C8EDED379905C99EA4735506E6A03C7A805C5AA651DFD7BFC5FC1ED5CA
86663E67B8D29CF63309F98AB436039124DBBF37CF2877679D4266E65DE1A3A4
18E02A8BE169C5D0B1206722F2276A4400CE3B5D209696357B663D35D2E7183B
AD1D2E4019F6515215C47B8D9106E64F666D5799A8B95BB7569737ED09A882AF
74475DB676698CFD9496C05FE650CEE9912B34040061729AC4D74A7A206550FA
DDC77E74D38A0D5A826235FDAE0F2269E6CCA5E6E543778DA42AC043239F322B
3428E32E833FD988D566417E5C3808F0CE9A0641CC2097EFFB9F6D14FC983E99
D27F9136D8DC209D1968E9DEF97FF74420E1159DE70A8E253DC0F8DB65BFE28B
1AB973D053D8D3A68592A56AC054E9AA4F356FA7155A9563A3B3009F37E856E1
E39ADD6AB74B4A1C72111F936A36E33A15AAAE3D4A2A56DCC2A73404E844FACC
11C2BF0B27F6E7217D171A060FB78883EE20ABC25A65E020FEF720BA480BACE7
8DD43DB1BC2E1EBC741E6B8FB9A647A4E659A1398396FC2E6B686FBAF2667CD2
ED7A5E23628762E804EDDD045FA702F68652A4BAEEEFA259E1B079468F08130F
F077F66ACC0449643C29588110F414303479632E105CB504A8568F31A10AD01D
E5EBD4ADD3D4F7BD5C89F7E958B584298DC6830F31E285047FE342E543D60755
6CBE5A9089B86D1DE768F27D7114992DAC227580ABBCBF4E94C8B8863191F877
DFBA4199459E5E03218E29844B569E2EBD6271DBA6A5B619FC24554C4E5EA79D
4611AAEEA72B791C22A1822E686F3858FF0D7067FA57B561F745A1E86953865D
451F5B002D7F3C78C06F051212FE8E4E330C00161775A4F0F369AE9BB346DF9F
ACDAAD6E56338170FF46E358F0043AD5D5D2B8AF7F6F4E6B9F785A52A753A5B1
6547FF31DBB8C6984D9732C2BA6F48EF90BEEC53E88FADDB38686EF45B778D28
FB81CDA82C8BF15896A7B18346CD1F7E80ED35DE34D2E29FF7AF32CC38F4F4E6
966227C54BAF334917A680221BC9FAAACF6B0888379674172137D2E696E031EB
93189D99F221F2160539A2A7A5A9E6FA0D8EB2C07306F8DCF26A4DA2D231954F
B93FB790C6B8EAD46FE7E6F4B2B8BB9426E5EE16B5B00EDB7D6C76F14F86FF69
71FD9BEFF809D56C850C04A0FAA9BA4A52A17EC97639C6B73A5714CB9D2D3330
ADFD7241F285D511A410A3CDC4D8D4BEABA4B9646E8EB39F2EB945F8CB2FFD2E
71F2070CB0642752A12BB4D83D94D9CCB6C0ED8346967ED511E844A264B73136
F9AF34390319F6A543D5D4D7FDDDF7FBB15772B7E5E398285529758927D5AD66
35D241202B57AEB8A37DCC221CE80014F807A53945E21FB4794951F3DCFB880F
4DA4053549A93053833E4EC70B61444F8E651122CC273C435E3D5D1888046B04
E77002CEFCCA016681C8265FA634F542804658D30A5BDE1F29C1EF9027BA3879
3891A9E69E6B18A95A9D277318EB7238692EB50382B7B59DF89C12D696BA9477
D629F3A82D48CA829B9648E9287085A2AB71783B16A4DFA77B1E74ABF75AAC00
8DD92C3919755C48B4F711372AE3B7BB1090E9EE6CED3BE08C0DB8CAB2576764
ADB91FABCDB65A20AA801ACDAFB74EB358437D0CEBB9E03109C593BAC09CA996
25302CC1E0C0F28E3CC64BB4933D3AECC99FEC69C3B0425D325FA375742A1B2D
26366796627D7A18371F4B613DD428795FA517BCD14F2BC5B745A39B9BF94363
EE966061374010FDE34C570D7BE76A496A58242F51E7321385345164886D46FD
31A07B390F3CE60CCD246ED0E1CAD054E177FDC984EFCB4556AE25FD1C98C243
367B2619C8F7BBAF7CB7E7ED91CB43236FBCC50D20C11C6929C93F94783CCBE3
33CC60A6A8F2BFDB043ADC0B94FA3370BE03FD9686AEA33CBBC14A90191909AF
AEA9BDCE7871DC5770005AAEDAD9D7CEBA399B3FDFF494D78EEF9EC6AF95ABEA
ABB8C4E8075D423F40FDA9AF3EFBDC504BF7FCC229137E896DDFEC3016130BE8
F3E7C2E2C0DD5267748E63851AD5896ACA01B2989993D432EE93A75860E50BAD
4DE25BBD0E75F70B0F06F5417CA5CB3E7BD25031B667357F91CF44D7D24B679F
3F71A5B3BB3F340BD76CDA079C9BEF42166C1B312E8C20CB3F080B08A69416DA
46D95AD630388563FEDB8468CAA3E1D293B7697284F9D08E019F52D3308C5773
4B39E016FDEDA848A63B7CAD7FA910366C6192D003985BAB6E49DA96211DF7CA
971E33B12C4C686C87AE283E6F3B63483AD8A2AEB5805C2D451A7FE95EA2F774
F5881E3AF035A96CD83831472E38782E480F869A48C9A8894D29C23D28871812
FA17AB46861B0C3FC0B1AF189101F02498290F371FA6B0A5A39B0D58CFD3A3A4
6F73CCE5E95F787EB8C221F564E3B93CE2B0EE17A90E1FBEF6E3778DE10A910F
346C4ED33D7539B66B040DD351580824450D62A12078BC053A65AE1FF70CD159
ABF1FAA17C5B39F4A20A3DEC19163D7C748C43B20A60DB75CEFF3C692BCD8174
BB9537EDB0F8769AD43FF150926CBC449C788B427ED303F7C710D50E8F3FB086
5B3EDF8532F18CBE8513DECCB3A0D75FA456A71DA553D7FF4EDA98E456F41F67
A7063A2EF9ED5AC30A07BE279A8F959B78B813586F20758C62ACB88446E6C561
073D3643F1383986C413CBF283AA4E1B6102C1BD67947C881FAC0032A4A9BD93
5683E85A26C1F42BEEAD417F8192DDAC4F4847986A6834DC9E5533C5E91796B8
85176289D713DE0E31E5E08B89B0E3941460CCB0AA4CE5F70F94C1EA3BC6CD11
119603EE13A25D981B6802C7E63E7F19C73D64E4DD88F234ABF6FD9A507BD881
3B20E099A3594C3E76FA9AA84F8F9415F991DFDB5930DB5CBBA6E4EE5B06F30E
E2F085B06BFE3AE025A0542F0D7F681BF25396CF571D31B97ADF9F19960B8AA8
1E1A6DA768E99C5258F40D0A2019680A7B179F7E6316FE1B236424453B58404C
E681C93A77466C064827E8CCA4DAF7D623EAB5239D1709B4EA0F908B64D5B0AB
FF06BB47ABA09AC8166AD23BF414A6130DD97211D95408F88F138D4968B839D5
ECCB8DE317F7C1449E4F6C8AE7D67AEE9BE9CD45EB0D3F19013BDBCEFA209821
8C07205E981A506B03CA1BA20E89D7925003BB63C46296FE532C382FEDCF04C5
638997019E930CC15B11D2831FD721731C97668C1CD5A231C6351F8C78E4B9A0
F49AFF1B3302A64232D15AE1BE7DD9C0CDA6B6B8371E23402AEFB1FCE4A337EC
7644E81F888894AC32E915A73823D4D5AAE0A02273A47AFF1B038A091EA43D08
1F81DDE88B2D64C4FE2A7E42C5EE6A95F5506D16094E18D9C77CB25E04053E05
52D15702950824D76CA9F4490F24184C49EFAF6040A03F642F5DE171E8D55C8C
C5658531DF6FE3FF0E539F1DD25B1C9755CBC1C061F2F9BAAF636F17EB88960E
A70F1F0F037DDF23F5F85C86F68CB548AC66A1F21DD103F59F2FD46685F19CAE
7678E69728C89FB9F1E995FBD15C97D2CF680E6D98DF340FD833CEF622BA10BA
3A87F250AF9CFBC196B32A235FE1AAD24686217338A79309F8C9962D02AC7A28
63357E843AA41FD2A7DC0244ABB09915FCE4DA65A5FBC7A9B27F2B44615B72C9
3110F53373C50E14657ED4D04905363910147BEE09F51521C8585483595FDBB0
FD967F9E32B069607E2DF3CBEF32A8490B9FA9CDD72ACEDC54E0B87F7ACF01B4
05A8733C6F083CD0FF0CCEED9647F30AC78C389CE68CBF1557B048F8C9E46F21
3B789B0EF8FB8C141457531E7E800C56BA3B85B8984CD86C95A8A4B04416310B
A1C06DD22A6A57ED89C7614DF9530F0D812DCC46E5D1FF75F727D4D0BAD12793
CC7A3BCF9495FAB31505C0313797A2C62016519BEF23B160A29C6367440BAF52
2B1EE90448387DC65F1B6E5D964834D39B2EE6AC4418BAAB58219EF81EE2D188
88127B9B74855CA5DE474D5EAA684B8EADC5D12DA28C937A52B3D1546A00FD3E
6F861A0A32EE23534ECAB1259C875ED86B498A05294591CB08CD8DA62984A5C0
5FE8E33ADD89BFC13805115DF203CAB41F0E6C48E1704F311F51451DD607AB39
84969EC4AB2290459238BDADE1EE89C451BB69C753EBFB9F7D0A9FC87686FC22
C8F111F56D53ADC64547BA12657F5DDCA7F73A5712FE96C9EBA74CCB40138AD0
C04D5941688173ACBB5E5FD0F0E523540498F79D701A943F16268300CF531108
3B89C86D81AF27BDCBDABC57543EDDE6C27396ED7A19900DA297793079CBAB76
4EE2CA299CEE86B7D69F4D1EADF1BEAFD78A6C94B28D4E44A97168A5AC5B5FCF
3A211021A15A328C151D5598D5C19F49AF7397A07F5CB058FDFBACABB8859781
A88518AD8B2C4016247EB6DC26F3B9B5CE810F4D01E330DA29486AB280049E44
38354CC6B692896971F28513592B2818D5842E99F8F271B2B1EC80832C40E532
FC4AC9C488F1294BB2DCCB2CA4B5EDA26186578223C50EB478AC4131E85D4214
195463EDFAF7DF63DEBEBF603B631AB2F750DC52884806BB3A779935CB46463F
4570CC1FCD2159FEFC08CDD9E23F72E3F5010A9141AAFCE6733B371BF360325C
8FF6B2094DA04EC769BD543F9D5AF519812BE51E746D46E64B4E57F282A1DE20
49B163A4288A69ED6EDE26E2E2CDDE328ECDA5EC2BE2BBF6DCCEE85F7A35F824
645B54C592E7F48CB331B971E3B6080AEDB45B1AD9554042CC4A16E5CBDD2993
0856F00BAB4302BB272DF7D1D421240B13F44F655AD6FC40955A3EE68C16EF31
2027D0526B19CEDEFEF088E30AD62E07505BA7A94F44330D45A2185A10C4231B
A0D23BC56E88AEC82FB156E051F2DCB2B6EB9A176802ABC157CDC683990EA696
14E770566001E107CB4E8CBD1B1EF055DBB7929E9666F53907984156A59720CA
C2C2DB8F0E70853D1701AC88D7DA231E144F4F7BAD33DA6815D89A06D4EE09E5
24FA47741CE5764288FFBBE25B84431176DB65B29A30F938E88F82919384A29D
0E215B946CFF4DA6D348E60E09522FA91C1E2CDCC9F1AD09201ACB724E3DE4D1
C65C8A2DD52BD2097C142AC89B7B04AFF0FB73591317D1DB6209A5A896C1143A
E64647889580E0FD8F986BBA6123843863F199091A9504E6C0365581D058E5F1
A75895F6674371AFED18797A611D08D4EEFDC7AB8217BBC736D0D5020E18A496
2134BF74505AFD9FCBAE6C1BB500C8B9A83F91463E80553C4FF4F6DE446A213C
6BBB0C269F7984DAE16B546286B2D1F811BE99776C2818795973BBFA5C23317D
B37F1660CC722BC5ED09965A0C7F095DDF060FC7EADC39DC1778C705B10227AD
B95B702F78CE8A4D81C78E3241C1C6049D4B9E96799AF513415B1FCB389ECAEE
9615C5AF12787DC3CA4249CBC58AD846845F848078086EE86C7D3DA6C96AA07A
3B7867963AF1A30ABD904A5654788F1EDAAA3998B04554D733D6959235D2D761
C17D300E4FA7E65759489A0C9ED60C6B6C83263B664D27A5A0287D550851206B
370B52B6B1F3848D9ED48943F30282854027A305AA2865704879EB188C5511DC
DC6C33DA457DE2A04B370969FD83F6C58069F97ADDE7E0FD905D709C60551013
8B5AAB6147831AAD8E76B3174B572DF2E9AF25E3675D6DEB990CA57F6589450B
071E415A69D782C0F5AFEE0AE120D4597E225AAAF55BC61BC98091D25EC38AEA
CCC603E25C8042F5239A357814377F2059B0C15EC71EBD22365FC91D85EDD67E
12B9B516FB6272363D2E3047D0FE2BE660822D3330ADFD72C19219FC43AE6E7D
580A57F0AFE23729A9DC5BD33D3DEE9CE9ADD2325F4943E4616D6296E8D4E37F
767CBDA511E1957215D1F2D88BD65C13C4AA1BC3D0A4E25999588CBB31E16135
42152CA9D9B1961DA508FC0D5981A3CBE8E786D992333AE902F7D53D230460DF
E60C21A157464B27B243C7890EFB2B9AC42E077FFD21292B68A4A556CE4A4545
493FC7E8267CF8D80D84AC9965573E4F58B8A77A5AF06A59B36A6AA19E3AE286
9D0F07528C5135033B3E8780DA4593E201036264464BE64AB9EE68242684845E
1EFFEFC885746324E37B5636F69CA8A0282200D23FB0EC43EE107184712354A7
8A39EB748D6F18916A6CF891C073F94230E92F01C6F58B7CACB7D504FA7DB0BB
63DFCA397BE4972465FE02B4B07CCA008C9112BF30C5DE79B35FF21A86A89FC7
1040F0110F9AA5A4DD8A7602F68622028D89EB0A2A76FB01B01CBD97AC5EF336
AAEACB95C2FD7699D354B656C4D2CFF9B5AE62C3E0C03998F61197451196765D
60046D661118C3EC051E8A00E3F9CFADE9604385F45053A1BF16F89D31E49A04
CB80A0B31AA61B6CA818F8E68855676F8FB0CEBE577E0159F2288F99867D1873
30E5578BC5CAFB6A68D9CE3BB8CA238922035FF2D0E67A5D4424AA45A41C5B8F
6B9714E677B7073F41471223A3A337E1FB1E7354AE9A166465A515EF56609830
6163AEA7B881163B1F32C86318D499BB784AEEA0EE8EAD6DEB395754052686CB
A201AB75C079E8E139159272BF5581492444BEDE1E20D1F5B81058FE83147AEB
46CB103A6C61AD22C99AA4D19CFE1A3A9A120A749958FFC4EFC5F957A12E320D
83DD38EFB41B2506CA8EDE6AF08B06336D1EF6BC915EE7F82FF236824FBB9C8B
F4DC0FE9E9349C37DD596FC5408F535FB9ED7E9D6742A805E08FD28C06731FEC
94F3F2A788140EC6714F3B0EEC5E121000D758C423D376E2C66C15A39182F777
54CFF68E1DAD714EF0EE4F9F1687F43062CD244B5F819F414AC0A8FA898DEB8E
E111A4434DB5E8002210AA005A316DCCD79CA63F0EC02F5AC25019A3803BD113
21FF23CE4A0E80D89FFD9F2730CCD632E552F3637D2383D18826A6DB740B9BA4
B09182BE8C2BA6CE4C63EE9BE306C5E7A5A715453990445324CD3363F9B34071
108C90154F7923CE0880A253813D2B025EB3D6087BF6BFD9A8418BF7B5A5E177
85BFD931719C5A9AF7F40A1E93939B8FF2FD682FC5F4572E7CECE7E548847AC4
283CCF0064C2E51F44EC9827715D8DF52A49F276DF2098E5F0002AD7F914B8E2
EB356BD2F7506302EF86D9455D5FE71F147C199A9150AB633D93D3B773452C07
F32CDB68FD7DE6F58D3496233D90EFD15CA92EC6D1370B614C7D507BC3E52245
94DE18A5097D7A686A8F16B682E8C95F4A36C9C1E683CC3BE017D666C6A6536C
6053C0EA32B34DCB94BC0B71E1E9DD031A6127CEA73D4611A31BBB1C4948D3B3
659A933844BE674E4BCD3D9827679417A87AABC56F78F0F293B5D593043BF655
32425201645D7F687847FDCC81ABE093AB95FE0991905172A285935590095295
894065228D4DEBFAFA2658763C09F969B1242C38167E6E8D79C8987DDEBA7A53
6A271584D824F479B2A5E3C2B1E361FEED28B323F0C9CAF07BD06D4220FD4AB6
6DBF12C2103151EAEF99C9289FC024A77F2A76CA23BB517B4A3211CF48FED43E
634C5F8E12D8BE3BE7A5F17D25170E1B554D58338346526BB111BB9D85AD13C7
6CE72C6619D4AC2C52708EFA7C5DC58371047BB16B56E1C463F879D960647741
50117E8596372DD91BB9A7E32042DB490B3B2181C1907BB8CFAF532FC154E7FA
01859216C2C6893424506FBBAD6B9DCD3D1545E41F195CCAB92E4311620EC9C5
47B9E73DD2534FD2B38BC481D2B9A78DBD81ED013E74F3C2610CEDF63291B422
5DC5CD09A2A9968D5D10915DEEB0E370A3656C08B108F1898F30FB958831B54B
EB658151B2B7870AE7F5774E549B1043D29FAFA2071B911C4040D6C6D07667D5
F732D2096AE43DF26EB30766DE371D61C7550C7A55A9F6472C3A035BF27A6FFF
555B6889E8B99D8EC0367DFBED28C448831D758F2944B85D22BFAB794AE9F8DE
20132F12014FD02999D4182AB7A75338575EE5382356162778E767F689FE72D3
AE80375208429CAC1A913AEBF553481E0FDFDF3F6E03A90ED01EDD1A46782159
CD5563007121934B4283C233C8744FD5EC84144B2966F72FDA2496CBE9C0A4DA
DC99FE33F7A0546990082456E330B50F53F35181F3B7C42061BA2F2FD0005ACA
9B8856E119D526DB08A6E76DAD2D24363804DB055C7EAF2A705537C79255B916
2798401D796406D95B57E3B09F294C90FA0D9A1947CFD64DCDC36B9F32AB7DDB
0E7ABDD615DD2B778438FC40CFF01DF55AE76D70C29E0414BF61CBA606B4F012
1245D3D26E2F6C9B71CD9009E9B2E1E9DAB2CE7AF67B84E7F8F47EEB6501AB67
21AF187A251A55BC1A59E6D1E85AD9128107F7F3A46C35FED4D380574B169843
7EE499A22DE3731C0464EF7FD20EE5B91EF3C68E2E6603C1BFEEC9B45CD295BC
3DE38A1D985A619FF3CC94CAF6B3E04AE84F5F5B01D1E78DE7685ECCD97562BA
31A3E7F16C3E05576F2090FCE98EADDC4FA21FF0273050F7AF2B36E4F064A17D
7420A34299B5ADD5A26521C617D4006D45BDD05BB8657AE9CC1CC0BA506870C7
FBAA8C2D1D53AA68E3E2EEE08D827296938139D92FC191D82E4C67BBFBD3CD3D
F51894BC50E7A957F182F9275553AD2116E819BCAD3D462C7614A5AD47110533
56AB97B7FCE9C6BE0A6BF6E2748CA5A8D154BA414E4F62A106DA978151F705EF
FC9A191611648AAB429CFE9B7105F1B7EF79815B394A46539CE00C64EE562122
7905EB7716FC7650E1DB5268DEAC43B107040009130861D974DC68D4E0F2B6F4
8BA251E00806A73D03794DE47B279943CFAD4989537D321DB5621BE2BB042A97
301D2FE70F509160C6C4EF075D30897740E4696E90C592272F3B2EA4CAC3FF91
A2D483CCDBA890E974DCC64900E0316DA2A67A1B4C6A3500676AFBE9E4336D36
6504FD9D704040702D88A815012EA56A4254B98DBD4FC5C2DDC54E4876840C5B
00585D8BC10F029D33E9014C637E3C04730916D0288641ADECF146C472471828
0D2C681E88F5081B7E6B80608FC4919911B945DDE480992A8D081F67125D3750
E3B00171C322102F98DD2B2604BE68492FEC6A122D532233D18D088E387D5D7D
631877BA6A559F5D0EBF2C8F28821412D013F4D436077DC26683BCBE92BF8DCF
C8421659240BD7F6740E50534D3A59464D02347582024CDD4DF5525B5EC730AF
8876015FD8C496C7C553E43D48970E35C194A7CEE317BD962C117F61ABE499D3
9C701747F05321A37CA45538F4E089281E38378B7674C429EC7A0085629A186D
57B74D8268BEDED04246B2492652DDD3D3E792919A8ADEBD17C734D458EF614E
F1A550F5879209A771847848C9EC8D98FD54FA95EF36B456B0FA852538D9824A
639FCABFF4EC3BCC994CE1FD48E705F80B009AC8D0DA7E1B7B1B1505B3F1266F
B8568E4BFF0410C07750A68B0C4E77752D7534C5486448FC06C0E9864EDF69A9
A71CA5A64AD5299FDFB684C2B394C2D257BE131378DC410D3EA93F7350EC9A1D
1896E12B9110DBF6C62E5E39237B4FE3C1BDE2547587C69CECB7285F17A62BE1
B162BECB22CC4DDADE2E5B22C76AAC2E22368A9090246A4E0A5930357D3DD852
FBD3B6E725E5C68BA7199A34937B2703445943EEBFD15EACF4EDEB082BB08119
5A9A62921B641CA1C99EA71DD754791921DB99736512F334D416D2C5C94B3E9B
0ABD4D90707F1911D954C19F3E7D54D2C5A6841A699068A6E722818AD5267827
FFD9D5475E70B34FB61C63D7A61D06E65B100C83B4A5CA586AF6840A70C3F714
AD2D89957081A06614BA4CDF68745DE307D0295B1F691006B721D4AC4086C80C
4B9DE7E837C513D8B8D45D316F5A88258726D240351867945620B04790905077
BBC7B59C5C42CAB2E88D277B07A664B44221BEDA0C08CA5DE1FB7C2B76070982
71CCC08B7A3D9546AE17060A9DA3A3FC071E413DDEC85019CD8AA181D8ED512D
024828F35A0EA9361C5EC68D6FFFAED2CCED53BE8F8A3D7F7B84C1D9AFC8EDC0
9F9F603A544DC6C413E794C860FC7D9A06F270049F2E385369FBCD608733F354
C0997CDA8AE5DBC64C70460B185D76230125CA031521486AFF42506F58AE38F8
EF515D43E5BD66F9C199825BA891D73B18DF12D887CF316E2573D900D9DFF18B
A8F88D8C17CE987A826A1B2C52AA6DA4D19E98F77CA0C8F94C5BC9BBEB32B40A
87AD74EF10629CF671186C46B1AF3B0B422A7C066A69ECCC6AE970103B81AE90
DE783000A3C195C651DD357FFBB19EBADD6D7137692EC8F71E34D7D27A0F9154
358A815ABB4922D13ECD0A9FDBD4CAAAB4844A6BD08DF39EB2D64BF297742A8A
D1538A81455EFA74F588757FDDAE3A924C9A019AE8A8BC5EBB0E309DBDC1E603
1A2E2B2F18DE3F319DF17C2DDE690128565DC877F1189D4E9885A454BFF18303
38C1E1A9A6055C1756EEDCF1F5BC54BCA3800F83AAEB8F3D60AE5B120F1638C5
C1D79474385118652EB37CB7021F80792262A4D2F2A7587E9DDF654C99C244A6
C28AB09DE557B0419F1300384CF9E1E6525C7146F0D21AC85321247B15F99DF8
EDD3AFA9E40E6B8E7B65E9834B814F868D2E57F1E2B7891056E6CBB3D74B2F6B
389C984250A009DBCE0274E54251DF046CAAE508603DF363AEB794C3246388A4
C593632DACE49CC77612D73026E7CAC0AE47A328EADA8790A1A918750549B4E5
165B07CBB0C201C64F56CF4A2E94A1BE9F45E6E8D1C6F20F9FF05574C2DEE4C1
E6759B0E97E7491BB4B94B29D81EA4F46A407AF567A2C60E87DB67A78F36D2BB
DAE953913CDB8EEC991A547B00498B2511A218297166390E90D0CBE9889B00D9
4A568BDDA908C412D1709B72B76D37B0B1E7A6CE89EA7C92E0C6845A67E35B3E
D3BBE7873693D1F4DD5CF4334143AC14651252E8FD29AE3F66B3F6B8905965B5
00B1792D85A0B49D9D52723973978407590171D631AFCBF1405E54F73C44BCCD
B59A69B1A88F159E8938BC34563BE76D818509B9090013B3703040CD3099D203
EC01A347AAC8EF82134EC41A4B6807B649CE4CFBA53477316D1FCF91D2E3F306
0B31A9959CEDBA2DB64F5E30E35C772CD17339A34876ED00CD2D8E6FA87EB2A5
B2BF61FC822191EAABDAB5B599C783CE74FDA04F0E225F171F6A5A1DE41AA41F
C661CC1B10B5C834AA5540993E20FBDB4B11CE8BCA14B575B75C773EDDDB20F3
366B0C1B703320AFE8E52E58E3A0A038FE7B139B65F6E5571E7997ABF7A447BD
F55731E6B46685C49C170FA3FDB5915208CA9D59E85A01FC3464C31224CB1A4C
5A10DC4BB096DE59622A2E892E40D8182BAA2868088A2748887C8264C3719FB0
1C7E919E8F535024260AD3F6C8D7A2050E4614094201841AD59E1403C723969E
8BFB03494DF61E79EB3C337FC677A0986126209CB98E32FBA3AEFA908DD6C5C4
D93179509DD6B49AB0AB69808592A657BB858CEDE7AE72DB350C1C1CBE05B8AA
9C3CF37405D575B0E50AF75B448E7F05D2FCB11BE01CAA848811AAF0B2D2BFFB
94A610FC31D10C0815C005012593DF513D3154E07738A2E39D6AC9429F1A3592
C184414283FC7AE67D07BFD4AD7D7C4574F0F0515713AFAA0F88D50CB5BE5F12
FBDBE6481D67434810D24D66BE3C87AED96C0CF9FBE043EF7C2E6706E752B624
A81654663CC5DF2D646F4B1400FAE8F91A42B5B0B117701A2B84A408B1837B90
2FDD6128A5B20EF2447A638DEC50EA812940FE84FF2A6CEAE01510BDF94618EA
6EF76031604C3F56EA301627CA163F2942A17BC94E707078F39B89C5C92223B0
34F051838810E0061972DFD30D38FCDD9145F8BE5CFCAD46AFBC882B06A6F3BF
FB895336138F44632DD78CB584EDDE9F3BCFB478A816790DF25A7E599B877F3F
190AEDE6EEE181BA5834A5644AA2ACB3A0EA7A16303B87D5CCD96CE6DC8331FA
E27A9DDCD1F8B8703354D98DC97A32A522CF7D1174B4FA0A06883A1C63C9E8BF
15A64EF273CA7BCE2E8C14A9A68B7852E02D7BA9CF50541652ABB13449FAC7C5
D48E63D1824BBF28D94CD7E0D1910A5E1EA2AD4F0A42C03FEDE73D284A22B42B
2A2D4ECC395FCC3181ADF9789BDD851434440BC773C1BEA885B87179270D3EE4
4198D310863CFA5F8D8C4EEBAE814F254E0C3A36CAB5295EAF0CA5092C9ECAAA
C0621CA8D16D9A2D6E64C728008F1B901E8F98CC3027FB5FDF1BF6FA19AF0E47
365E026E8A23629936D597EE4BFB4CB395A8EF1C4A4D04E5B2D67CD9A139FC31
B5D8C9649DEC37851643D63598A1EED3C1658FB377F49E845BE9AF729E9A0C23
3C037C40F51922832FB8D986D54FE7FC2BD59767ACED63CB5C25E020C92B3141
77FB9F9D9C8660E0B614B6AE8519D6823F25B7C6D8EC60A3B5480C9045F9998A
A0FF1D6E807A0C63E92F0A67A82EB1697DCE77D99B13B6A976926C8FF178E468
6BA7D7868332A1F8437C3545C99C45EC54E90EFC73F2E0198EDBFB8AA664CC60
157D6C497A354C6F1842B7675A72F581BA674312BAB606C1B4E162A70BD90247
0302C214D95C5AA6AA4F1EC6992BD113D4C2F5C4ECED5C1360ACA3D64B5FAA44
144D1AEFD2D1153DB1BD09729E875B8370DC4C6CC1F49335719FBDA253147F53
810343ACA26735B01B5E872018A436161DF8968EC4B6B9D97D66D6C5598B4B9F
B82792C65E11005C31165B322E73ACAF8696F66857EE14EAAC17BB1092985C4C
B324B0007C289128FCB0DD4513C1F1A45F3C57F9697A2AE214100F4F2A6ABF2E
45BA68467665130B38E68062C1331DD5A2FB62CFE1DD7EF847643DF2A3E240D1
5DBDC2983E4E2AF912BFDD720C903EFEC8D9E0C4FA1A092AA42FECBAEA5DECA4
956EA88B6567C07522C375C2B3B7D78A82D9D6D54932D5495476440B9864E742
BCB9B7F041BB229B28B167355EE60BA192B568DAADB21A1B34CDD5553BB34613
491AEA37F1412B967FDB5946FE052CB778EBA9CA845FB4903A22E40AD42B6441
58690ADAB598E41789D0A0A9D5201DE449CBE8F18EC5F9EDA83A3ACE97138A0C
8731BB6B7DA3F33ED2C6018958F09DA30AFB3781FD18427DD838E8CEF859F95F
25C76E0550B931C1FD77F7DB1FAD380ED084019C61E479BBAB593065129B1D15
63F77BBFE592DEFE85AFAD18E8D6020534B3066EACF337DEE274AE8FCBA55374
A556E4F8BD9CB0212B46362A4487A3D3DA45E1ADBF4A4CAA6941B8EF65393309
40373D3071ED24A3FE3B2B5EC4358DB980B95A2F77EC3E049D527B3C51560442
A175D24D6F6B59CC5631C2A4D2D9DF6A1C45DD0AE3299C87A1587C943D300CBC
D9C7E583658A38EAC821DFF17755D1AE1294C1637653261B1EB6D2DBE47EB9CA
9D1CB164481974924147AFBE2E6D1929EBECD716C6D7EE18FABC7020F8674930
8B73EBF4DC5A06ADDE6F83BFB368388BF079E53DAFA89A083526C79010E93769
E8CEEEBE3A86D363C1881B32304CC868BC844AC73D6F6F15F0BD762EB70A49DF
1FC205166D5B0C2ABDF81451F085A3E06A1F31341BAA946169CCF747E335264B
E77E6A46EE70E1EB81240DC30C2EC3B361A1D544A89E732CEB726F51AF524CE3
89010012898C781A33C18EE273D13F2C97458AD7A361512E05D95A3737194E94
47DF017773F71665EEB52FFB958D70206769D0BD38632F5A023AF5C24D886535
89B431FB84E4DDB650C2F783594DE128F5A58DD1A03FCE8732DE541E5E8A41FC
87E1FCA5CF797955659B27F949FFCFA845B0DDB5E1B336D9E76C12E441C1CC33
058CF1F5E0A40E54DC81FC6FC0B665C51654AA0C304AB31BC97E3429197CCF31
4DD4E347707DB167994DE2EE6F85FDA6193E9AA6AA1F71D6CC6FF05024BE7F1E
98D07FA0EAA53F7F0692078555CD448E1EAA760157F42A766E8D671C2E4E40EB
96C767CB780E9461B0A1A3588A1D7FCBE76DB1B80A91851839E362299D2C8DC8
5EC1A5E40F34433054D8F8F6ECE00DEDB53F6E2B4D03F514F02BF38413B74A66
B44F62CE6037CAE36F5DA3E6B4ABB663A052D6A4851465EE0CADB4999F76299E
CBB2E04858471DB8BFBAF1CA93AF7D1E446565C63612DF5D1CA75BC73E9CE5D5
4D970CC4BC9A73071C44B8097093E140A45DF5139D13CB5CDED1A9D574718B9C
7D0F068DC725B42AEEE769A1B5E37A4E3DEF0F40CE2121DB77EF9F56083543A1
10A971B384CF46722EB547C0A8C840384DE05E48AE69E8BAA28BDD04C97B3240
1C1E45465D62D6EDBE027F818822B44D2B0E98978B480075E65B5EB54FFC5964
73C373EABEC4664074FCC535458BDF077449CCC2E3E0A5268BE5BB7602483A34
1A59A1B95EA285C94FA6CFEBE9DDA8E22A42E1C757C98A71BE865231FC63F5CD
959AEE6271E6E0ED80AE07DF780C85A3744D630B96C3F941AAC3FA8AACA7EDC1
3FFCA4B6EE6149D839B53868A1205A13A71567B94B462CA5FD751E70531636F5
DDFE158B3D547E16A8CCBE3E2F0DC243CE7F0AC86244345171BCEA30869C153B
D5D38DBAF40798223F2A6FE2CE1E44940948009234CBF65CF0021B8A03F25717
C0A548876B711CA4C0336BE904ECD3154EC7661632CE15CAD67EA78AB7E80316
B269223DAD3279CD0143E3DC974554DF975D02EE5A6C6ABB57BBB5A58F0B98CF
5603C1E4327E4F9173350CAF80ABD84B50A9168D7982B493CB628C3E2551A5DA
8EFE084AFCC55658443F043F76BDD1A436F60D813CCA9747B045B7B7F73CA69F
8DC206AFE312988C0368F9F90D9C4536D71DE4847E1DF7D3A0AE2905B02D4C66
03B5D673FAD5847A7B386BC3B2BBF802622EB9009DBCF26038350CB40A29E7F4
15CB34C92686952D07C858A81B90C54C071D349BC388C6C7EAC72E323EACD8AC
1F4C6C5E861223A5C88261832DB7FD09330AA2A06E998BC239F96D24325048BA
CC9ABDA9206AFAA41951D9C75455A2200DBC8021642455DD4A19EB98ADE9E07E
8A292BD9B1E55D3B0E1E552E98758C479B3250A80DF1566211654375C39AEC4C
FDCAAD2A27588FFBDD5E4EA9EE9381554EB9F652492CB940BDD2AD0145278D8C
5B0E2D0AE835C512BC7B8065C3887E0A00795C3716FF9ACADFB67B23FD0CC520
310B3EF0414CB723B3506E30D8C09CE29CD932034A3C0C89135FA3E075E35405
74AA75C41CC2B831FAC8B35A70EB34886F37C2D18213DF56F79AF1FB5B7B7573
816388541ED991DC598699A435887E40BB8721E5EF326085016F9E506375D1E0
89C671A07AAD6E8EC29DF8F410C6BDC287987D5ADFF9D41C08386B034306E80E
79B3BC5070F40FCAA815EA4A53AA125977A5DF2CB7F1CE015BABC375CE430F94
0CE5C45CC4BE2A2DC0FBB85CA52B36DF9185827262F7E4CBE8483FF1688609F5
13BE2D59C7BA143BDE0B84330DB825457E99D0B5FE9818710792B362255D1E21
4C748010888BAB47F407E883211A17C5B44960014C492C7B95D693D287C2B543
AF840091D69A3C1C428F1C5A0E53471631464ECB612BE19C84213E7FF228B69E
191A4EE3BFA076C19DB786990F5ADF4BDAF4FA2F4117249E3C5CC1170476B17B
CDA45C640C583F16DA2070280FE36BCC9C001359DF6DF52D943BC285B007D113
5D8735450BBE8284A94B09C4C5A7775E06F878B31E23B843E0DB1719B7A3E94B
03F435E97CF7249C046DEE5361405D80E24B2414C3C711D57EFB88AC4D4727ED
8BAF1C4E221F54DFE48045F17F7E6BE993CAF066ECF32CC60D80B16EAFBE43FC
7E8CE14C9FF3F74C1B0DDB9AE68ECA5D5256635ABFE41D990013ACC54854D0F1
C98A2EFCA1A117133DD39BC60F687306A10235C5659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44E2BC63B29B8EF5B8C6E1FB46E5C40B1D2D23D99FAE30412FE
5849011BD76FF8489964A7848FC6F3CFA44B7F546778F717E6E7FFF7B1BFE2E9
8D872573C86536F65E6207F12849830F0CCA08D642BFA26B23ACFAB65C548529
33D13E272ED4423EDA32801D0E9ACBE1FCDB7E7C02D08DCCA7C8F8272B4C34FD
26058AA9E35E6DE5D8F2B1B79D30C739477EB1F5370DD1D26E6DE100B060B7E5
7DA89AD6487438F881BAD3820DCA4D80B53816CAD6EBB15599E09E98FF2D21EA
54A6EE74BFDC1605533D0595AFC189DBBFB6F69A02396E9CFA7194E6A6D65A31
C5F65C6DDCFE51AEF22EDE240535D6E3DDD6320818A0F64D2E64AB21C48283DB
B70001CBCEE48C9E55B28A7D5316F2E735345E46A9DB584512C67218023E2A7F
803BFC7ADFCCF4EBC3A4A3B80E49278E2578ACFEE9C5FD910F7FFA99FC8EDB02
B3CDA24BE5B94F4D4C0FAB79CD0D3E7F8D4383F0D0C7FCD6B3EFF62720365C47
CFBA06013AE172F24404CDD6BD22E21526C8F1163A9AE6FE4AB54D1A18B0A1A3
186335058B4FD59DDC08754DB27DDCBB4659A96EC124BFDA88224248DE66B6EA
DC06075339D6A5222834D8F7A8138941F7BE5AC33FBD8E3A9B03D2928676799D
ADD1A6BE6D496915CDC4DC168BA6563FD8DD094761C0C5196B4E9B525D823EF0
7AB9AEC1EBC5EC542447CAA83D99140C43040D8CD9170133274256B42EC01BA2
C8189D5556B71345AC51FFEC96CB9C4E4BD0B8F9C6B3C6FB075F188A9FF4DACA
0C373CAE814FB2C017C88E478F892B195D82AB304A5261DA7BF1005C5B8BBDDB
702DCA151C8064D9033EA065C399470C26A56214F93C68C7B702967EAC7781E0
696C53682A5C672ECE9730106BDF54CD65BA5EA2CF6BF89577B3DE8887AD9F58
78A177C19ED7BA3696275DD4BB32D039729EDEA221DE3A10290AE7E3E0B28CB8
44485F372189E045D1FE549E468E75C6998D4B676F067372D35167FB9CE72FCD
837C334A4C93AAB716452AD5B327EB04EA48C1562A2D2E388A2E3DFD4304A4C0
87C78CB30A2F939E91725560730CBB77009B860E4D9354DB138D1DFB4B34EE3F
7E5DB9C8928D4C87A78D2B18FF45D561A7421B35DD729483444C861696BF2825
F6B1C374163F8A862DA5EA4CEAB45CA7AF8DB57AA514AD6BB9A0770C242394CD
61F371B3FAE0E757B49F463D16BD14D169EEAB36866911279BC4AE282B4D5758
925D92B17F4EF4C62FFA6997C407BB8598FF5E6CA6953124C02EBECA2DB7F628
FEF7E2E78BDE24504387A9823633DEE9935258BECB11336B431223A1F042FCED
F3675FF1358FD0CE5007882E7DBBB0741AC2E477F3CB63E8EFEB81F1ACBCA878
9AE0B836292B8A95E106A22C020EC8663BF2A6DB8539E5E475846DCCC532A5C7
1BA731284F6F83DFE72AA606EA752257AE78D85B34500963937AD9FF4898D970
6D8C0976FB28938E5C5B2532FC888C867305AF5A185421888638473467FEFAD3
60B02DADD1FBBB32327BDD3A7987A01414D973F91628F4F5216AE214C0FC7F7D
EDBD23C75257CBF0AF28650890ADBEF2B237670C8DD6F9E2676A7EF904B019D3
B6AD98F74FD037431B85E10F13A589F452936A798BADF461C448C5480CA1D5C6
798A9C3249E5D0562925E48FC2602602015860C8B4C5C9A9E83CAD9B0122354A
3A3206B8C3FF2E877CA284247C7E87CDBBBAED54AD33A1B99E68F51AB6DEC1CD
3393B83B95243F7D9FD8D8EB4A878F25A58C920D0FFFD6FB6461E36345800DD1
3C04021FC924C88B19890571C608235104A069F98767637093A0A313F94D827B
17639E8AAC154D56E7B46811DE8564BD4560AA14B5EA0989769EACB16869E262
B20B2AFAFED6297405C31C5613339F247686CA619A4E3D4548ABF704B7796D9D
93F26B3D097419F3B949AB5D84AE9D5DA61865DFDE675D073F415271514ACFA1
9D2B9D2E291B5D607BA2BE87050F8AE8EA728056655F9D9DA1ADBB829E7F1AED
D4A9FBA8B9100A312D9C639929B0B61C7E40C2856F95305DA3463DE0918FF072
5303F1587FBCA0C6BA877CEDC92F4840D2D619A4478F48AD107054EE92951E4A
202AB35547806AB267581833A721D174A65B51E3E8A909519F5B370A3B7785D0
0C79714D6FED70645D2D05E49BB9FE1A1AB7654340A35CF347DAD461CC835B90
D8C43D8D9EB8FD5D522841E6796F975C7BBDA4F3812CA51A5B36998405E017D8
C1B099A022012A4F659E7E6F991C74A0F0666B13E89196C909DDECB85A84440C
8EFA9A5222155980DAAB0F13DA7DE1C67BDE0D385104C7C0730BEF94DF3D9BB2
161D234D500925049188B9D91BF76B2C66F566BF46C25E820095DED21E55B42B
6D4AED6EE2091E33FE3A23E68BEB58FB7E4DF116E24E0B2C3DACF2BB4D4F11C5
FE4243E292A9DC31DACC0163FCEAC4FA882EB97C873969EFA04B5B7BB786AA64
15ECAAE9802FA36E4096D06B36932CD846F2FAD85D58F4F20D8814C3C4F34403
C404C616BA3908D83CEAAEABC52E9DB146BAA35A47ED24504A4A53A7206B64E0
82E2962F80A900F0E718CFC56D24D8341F687ED94D1FB642586C6C4EBC971FCA
8E77C05424C910D0E8EED734C62EDED4AEA7AF2B3C72517B86514F6952862F20
7136E1E16B417F6724DC0536502358BACF8910AF58012C56EEE0E6467F63946A
5E8888BFE28466DAF11DCE29A6443914C79577928B79A2011DDE2CC5C2432BC8
32B65BEA5A7D0E8A5C1FC1F3C7C84F3D397E25A739C61C084465A5E6E28BE982
5F660A978A9DF434B3FE4044A5076843847DB3EF00FD23FEDCD11AF3B0AA0605
46604C3DE7434737C1D6B7E36A122623EB44F98F4A75FE0A6DBFB7E341A6618D
70200793781FD9E446706C2C01AD1AB2CAC126A8F670326608F932BFEFDD099B
0D701AF967F128D2D1F162EC8DFC1AB8D33CC629770EBA4B33B6779C1562233A
9EA2B6221D42714C043A362F2871ACBD1C52210EB2073CEB06E0D526B949F64A
0CA1C46310F46B7B5244537DF81FE7DFC8F110D26FFFA12CFD0E9247BD4F2CE8
94D6189EA6007A18097B59ECB9ED4D16EFFBCCFF0CF648981BB0F88EE2084C5C
0694D0F15976CFF33899E6EC7F3B3E52F6600D5BFE00F867731F2800A33133B8
B9AEF03A70F4AC6C6711109CF830861756F6EF6AA7804B492DDA742E277604FC
A2F0BBC8221F5B71F51DA9B563DF30F06E69DE53C80E0DF4FC740725418AD8CC
EA562E4CE72ACC8E9F3D640FA75FC5FB483282D5589D95092ACA49DD20204161
777ADE111CDFEA91C7326AC7FFC2A65A633FD0288061CD8101305AED22847F85
5960CC952649426FBD46FBB138B833B08E86B537A0CC012744A4BEA7FA46C14D
B12F28DC00CEE62E24242C086E4EA3AEC2AEFCC287CD3F1AD92096E11343DA82
6CF72F2CF8A3B1917401172064F28E401BD8C93AC879D09B84723D7165159E39
2DDBA187B24F600022230C44DE10385510E5B4A09AB38631362368DA33DE6164
7C658E8FE1C3342AB140E6A50117FF164EB7200CEB625A2AE48E82992E4EC72C
1A62821E2E60EDE3C647F4686BE3DDEE56D4037C0138DBC5EAADC46C2D544DA2
5B576B2B7D120321C1746BB08B22018E76249CDEFA3621899D8C72270A9A4320
E8DC181020981DDB8E52ABEC6BC7453597A1F20DDDC346E1C4E776557BAB02E6
ECA5BFC73C09D36274C91F1149C89024DA3E3E06D4DFC5B79E97D0F275210048
1BBD994D8880B4A972C6C63270F82264386ED3307C69F7B4EB8C14B2A4EE6C76
613B01480A897882971D1E412CF0D484F10102769005AA2E661F613FAB60D3E8
1A470B2D3D7F7CC5B34BCB051EFEEF330BE6416F23375ABC21FFA5118C6B99FD
03A2CC1FA409A16AF593B870755F4DA4B8A46C5A7A31F4D96C11FF0B3AF57D9E
AE465FBEF66FE82623DBED8135D5D29A1BCD3303017DCF56914874816B3D5FCF
E77C6985441C2885412A6B40EF8129335C9340BA899EBE5BA3C095538CCE37FB
2A85057E484FC90BB66AB20D45D6A73677F2283D3280EC7A1CEB5D36BF34CE29
66F3D79FB6ACADEAD42D59B27DBF68446739878B33D6F62F00B8AF2AD2A37AE1
B5821B0B3A7DD13E4A0835A85DE0162894FF69F8EF9429592B6D38E9CB6A8DEB
B3097E6C8E065E83ED4EA71DF17A929C8CAA066F41264F0AC879A67E1B0B621C
D8572B3C609C9765A36B79DE786773EA72EDB7BAC84AC54B45CD255496549939
7D9EC4B765BD8CBD6B3B3B7ED42FA41F4D8CAC2D4B349F114EDFEB77FD3A1805
3FB4700B973C38242B79334B7201F7D048955B1E11897E08E5073535DA36AB23
0E3D91EDC1384F92AEFFB9514764C866F243547ED3120BF4959153CBC63778C1
315F63CB25787A6274027559A8B3843FA9B8567DBA5D87089255A3D663090CFB
23A813B41D367322EC59C2DC110170F71E11DBF43D94B529C26FDEC1091203F6
56E53A2F2C184DCB96E253D029B9F1ADD6A5EF82D27AC66A2F9F5E582423BC47
9FB8FCFA0A7086C7599953AB3D786B93286E950452578F7DD5B3E64D4A9E9491
D2B9777C5B5E1E1C5F4D2C469DEFE3F85C85955800D2C378CD2A88AFEBF38541
AD1BB12E1C38C34B695E681E5187C873F7D99BFB580F4481CBC0E5EC84A3D905
5FF80F4274EA1D7CE4898094BCA694C00877E6BC65EC82F51E166CCA46C1C88B
F1A9550F9DA16C9668315E9262C1401868C0121B70EF238C02844AC734942703
4E40FC353B2D901A195027DB020897E28DA4C2E24AC43738F84207E6DDF37D15
B6C6036B78F502A37A0FBEF817DCE1BA47861F28DE396A0028B3296D6DDFD72A
DA2801A8E30DB23389FF2FEA91C4C9ACFA21C3CA9EB3F9CC21013C0AFD467246
E5CF24EC08A8FA2348D271D2A84CAFAB1A9799F52FD90877BB4BF16337454E77
3DCCE965FFDE0940A91A21B463D183FFFDF1A2886838CB11B791158E1FB4FFC3
0C31EB3798F89FF38B30D840296AF48BDC8BE43935B8FAB6FB28233EF1F63BBA
8FD108ED63891D07E7B6A2CCC81FDF9805A2BD17BDE539B8BF0673882164FF2F
57FE5DDAEF20A93FC661C55F6D7C5ADF691D4C163883BB2994826A94CF39C0F0
37F6F37D978D7F85C94B7E8E426BA238743697417A1B1BB360E7A2F5DC169BF1
BC3742769E571C864BEAA5946951484CE9A1EDAB97EBC9A98A7A8F8171585AA4
3D3D03B7D1CA4CE35D25CE63FD481EE94E2A045971D213CD321AA23AFFD4624B
31622A4374FB97CC15E64265BBCB7D99B5BE7206A05899F345E2AAFA6BBC0B67
F9079A1B18B0768FA4C03A720CDB13A9FFE780C50EF6322A8A21DD980D540792
F54667A6C5F4E7C5D9DD58048A0B30CC1FEFA6199BEEB0BA77F0775C5BC42A55
7ABA8F98D7E9EACA2AC0C76AAF0F8BEBC9431B3EA4B6B85ECB77E291383000FF
247F94AB45E9ACBC7EF465E963B3FEEDA68D04660510E592C567EF82459E96DA
D799DAF44C46E264707EC61AA529E09D262A841CC9C1CF25413ADC7FE82D1819
AAF01ECD8FA6935F93674B0673F92A65ED89703DE59845595B00FC1E44277A74
F9B7387C535948445CC758C69B69AF30E4FE9E47507707FF9DA5ADB8F0EE8F6A
E2F26DD29830181D5367EB1710BE4A45D685477846094B31F055C72E797DC56F
36B9227F74A1687F79A4FEAC82A8998C0204D4F954529D2395D6191F32845317
3E18C9A4CDAC48A6AC5F13A0DA96A502BC592C6F8538BF2165007B7E87BD9D40
5FD2D2B44695579D2A9021E72525FE04FC0773FB7E1D9003B60DCA42AFC7E0EE
FDECC147AD5578E93BEA6B23FA0D594B2357764522C45D0CBAE84F59A616E6C7
6EEC3CCD961C8F298CA1902F491E6E335279F10892C88B3F789DCEDDC81DD1D9
74B0C13DB87ECCF77625294715EDD1D2F09CC7EEB5E3869209CB0FF2A2CC43E7
4636F3AD561C22720C0C78F40D46FFD5B2E65600C80DDF01FA8EC2B94DD3F90D
59F1CCB0912BE12FEC30DB993158976EB1FFFF652AA7EDB6BF03634341123E5C
A48BB262E40AED9BEF61978D1C0B4418FC109D7699001932EBBE87412982ED98
260DB84337892A232A3A1E688B83FC3DBF8AD7C69616952258C0FE93CD557B6E
7ACB7D333F42673236CD23775C4D33214EE977154927F97628D0763D29644C4D
D89EDD03764A886747BD1DDF0C56D2BA34D23D92A76A55B20FBDC8F08B4857C2
B99E52AD0DA92506988E9727FE6F8AEF5969EFF87EA400501A3B32379E4A2161
1A35FF2E1FB51FBFC7B27C86A5A58A0F460835C3009D905FDDA547F04F0C596B
99077020341D0C8FF4AAD87F3FCEBF2730D812FDDDD016B803C38B892384826F
F2924E49D59702A6B3E394C790FB4FB698F2DE0394A2C774B5830C469036ACDD
BA116204959F428EB91557E293F4430AF3A4E3BDA695AC6822C4F42EBED74367
C7AF5767D18142144D77BAB2ED0A4447580C3A67A90C120990A6DC46095F6399
0A2987AD269BE37E5B4172AD41B6F97E6D81A8EC8E6552F7FB6E93CB802BC120
A509CE43AA4AFFCF9B24F12BFB5ACFF56F83143074FE248D55F982D08372E401
1B795D20E756581A7B97ADB149B0E8F2402F3B4A92B34FFB6273EF4F8128FCB1
2A4F2C8D137FC62943FB340911E7F047483587D80D9983E48F8F66483934D822
4F50981EB928B80AEDE3F65A005A1EDEBC942A80ABAD2D84FAC1670551CB5E8D
1A684F442467FF1CD29D812614C1F99D172A794A17867D80B0D96A5EE961480A
4A0B600A4B471390711E0E9DDE263C73AFB8E5C41DD72B1C9695562486427C25
BED55752F724A017D40D6980624038186B76DBFE9991476975188599D789CE1B
95719560247100F68FEC79A630D54D210461A17DF138F3D9F5C7AF9CED424327
1469E84BB27AF07B164374998F867ABA7A5DFD196AC279DE87826A640F93FA57
4D3425DD12DEE557D4BF8A3039EFA3DAB5FE6DED172EBBCAC68218092F4480C7
CEABC55A673578F5C71C37CA3E7472AA4C4BECAFB5A871159C693325D27CE765
2AC2F3BDC21F15035FD177E656D0718DC5DAD9A20CA017FA6B919DCCFB5393EC
2C2FF189B3CE6FC1470EB207D088EE8EE4F0BF96CCD0A712E33407446CEAB962
21D7B3F4342FC748C1CCBE8FBE932F21EE27EF2B6C1E47B0216326BA8BA16ABD
342E796FF285F008E8815DC181F7BCB30C277E49E99BD415F2BA8BC75D30E26C
32688FD0F2854B1D8E69380E018F050292EAA705B00C37193BC60FB9D2AB7CFB
ED4E1C87E0A69FCC925C5D253B0218655647D0F2BD8BF8630B15C1FB152A9331
3C6671AD7802A8361817AECAF0FFB61DB5F125CB8FB471C6F5E72F88DB16D83C
A1303AF45FB453BEA48C141A79C7ED32B2D3127E3B9BC63324D0AFB1A3F562C7
875CEC5973F95AE410E86B40EFBF0403612E9F6BFE0300932030C47C025C724D
B93BAC55016AE06595134739401B0D8ACDA77AA458943CC119D97B0DD0851E10
CCCB8C2EAA9A6E644A2B8F2F6C27950E15E921950F29B92446646F9533FE1E80
F0E5F15897E57D9FA6F817B07B2B8DD8067A8EE703F49874F4FDD5E7F64DD173
EBA8FC7939FC5759EA57187011B9B064801D47F412F69DD4ABEDB379F0A21B75
F349CD2C516E7E2D1C8C2F3375AB4853384674E1E6C8B3A76A5B5B1A72FF24EA
CCA36DAC81C30C1840FFE2000097F2C755A7F47553C52D51B91D09F501CD3943
8E4DC63C15F8FD1EFE4ABCCC1CF5880FC66196E81046CEDB8A3016254440353B
884F17D58D91071346D9B878014EF8061DC5069C0DA5111A092D1DDF35FB17A5
1C46FD651A9AFEA170533EFEB1189648D68EFEFB71B0B0E6E0F98D758E1F5808
0B91D193781C39D765EAFEAB208E60C27462CE46FB1F6012B7C071CE804529E1
E05886CA1A6425666A9106C5AD6BF0B020F30A24624E8312033FC5E8E8539553
6828DA89CD9B06CBB25D9E59C14863D38148F0F7F963A4AFDAA2C9BA15D78AB4
8811AA2648AE4D4F7A63F67DF25D0C1F89F40094B5004C50CC7B3E00064E606F
CC3B5897959D7DEC4AA41515F979056CAAB4BF0459AF5658983C8D8D8B1A8028
B073B5483126D350A9DA3BF6EA15E261B2A5CD7EF223A7A8A8D2A30C4DF1F7A2
59E075409BE5E42DAC8806F28F4191E7D48C94F67BFD060EE610D0B11597E841
C9FBECE72BCCDCEFB7EC37E53EA6A52B55BEAD471DECCA1154A9F933A55F43A5
7BCB334BFB0E8CF029D1C66EB4EDA345525FD4FCBB4E5CB711DE81D1AB042F90
8641625F5C1C0C6A364E3100A357D106325A6DC2C8F811AC5FF0A590473E99DF
A97D901589C5318B39861F388983E560AE31E321A14D78E952EEED8A202AF20E
722338605C1F9131277EFC800D5737FEF579DD98C4E4082FC4949E9D7C1D19CF
976D0581EAAAEB4173E835DA12E48CE6DC87C20244698BB756D8D9BA458A0FE3
4ACAD9E23F72E3F5010A9141AAFCE6733B371BF3603FD02A5266E081EC6D193B
6D602E72BD1D95281E7B097A463D1F13C03AD805AA74F65566957680618C923B
ABB9AD79E0E28FE4D056969AB8C04466F6B2323849E5A87F58584E68DE9C1D52
1D4C22816E43BBA3EE96B446C0FB30594C166BCA70A7E3B757A813EE59719A1A
3F8E82CAB571ECC7D1A4748FDC70EEF69736623AABBB57C4585DA90422F7D0D4
A260E89C22AF19C8DC5C4427B7A47FB1C052BADA835F45B432564FF1771CCDE1
EA43EEDB95553A9BFA33015E2AAD43014458173D0D41AA001996CDC94E41ACDC
5940864093956F11F16944AC9979EBBC93E9C7991A8EA9B6374852403126BBD1
C9250EF14606E0627AA07F3CFE2987ADFCF5EB2BC4300059D277411882F5E3D9
34CA9257D81513BDFCE05E7637D1EB32960BADDD124FAB08E909E7D9AC7D0D88
16D3766F92298023B5A14A5EE325D1C4CA5023439EC5180074DF45A0B3BCD647
8ED664774225E83D3E036A90A20331B97B3FAF26B96747A8E7DC923BA8EF6C97
928957B7140BC87D3DDEE35065C08210ADC030A310D65EC9A60D71CB142EA381
4D836537228F1EBBF10A7E363AF0872A69FC2B4A13B3B4891F94E4829E3B4E99
FDD201961D60264AC709BC09A2FD62C42F238810AB66DA0E39D1B1DC5671AE3B
FCC75321E144DAEB768A107FD11D6C0950023A2838B2856305810D0B9F73DE3B
805A31F7B99055A62E3C709E9102C9FC4C68FCDF6949852B16E2BA577A49F864
7BE25173D9C0204EE6BB408D004F25CA8EDBDF7CAD315CAA69F4DB314DC26ED5
B60252DD152E0A1C4A453534A7FECC771106BCEDED5735E4E116AA0593A6B0B3
588774961F6B7D313B850AA4B368E48DAFAA569A96D4932A5E64E2E417C6B64D
84B19F7C2D7C143E287712E79B0F792235480A76AEEE703987F37CE218FC019B
72F56EEC9A7B23CF1B52822FCE8DB0BD0A0EF7B9A98CEE86869306CB4639D878
6634C44C1FBA9B854899BDBD9937A6A423C7DD79831FEDD65BC403AFD0A9A11D
8B41BEC78465ED7103702AEF74973F6FB697E645E902D6590A4ECB74502FE440
D7EDC6EBCD7DDA80A9339CF2F274C27E6625E91784373071039DAE7A7C371725
524E98E05D5313AA0122DF71AB6B4097497EEB38F02E2907A5B65F454E7EDDEE
FB9EEC6AB8D0F2DFEB9712173824EBF17722E48E290AC72214FA5B896A005086
494D4A357D8E92DC86C544D36FB6F2A10673E3659B4089C8AC2C69043210B6D5
D6829A6FC04838B81829312A11805A749E55267744E046627E381FF09727EFEB
B52E569A1F0998E85A0DA71350E6329E3FDEC594AE623932C75D02FD9643E7D0
EE911FFB2BA587CC2096922BFFECE7F2B6BC61B5DDEBA956FCE2E68A777A68F7
01754AFF774CF12CCDF61D16E730B31ADF4713A4078068790F2504367DE9DFD7
A7A5383D04D414EAE8653D89B6EA0D59D1D2749DC0E81C20BF1049DDDCF63293
AE7546D24B219615F18E34D7EBD59AEE13F65096A8772EAF8A042548F1F3BB2D
B772E5DDAEACD99BD0AD5AE92EC6B32819BB47424FC3B3169F17F3DBD445EE27
BF53C0FC0CD6F20587CD736D9E7C8340E005B9A001B85213CC2791592B9E99F3
A024EDC143CC90E7C91626F47FAD5B6DC764101CD46FD706DE2379B9627E0488
9B3070D214E9D9C28F0D01C7AABF1EFB7274B93A118CF6A6CBA446FF8A7610CF
679CE0AB443A4F47906AA52961210067D86C1A083FE1FCCF75BAF0363948385A
E602F434E11424C75E24F73AE71F702D4B0209BE100111CE0D9715C1F4CA16C6
B06187E2C94B42B97E383CEABD7C19C8493087F963CD88E487A6E9EE936A4F00
343926291ED3658A381D2F47ACA9AD34DF7CC975E6B2C9553A6B853FACB21A26
D30C5CAD1A173FBF48F6EF14F34F4DAA39C67BD89C5CF33F50F046EA5EAEEAE0
BE8F48C51283249FBB07726A6D5B163BE4C834B3CD0777036E724BBC344A7FF6
1D185F6A2AE48B01321E1E6C5140134A6876C4CF65D35621B130C7C2C43379B3
8C4E7AC70D22C977A195550A99974F04DE3F7B07CE2A80722D6E7F96022A70EC
72745F86884EE90B64BA977EB5EC650E1513F4D2BF5379B7F85CBE7BF16A37BC
4204405747A43A1DDF398540012C270E5C07283661D1CDFB656606D4B19796EF
4C2BDE8DCB2140076991F5E152E56D2803F2CC212E6BC289D87F1EE28196B210
23B88BAC67D9095FCC6FA89E54A1248790B5CE4DAF8A552BFD6635831BF4B3A4
BDD20B7986D0A6D6B9F938F7538AC435CD0C12686073F57A47EE2E000089D4C6
58FD66E16461FA25FC161387F7A843923E94B63C528473A638F4BA2E8A897172
1F7CD4629EF651D4C9E1612E3926957268215B54B6795A2E1EE8BB1E2717782B
9D48AA3EDC23718036E645476815804731D2FCFCC57344F7F087692E1C04058D
4CF7929FDE7DEF7F50452B70912A88C0F5682CEFED9700412D1C7BEEA9D67402
3E0525FB45702B5FA8590B6077AA4C8B1939A6DA38FC5FCA20A0BAB7E0C402E0
F48F85574FA49D021F09449E9806865912F2F308EB9E76F80CAB8C70FF104019
12769B4360EA87AD5DF1DD0F845BB2B335327779649370B5DB92EA1DE3037D42
48C53AF6D9FA94DAC1E152DD82B8C7B7C3A79117F4F7C7191DF17EFCF68D0DD1
F59D4044FFA236FEB54638002B820B78D2CF31B60727F4E0F87217814573BAB1
985E2650F88B334D8C4466FB35027433F7A1DD0F825EE024168978445A4D2DEA
DB7FC45ED9ECF5351780DBC1C16E57967B594A214A86E6D40FFE1A8D4CE80991
8AFD7BB757B5F71434411916CD8FD9F5EC53A7C025446FE59BAD914D331336A6
33AB1EE7ECB3811D95422BE57E5B9BE2058E8FE67D42B2FD3584C9CA814F4908
C6257C7269148547731C698C96461CD3377355832BA61353C4BC1F0352C285CE
B6190C2FAC7150992698FAE7D3C9FE9E680A38B16C41D838408613F0AA950D9B
CFBA35B95F19E26BCB8B946302A3FD362B4521691CA071E2E051DF71BC6C0A35
0CA79066F2D99CE071C3737E44B9475800E750E821F68970B8C7424A2F9C73DA
D1A86096156A034C358FE71DD4239B2663C6E943AAE3856105F9FCBC07C8C784
B97B88317A9F7B68098D06A350F8909F3012CD9544E04796F6802DB76559F8FC
30C89E61B34EC144403734CF1B3E7C07FF0455164F422C5F199B2C8BA8028CD8
54A798FEC8513A569171383FC02D884E5719302FE030EC70582CE0FF2F5E5EDF
F0DF0C5CFD4464D87AB29DA5BFE6E94BE452271CAA99786D7133B6D8CD179C81
6BA138B4FA707E643676042DBDF486415539B008CBACA3EAE1C79CC3DC5F258F
E3C18E2A7A0377907CE3C7A9FEAFE907B969AC327DEFDB184FDB31F6E0A36D03
AE44F2D68EA30F2E5567C8FB3ACA7A6581B346E01A48719299D575FD0B203E1A
B40356ADEE4C58BB66331DB7FE48F73D550B1A88B6DD4651FF6B2280CDA912BC
7ABE5075C3442FD1C43D846E2002788723C9D81E2B7F4DBD0799125CAE63BFB2
0CD581F5746F3B8C77EE56D549DF95B55AFF266899E97312BCD2469E5A880E67
116F3871ABC198B3D1370C198D8846EDCDAFA8EFE41279F3E919662C33DC5B7C
4BAE5ADE10D3A5C1DD5021F57421A88BE2E32353672D67FB25E871209D763A8E
587393A79CE032ED09A882AF74475D1BFF3F7A86642B455D8E01FB99E8781AA2
DCFC7D2EAE951D21F78EA2268856185DE7EB97D1992331D30955121B5733BD97
C9C5226442FB42A595C35722E8B65601B5A304F22886B584D3D44EEA6DAF14AA
C6A3A256809B3C1A5E8C5A70DB632A856E075D8E88B896849F9BB91C0F33FBE2
163E9A0CA7A01050118138C05D33C8568911CF6C4830B33AEFDA5E401760A3D6
A5E1BC87F664F84AF4FA8F9818F5875A8FE7F50B44A2BE90C36DA2685B1A16E8
C09930772B543C44C7A10FBEBF6C0BB8755A42A5E6924CD3CA76C5F109DF2DBB
1C374D142475800CEDAEF6537CF61EC713147EE2EAD27518F8F5C0D9B2DE44BD
C994886697805FBADF9ED90F8FDCA21D1204966FDB8AA1B7F4A448561158E9AA
F2846BBAC246EED2CA17B8B79C6D3EA42A6598E3C0E5501E88857139E54C9472
B2D1FD0680BB446DA1ECE179B05B54CB338B54C620B604399F6BE01B119AE5DE
54B4ED75503C4E0D979F189DF17CBD7984D4D88D3E11BCC69D536C347640B13B
0C575326E481048FD9A294E72E8B156CFF080FCD8C54AE9564FF7F4DCF2494F5
74806935884213B4A51417051E3C076FE5286A488FD037D521FB1C6ED99C0E72
A6BBE379B920AC9360406B8CE651196D082359DAB726D06B73A7066D5EAF1432
23E9CA18F182EF865BE494E1D8BCAA22515627AAF748874B41834894A03C0928
5AF9538D04A1BE7A8327A369605C5E2B6F92BB55E3D1553E21BA103860943BE4
48D440FBC706223E6787416143682C4FE9E5388BBC558BE28874AB46E427A46D
A1C33991CB0C3AEC8060DB989AF3F538707D423900B526FA66A4B0D32BB49069
D9DAC2F990BF0C10CF85DA7690961A08FCF9F5BDE452EA1D712C6A439FEA3CFC
F50C97DCEC9ED26B0F01DB589447FA36FDF5A9F44ECC5B23E192C66946749A23
022182EF8A9721620693C7E77CBA39641B0CB2CFBEF104B4C890CCE6D82B2270
A77E3F9DC5E939FF5BCC3B711A073FB8A77D8B88E83E5ACB468A187E2A4A0DEE
249D0861254AEB1123A6D5F19098E8425CF41B025D08519DEE6378033FBDF32D
9A223B035400715C1DBDC22A0632A728189FC1F5DAE96E1A7A9CC784D9C63636
0B1EE056F672695DB8D20647EF3776746BA4DED8205E7D78813B0EED37BBC077
0150F53617B19D6BCA9E9BB8665738D478E202068D867E2117650C8F7ED57624
86C46AC8CE2FDF0A820063533BF1288997FE65D1DFAE1B2E416CF2ADBFF243CD
B1072247A1B7BDE1E6FA5CD890116E732E9F8B7D667BFC36D07E89110AA9F338
8DE758F91EEC23909F69D1E3C0B28CCC383E5403F0A794A96AC71738135D54EF
843699239B5C9EC4CCF389E4C99EB36C8F53CA3F2B077BC26144A2B8381E5807
203C5389F9DE5B7E08354DE8DEBFC917E479D080736F12E8CD2677CD9FDCF612
78FF50E3CA97C7CB47B1D1CE0BB1799BF789B7A6441ED976E1FD0C013BE9E4F0
757AF6A5286465ED56CCF855DEB471E0FBB582BE7DEADA20295C84E02DA2FA3B
9481602AD64EBB14C9F19F71A0F93F2FF7875CCD769910E268AF03CC3AE2ED21
76A6762E33E732B2628CD8211BC0E80BEC18D48A753D7EF7264EC36ED32F0549
B64077F4B9576213835A4B2F12420FC3CB765FBC7A92CC72A438F9F71E8601B6
4021A6C37088AB106D016DF59B077C1047C794C019E8D0246029DA908FD8FA41
F81055FE9FFEC92067B48A23D9DD6FA88A9EB4EBBE1C3AD17EF1169A03FEB27A
744F178E2E3997BD49B512DE1EFB3D1586FAD2EAA5DE7CB90A49238358BA4CB6
C1AF8DFE603316B74B8E95EFD2FF7EF0579AB0E845D19EDF77F39976BE3D614D
71EA1E02F1F84603DBFFA7A13523B079F91CF82D318BADB9444547ABB2A6EDFC
F1456E2406943B19E768E7BAB8E600E043FAAF02DDBCA3A799200E229CC80F82
C370BCE55FBE50B71F9DB53F23486CDC7C6263B9371572832274FB55B6D204EB
C3CB87B375B07604D37171B703EDC808190A483AE44F687D45C8FFDE86F7DABF
7221C0FECA8A160054B7C721AEE0E46E2E40E50BDD738598FF094E70F5D1092D
53712DFD3252E1725562CC5B97F10E7E7D5253893E14FA33BD4703FB290F0DC9
92D27C03A6F62EC792107BB3AE97457C9DA3D871F8AB4EE1F21113BE125E5128
4AE8229C37C72ACC6F62BB64DFF5B433F3E35CCE88DAB89E95B41D5BB131FCDA
33E8CD34A5F773E93AA7D44D8C67F8E5775B9454AAEC5A25166E14C33638DB07
C73577145898493221488B8AB98DE431E4AC4595ACA43A66F3B1575438A3E746
07F881E358FB89EA560291A4EB78FE744BCE90572CB7B1F367FEFC281903C48A
F26D21A1383BDA5C9DB963ABBCCFA5B99C92523544A482DF4E4BF82CB664DCB5
DE616E53EE431FC6E32674E3940B9F3AA7C631D5AB67474F596DFC6767987366
C303EA2A09BCABB9DB7AC732A7040D3F4F60238EBDD59103ACA1D35C45C39E16
CD561BA97C683FAEDCF5B058E582F8DCA2DAC2F3C7440507B2814046F5F2B75A
389455C412EA0E386E31B674CD8154F98FD27A19671393C8303E1A691D8FD6CF
95B661ED48ADFAE90D7E6DEF06EA98E9B41830656E915DD18D424BAD72ED7C3B
6F9C734F9F9D00256655B600475735DA27152D187AAD9F3F7F44687FE537543A
E26AB421FFEA2E45C08496E2F7181A9DA4D899238BE2E97CCACD8F9B1703A3F1
085EC88319B9DA644110F6FD1D04286A6BFAFA2F12135B3715B28C9A73A0FA61
CB7A34F213E128AA64C7BFC731131DC19A8B9EB8F104943480FAD82C8EA9F7F0
2EECE492016E48457750122B2C8C469F014B6A7E10C9BDB4AADE7B671947C6C8
38D02C6E0AEB90810A1E2C26234B6911B455342246E49D68C99401FC638CD9BA
F850BA3873C3FEA3FD091AB4A2944D6A8F105E587C9D2688BA11C245C51BE623
9CCF5AF5ADEC1E1B350A8DCB9F0DCBD01E55E7A513EFB42559E02F778F2BD217
4E25C9EEAFF02A2AD23FA480EBF052835781D1407E2D2E9C6C9914104F5D93E5
75B1F56A1049D4E8D6C7982507C162A9EBF7E375889325318E4DB91300203D3C
3D3E0C4E6731B90DB8253EFACB7155F81199A3354A89F997012A9DADA0E2FF46
816AD04D0C09CE1C8CB0F41A7E2F6BD67FD06FEB622EF2991878E11F38370F7D
7112EFCB6557AF7257A143517F7BB355D38C65D00FD12DDBC962AD84E30D898D
4216AC5344797586BBE550C81DFF184E210D468E307E07E5C8C17A4B7919A0E1
A5E0185A71AE600956CD10FB7FE21CCAFFCCB04E3C165ABE8C6D34BDE286AF78
46F3BE3420EFA23C340CA350B7958673D5379AE5BF3830B4FC4EA768D8810764
3EC1A4222483BE38EFB1B8967CEE103D44FE798721A7482C320303ED9DA017D8
5D9FA01864772EA72493C3D8A359E2881500920F8BA3F871501B869CFA5CA279
1D89521B6EEC189C029D5BA6326A4F9EC58F79C91F51DD43C6B44363FD6BC532
82AAE2A601DB14E85D83BD7971849EC26C9FC5570F2A2B1213EEE6A4AB19BA20
50579BEE9527EF293FA1B787D1B8849E6C9FD5DEBED576CF25E3658ADE6AFC04
3540E044AF9313D1A6E52CCB3F87BBB5BF151ED9B2A75F31ED3988FDA3113263
1A2D2C80AD621E33836B47CDAA37BE95BE62FBE6F59F2C187152CB34A369476C
3417E1BC15480E5CF6F0201DEC946AE45028DF1751A420DF30E878152384F7B5
71C3E6601123CEA43F9B209F1643DB6E8CD29E4F03A8A20736E0B3C29DBE7626
E44CB7F4862C560AE5A8C69DB4F57502E88B4BEDE18D8C2745E12CD731FB9EBB
2904D1A66BC9D50FF7B037A29FE5E72BB6DAD323811A9460AF6E40AE295DB948
F4D2585C0E677A1CF0602661A65465936B5298511ED42319E189BFFAE13ED5F3
A7F018B3C177A733A5911FE04C5E7416CE6FBCE3C95007EB94A0791DACDC558F
7C23126498DF01A8B4E74AB6BB67C1743C29F14FB0C0533F296A879AD96E2316
B3B057280D91322AEB623DB51B944A431F099F87F322D1D98E8CCECEFCCA4834
2DD9844ADC684D645124AE799F81B44C944DB10DFF246C0E8E6B92D79206CC01
C4C5AA2B7C1DE9774E00D9A598A88A20AC1C50668EBF961B1C76F38050EC2F7E
3C6529C86FB2DB9B09F5D420DE9D796B190B9B5A647481D3840292DB3F1CCB11
F6AE0A3FC45B0A6FF31B11FB7FE563032F601053EAAC3A137AB7C2F6CC54E6FA
4AEA638ACD83D93ED815F51A18C48FFFE1F198144338FA914D377388AA794260
5D352BF23AEF9985C82BBBE168D54B924C1EA989726257556DB978D39E9C46F1
931654EBBCB217DE6061AA07D1A2C8F57AB4972DDA49FD25AA3648D9A6876614
DDE8A9F12E2D4B369FC3919EE2DDB8A20CEC45662460F5CF2E0DF6B351B22CBA
67A563E0A00E7902D4F015E2A364935B37025386DB863A555781CFE43EB2334D
5AFF6F89B8F3964C88A29A13BF9DD995892CA07D7811E2853528B939A52F4AAF
4FDA0580E8C3CCCABEC8B5281AE972F4A0CFEC385070F6794EBD0988252E9B29
8E4FFB651EF63C763C5A9248519C8D1D7407211AB878F6E0A9984D189C30B8B1
B22D2CF9AA0B2E8DA2BFFEB8BBDA797896A3C766E7F464635D2BCA89C65C8FFB
3A412AA62E53864649FDC19C394B650BE0A46BFB702FCF1C4971653D44EE2A99
F750A2C3ADE5725B127F58EC754D04D06E6F80285338200A1FB579D69B10CF27
A764E19875CD73E33D746756140F01553A378CD71DB98211C07E091522208C63
8C3D0B81ED3F840221B75AFF3C5BCEBBEC089D93E6932355AEE57A2C7FEDA998
685F141784426760077493B779D81EBE659574832C7A40A03457D2710AEF403A
CBBC243E9F04E7BFCD56073465C309812194EF01601F7E994F379F46E76879CD
63A25452CABD02AD412662951C3B774A8EC1579E435EC6084D9048ACC3730135
23AA39BF32416E2AC5663D02A3008D958A00DBEF4A5A6C2396E5E7376C26B8D9
72FD9D911F109DE98DCC4745AC6826515C5F14E637F341AE2EA11E570FD76E4D
555BE348B5442627B56E3D7A2C72B644935C6EA87EA0E74530F6FB72F6F3CB61
14CF061A6389C844A4C3E5BA3D904309E51E5A877E4DA907644E36300BF99FF3
D6483AFB82FA800E0922EDE889ADE139FAFBDBAD326DE98A17CA090A0B34E71F
6E9FE058FF4402577A87B81949B700379E374C72BB26013544F7C12F70FE2199
B618ABE9A94D176626572DB2CF77E3B9067C1983B3A14D13941560DA84E2EB61
6054E5C46E3F56E2EB3D1B8EF7BF9794337E5FDEBF1573162E87A2BCB6353996
E714AB3295FB03A7E675712B3BB21495125E30B6C8A44664CB6E1CCB972D2344
E656C53C477A4857E7E4B40762126EBC82D89ED52B42C1D1B3F94E4DDB7E2D43
E0DA50BCA6D68C41E725FA8FF492C9FB53491D7C7CFACA1596E7BEA01ADC1209
1626C78145329F1BB3D0BB59456EFEC59393E029B75A77F8757AA4CDA61A27E5
AA2D38CC8B525691337E51B50321F47A7D5709645778EB9CA002A65716C49032
6D46A32BADC2F849FCA104EBBD71AAC20B61EF8EF30E44FF87EF5E7D66F5F720
EDC6EC596645D427424F915F8898F8AB872C501500C82740BD73D3B5777C99F3
C39E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748073
C80F344B5AC259C63097D5B123C457F41C0C1FBF1FD20DB1F21AB7759580EFAE
05DA4B5F5486FD79F660C4DD1912B77B3EC68B589410B00B4F8BD6CDFAA2F49E
AFDDF799D8C0926DE86A140910821EF2C61BFDB7705FFB5C319091904D2215D2
8DAFF056AEC4ADE5F7EB16708D2BE2CA052982FFE826BC709269D8C09A4DAFBE
BFBA800B42B885DDD5652727A640911B183955048D808915D7BA588590785C36
323E2D204512584029A7E941946AB7D45710ED4393A98B4E23A17008844048B6
23673100660F383E0D2F633C08A3EBDF22FEFA476B92D1B071F543002AE5C575
C80EFD0638B2AE4201F8617D411C52FA6EBA773553E69D68E57589A437A6CFF7
12A5A5B7750620F67F4A68120DDA56FC6E466A3CA47F0F2383A6052C86BDF393
4AD0C66DBD3AA4D7C69CF73A2E6E359FE4CE07E98877AEBB4F2B057EB2A57F13
1B22FDA486D8368A13DFEC733E31721E2356F2474AF114F730722C5EC0B4359C
933F41154491E4EB9525D54960AD990621E6755E361C63D848F8882CF2DCDF53
26BD8683B69577384ED77AFF73C43E6F72F69362F1CDB8ACA23AF9C12B5DC7E1
4BC401CDAAF4192FB72637BDC61F8766A1D28C0EBF91789E2B42D978A47B6B18
BF0396DC86890FB34B80E5A62A8232106093EA39091D5C70C8A69A2EE4F3D5D9
F35BA47A281347FBDF233457E22F344B8FD3D940C8E50D99CF9C02B4C1C52036
B49713C26F1F56DEDEF0366E3E6BA9B093FCBF378339A81035A856018F09AF03
D89E764E4677099F2B231E4258B2A957F64ECC1E102D25A31C65DEA91D3E4E41
94DFA8C472F033B0CDCEF8101CE4785D07D33543269E8A025CEAD9CABF01B027
97DAB7C638CBFDCBE17280571F364346DBC11A9D851DA459979CD48AD94D0D33
92F98426E7FB213207AB1716FEE8535CDF3834B8179D9120ACEFB0BFBB6DC213
244865D5305C8E940E9CD5625DE67F1982539FBBD85CE3C291C3C9AE0BC672C8
864A3D2BB2B78F72E0EA4E5341CD126A2B58DE2FCF589A2646A2689571883955
E002DDC431CC1EF765D9F09F22EFD73842E674547BE7E7E78870B0B010177B28
F8706EC9DBE3A92ED816A5116D2B7E554C64A4F4B4B2C1C2EA83DC1FF43BEEC2
6A2EF3D16652E2857AFEC47E2500496863C58B979A7C20C058B9C4785F4CE4C7
B59B1DA9BE27A80E825B1ED15520097495048B0ABCB20F38BA7DF2C801BFAD38
382F17BA5D2BAB50DC6ECDF90E40390A311B1A71CC3A7081FA720CD300486F46
3AD359D66A09FAE93B7C9B1411409FAC9C9EDF944E96B000709F3AAD82C53909
A4B36CE278E0E68FC0B3D9F42A1F403E3EBF1C6ED2A078BEC4B859F305315BE2
73E5D1D05EF5BEC374E0C40A0DD132037106E81030E5BED951AA2EE53893A213
0EB5F7913BAA24DE7583D09E6573B358333483FCE366A75FC96516EB357AD3EA
A97FDC3B14EE62296357FAB28F0EC96060387033EF0D48CD996B9AA0CDAF6039
B2A072544CD891E6D1911EC6FCB4EF7511324AF4B8802DBDF930893F842EF05D
E10876D595486474679F6CD3C20334E60FB97E1EA43383CABEFB0E1409CD5D65
1222F524FD4220842CD80161A57CC3AD92D659652AD4E1DF6FAA225E73821707
8387DB8BB695BB7CA1C8AC833780EA85DD29E8167BAAB8C78E9ECFDDDE7F4212
8EAE3004F4689474D744B30D7A3FDC11F99AAFC2907180C659E171B0BEEFEDCD
5A477200D4276D6B16420122A733E735A5EB0744DB29A8B801321969CD052FD6
1493FDA21156434D89655D79EE67D722E54198E66CA6EF6FD2B82E589D5FE68D
9DEA3C0DBCF7C332C1413109E975BFFF10598085A0849F14EB0E7D209E507D6D
8C32671862B1BAAC32A01F37CA6B04844C8C223DA6A67682A05FE29DB714436B
9753C287C39CF7E0F4DC036027796B77967C634D148CE5F746DD834D9D811F3A
0088BDEB203FA70B5231C43D7F3EC8347307D4C3EC9544D6A6D91800DB6A4D6D
7ECDD1050F64DA6E0C5EC1E7E1FFD0B18758DF9ADE231B76140270F0A05D53FC
EC188EFEAE13FA319E5F388B89BF950C292C152AE9B002F4106A0A97B8191D08
9289B8A09A1009A55A9B945094EDB97DF199549D54852AA8217E48B2B0BAB40B
417921A6D16DA08C3ECC3FCC369824089657FC7305C6370D566B96C5079D12C9
D4F0FEE8731D378813CEADDACB20AB6BFCBDD95D322B8478B7485BE9C86E513D
2A6D64D19957837EFA1C39730568765E65BE3726A6DED407DCA42C29BAC20A47
6A80199EEDB5321FCA96F08AD7471F3A6AE580F7C454CD775D439D8A03F8C371
41AA375205EFA304780653717F1B35DBBA425A10208AC999A8717636059CBE56
B9B2FE8226C32C3661C1E7227A2B57BC18102D4483E6E23CAB9F3FEA251A9920
1B99E29F709C9ACF280854914E1D232EC40A8B5D346E148C9FC7BEC56914ADF7
30F9DA026FB6163CA293576476D8AB9050ECEECCF35182E14D08DCAA91B55837
68198AF9E8856D7DD159EC22E6191680F2B408A5B60ED6EDC56857F05D41112F
42CB9955D40DA6AB0D63050DAFEF2B2B970EA384CB6EA25D04E58F8401C9F676
79D26D08019521E472CCDAE5AE3844604B355E9E71CAAF5A17D5598D8E8BB772
EF73E44F1FC50B246A7DC70C99B7DBFADA1E01B81749EE49A0AAEFF092AEB20C
9A785CBEBAC7352F57C70ED2E460D517CE2040752BF94A98902E608264DED8C3
241F09ED185C378E7C7961340E398551177A7D13B2A9214F7B9F5A4BE90AFB9F
680FE4954701718F0AE43962F9F2ED94D2EA2BF7995852A58B0CFAC2990DA3A1
1220A4C922E6588D3D2FA727918A77E7E68B876CDA3AADFD74F820E3F918A2DF
A3BFEB23F58D9B53E278CB4D0BBB21DAF9EBF112F30C26B597E78976E8299818
23415198600A245C8AFC384D2E98F62C777FEB6F8845CAD9B7F19F508FF8C1A8
CB3DBC3340FCF4829B5CF57B88C832B97A00994F543BFDBC8567FBE4A28EAFA9
7A5E224FCA748915856FE50D442BEB8A77F9298A753B4F33E113247D7E76DFCF
5AA362A030DDC31B704A259C68AAF7990882F149552ACBF1101C0CC34540AFE1
4BB4782BAB3FB8BDCE2FE2BE9B7DC14AC2FE27CC119C88A89E28C5C3627AD609
89172602C005FCC048B0A7B7032710FAD455F06C10C9D36BD009C593BAC09CA9
96290B93A5B74FF64283F15EAA51DF4C74CBB662283EA8E7A9E4027A59D6FA06
07168B4145A22A5CDCA376C64E5DBA0C3E346E765C56E436B8E9874CAC4A6945
6A357EBD094C8C2D415C6D4470DD8901269120B0F07A97666EF6308772F76681
769749CBBAAA03FC80D555B10557DFCBE08D7F586D9484EFF2E090F2B7B83495
518FBC9C6EC91E83583ED5B0AFC5B2DD38B9368C090A3A29B98BF9BC188EB653
5481A757C2255E5832A0360FB2CBF3D51FBDBAC9706CA8B4D3FD1F68A52906CE
B553325437EF1F238C8C1351682ACBF252CDCB5B4EA59579136CAAA1B40AC36D
D171BE4B505A633721908015A28BF09B926DFDE5F394A54086EC1AB27CAF78FB
BABD436AD86BDB2B16400416A7048A811626ED4218ADC55BDA19064432BAFC15
371BFA8C1A43E636430D4976695D2851ADFE75F0E8AAEAF174FD8B2D59C12026
F58D771229C2A3A491455426500E410A7078C014DEF69335A22D18434271D0E0
6D33996EB0F7521106849388ECDA1CCEF25EA04CF7DB2B05CCA9BDB8E391EA61
A8E9366E0BEFB97591F9BA5D835B77624B250F7F9F2485F79FC85E67561B3C73
B9D2DB0F8C6FF6FA8668B84576E97358DECFA6BE9B8612606BD71EE76ACABD42
EE9B32156D67F7A6D7B5F711E2B3A8146BB249CF5A6693A7064D3233150E265F
BDF3BC254C83F4DCA56A210068F72E8B65C94FE07B3B4F4D28531BB0EA4DC019
180B7874D03C6BF5FF5AB60CB740C9C49ED9DEE46462D60FA8B5D57891E7F42C
3CF6E78046CA0B3AAE98A934A36A69C1BBC9451EDA76E0F06E75724F33011944
47ED73AF693E03862F2CCD410465A031E1FA28D2A327DFF5132DBC3EDB52429A
85CD87315FB8A92800C51F9FC7B77051DE2278C30F5FF538EB6BAEAEEA73E5A0
FDBA49070EF18F2FF28BA6D137B2FB615B2B08051455D050ACE2F9B637D611A0
361072E9BDA766D2E30DDB2D2B23D29A3FF424D38C9B797A2E6D41AA9E847773
DA7FE213829278AB7B03191E25D36AD61176079969B73DFD4A77913A103839B4
2DFA59D50942C9142FD78B29F4917B2155DCE0AABB9DB4A7A318AC8EAE7B56EE
E01A23FBEF86866F1A966EC5623580D1B32BE6358015D819C33B822E9086FEDF
71280FE23035AE310960C3B301076627B3FB41C70E8C2CE3B8631E67F0FB2374
1C910C3F1657485C762C6FD48140DDB37D42997BE24D44BEA7D0869D6A5405CD
FA6984A60930BF68B2B03360247048242298B0019D78819CB66CDE9D5AF7D3F6
3063EDB43A415683760B8E98AC2D7155BA0D4F2255809DA14C8B2E6E5A6274C1
63A2F290BCF0100232153D5C0F519A5F7234FEEC0B6812B3A710C9CD8543BA77
DF5E8B9E2F8A724617DDE46948815ECBD76FB0E38119B35228C765D0A03EFAB6
9AA61C694E5767CB194B9A681D2F7AFFD1A00C9810CE61B7CD39B39A549C5E65
2EEE0747B5AF432D07ACE4FC59574DA9A4CBFD7873FB8432412B86A974C513E8
428E5014BF40B00FD8D6AE7ACC40908DB65330BD36A85017226438288A694AA9
79F7CBBC38BA6FBA9A4A145CE75E4DBDCC0998387304BC224BC7F3D164A30BA4
0CE504519F8496CD971772D129E4E8823805E0488CA7A1A5772F4AEB055463E2
A00ADBFFB236BB645F385878973216DFE0778E18BBB0465C45CE8889AF059151
F647A3FE38A6AA1A6A95F58CCF5D6B930D260B6BA9354DA96C74CE2D1A9E1414
323287D4408A5CE30B3F491C5EE6764F0A9C791A815FABE8F2388C0838207D28
A0C1E12DF8D4A3E4525C35EB70AA0C95EFA0A4044DE8B7B0F25EEC9663E3E49C
565D1BB51BA23702242F6AB88270EDC381C5DF9412803C97874F4EF05BA06B60
4C485F4BEDF4E07B5C54B46FF8E3CCC4A4C828F9CA16F85F3406846D4C35FF31
C0574A4A32AE1F1CBD9F8D930FF32FF0DC8ED8546801F826B321DAEFBBE0E418
B41D0B7FA5D8D626F1603F205BF3FD0D6FEBBABB8BF8136A0E16D547ADF85E08
C5BBC88D1BDB01ECE23E32068C5119900612EDAB0FAE11C8E2F0D3352DF5A440
F9E85B58624462D36124313F03C4030A59F130B002D1C682B114868330979648
5957D1D4D9B23894BCDF5856DC4226036208C1BA952912ABA9629AD71DA14BB9
9FE69FF306FD04744019C5DA01E394E3DD3B90B979161D923E866EE170A30DA0
312ED41C333031F87B0BD1B783D131B9F5448C5DE15DEE9DC541582FF51A2025
8793EBC4485DFD1F5B6BA013128BC11FF92186381230339B37FE2EB33828A466
F95A6198CB10F90AE722B9E5A3EDB1F9C8C6341B294276211516DB51EFE31161
E515EBF1A070446AA41376E2BF89BDFBA26B258DE19F44128B1E6AD2EBBE3EB5
133B20137CBE8669B4397602A1EE51034AF0E88EEE1F28B92F80288A4F56192B
E16ECE6086729CA1590534681A5D2933CC5CC5F3E1F5C986C3112F6EFDE1D438
0E85A79FCDE0FB0B16183C74A90214A3DE74C88F70138B01D5D8423A9E3A83D7
4B2D1C686767BC56FE82B2FD2ABD3DB2B81B3EA8585C6A71E41F1807F6365380
A8C72BDA04353B95E85593D637AC024F060FC36222B4CE6EB1F5117C2F5B9495
17FCBD653DC674A3974845B2904641EDB24F58185B843C03F681B4D3D5EDA71F
048A39BA339986C82735B6CA537FC152327E412A7552983D2977E5C6EC5A8986
9C22E6EB376AC3200C213C95AB03D34289A37575F8DAEAC669786DA9292FB8BB
4FCC855CF44B327BED7921E6E7129C5B44651CCD9492648F510AAAB1B4F98D00
FDFF31560964F54833F4F96F32BA8B107C983F1D04ED17F5D5C35D522A64DCEF
DDC6EDA5CCEB72722558AD5CF0B820F87F77E105E8E840CAE38A577504B5F9E5
2BE9CD9DB009634A6134EEDB8E038EA8368922C3AE43939688A929E7506F9B7F
DAE29B4BD585FA4B089D4EDC577A00C3AABEF185CE016DA6194FC1368633CABC
C1FF789B13D5AA7BBEEB646FEBC3DF267A0AF6BF8B4A282CC42DA8274582025E
FC206315533A420ECDD49B96224684A4DFFA4B1F68D234A29D6DE779D1B4F618
6A13A0FF603CE62E004A0351795A5BA857706929A2FA442571D491B336BD76B0
476F1B9C93CAE50AB09EC341BCB7C5CB80DE4A43586E19AB6FE2C7A829AFFC64
271D86B4A5752593ECE2450CEA4AF45616E5F79E50DAA2C4ADD4AB12CE27D203
F2E0037776D0FB0528496C5AB844211A563F6B295D281CE2DCF6CAC42E262D39
F8CFC20029CD89B214F266E321661BB037495A4AA4F4B41BF8F56C4AD23A7200
AB96953010FE7061C69928ACAEBBB5DEA94C5B25E5DF9C392C693A200D248814
B9D2B1176C0E6B4AAF858441BB043BF018673FD95A350AAA08BA5F0C19398AA2
BD54B1FCB8F6C69D0E7FBDB38B833684D5E737243102AC4605F726D79336B1B7
6725A4B6D8B2656C223F8C884F7BC246DB24661CBF49E46CFC8D7DE9EF596B73
AB9676AD537B8A99B366397EF981F082C61A10708D4523B887080981F21FA27C
77498D86D57B8BA2517FE4D9773DD141E99EDE3354BD83E4957D78E026AEBC4B
385EB0B3069D5FC39E71309BCAB37B419FAEBD2780298DE8CE7B7B27F9513D57
FCE72FC63812CA2DEF0477B09B127AC54829F5F1D78C056B3AE5EFAA74A05E53
3A4C3695E896425FFDB15D211F5D3DAC944EADC6754A9E88534BE35F5CE185A0
0ECC18734D66D281A819877D83912428232F06B64351FE5D468DCC0A56D1E7D3
6650D462759604AC35CADEE6F9F4FD9805F697DA04D6891F34D3628027C2B462
B3173AEE09E0E6578501CDC1EBFD413D9AD6B69BDA5FB1E174EEDFE945B31202
5B2B2CDECA611CB2ADAB7B86C48063ED7CD68AC956A10D515AE56501989DBA80
77AB1191921679AD5F71349DE5E95828F6D4D51AED8782E39868B399C5556298
B4EA3BDE46ED2BC4C99A960E7C04CB9D5656464A92DAF55FC977D1DF7D268F21
D5949B00055C0E8C585FB90515A2C978D6D5AAEBE4BB0411532B013565677ECE
8157E3B5A0D9E1D09B7E4404FEE6B787639EECAE9D3CD86C57CD29AE4363D10E
3D15D4DD2340E2FA8F9A3F3E4CFC989359E2F4B3441D3AD6AEDBD945E62FC98A
D674E3D54675C9229DA7B7FC6BE1D9D1D33024B99C86902A78454927712D9A0D
9348209B8DE2046CA8ED64601BE84C7C320FFD0999EEA7AB56C706250F37E1E6
C9E97C416DBB0B5FFCB0D963E0412DACBD261D2980111E03F4878753008E23C3
4A9FD1822C39764B1C08590F538BA322EB59B20C62218A713750FE0273D36541
B8B2E7D96E511E8BE3B9E0F95090936B4719D7BCBE865E04E05041EDB84EBBDD
703B1B5530BB73B9B98C4D79F761AB8C124B393D08EE2C66F464A4CCAA7AA33A
9D31B99E9BC028DAF92E0A778A70FC01BC9CAB693110C91E637A05AD16FD3727
A8321C993E33FAE7E7A659397974FCD2341EEB982B7CC3B6A8DE5F6C84739F9E
C722C162E825D655301BCA582FA1718C77144130B87834C6AFF67C4B45541C85
518707AF39B265DE4BBBB360C3871AA68308E5CFCFBC98ADA3BE507573014CA4
943F798E4287569FBE759D986F5B1584FBAA0BE1137E63951596EF00EB99E3E6
840F80CF12374AF9A7E0695CABD883651454B7D6799FB1B38B1B5ACE3087613D
6D1AE183FFFB8D56B62D8FB2ACE3A04012771E3B4C53F3CCE8753D8B768B753D
3CC277EB620CAFBBF089F03BFFABD84D744BC5AD9AD571F7F30A6F3DFCD0BF53
D3C97B747F6852D7B81FC1028FABBB60EB2584D04C811BDEA732243CF94A3402
AC4AACC3E258E9371C1875A3864C470040A1214A91FD650205F5A68F9B2EC746
DFE55FDD5DEAA93AF06BD82E35277A4D059E32772E1614087DFC5DF9A555E21C
CF4776E3C60494190636859D79241448427AA99D6C0D4317E36B195D97E3E048
296D04827A2E27766A4AEA4AD303CFC275AC2BB63D21DF28E46633B175215ED4
4E7E4870D67F1AFEC0B6CEBEC7CE36EC0356B3F28C2EE28DB6D16ABA9C33B85C
648DD95304506F16DF33B07A6B289B75A2A14E132BC1602EA316EBD5CC3B485C
583C29A63B1EC675D0BE6AC323BA5F68BC6E4455E5103FEF36D779294F3D5051
600589870B3BBD2E75E8B92ED994F7F610C7BE1D3DEFE0DC070A615410550CBB
035A84D761B69DF6EF0284313D1FDD727079B5AD8633EC5E07ABBFD3D805F2E4
2B81959CBCA589D64EA04A98C085E343DB0C4BBA9BBC636A399CA7A42CBD33AD
82ACFAD95E18DE42CA05738C4ED0E9A48F48519D3830FCA1880662396BB4A615
C7972D1E72806035432D26C19D6FA33F0765C2495455B9B6FA1DA9A059C2B55C
68C06867D6D036D536C4B5076AC6B48A01FC9964C331BC573BC819189CF4B07C
E45D1ABD70A739A7D0FBB406E46DB84C59AA988BCB1AAA38B163587443204EAA
89F9B126037E446D66FF7B35C21987AE157BD2A159939B848C12E391E27BE156
10EB1D981D3F3425490C851FCE81C21EAB68B2409DA4BCF7739D76D8A9E9E615
AC66147E704A54E38E6C0849039910C7AC316980BC8032C87D52E9986D7675A6
BA45091C5626F1AE483EF7CE84120CC92513D966E7B6A52FD2E2864CA059C60C
C7DF221188DA2D96D74019233BDC47F785F1BF93753B6A3F98E1DFDB985378B5
C98E0F90D43A733BB43D2C34D27F5A50BE1A3BED6A9E9B0B784A4BC80C30750E
DA891A17D8DA1587D1D4D95DDC679746A8FF2C1AEB85708FD2BEFF1421AC6583
AB828FFA8E2EC858C52EA104818CB1279397DCE32E1866707BA3AA50D6B9AF9A
218C5741BCDB4C98B51C7F25DFD28B9F6A4A800FCCF1D80F810E5D2EA7584947
AE71E79B8A895F9A3998693431A5333B0B20B03DCB7B3AACD572D54AD731F82A
58FAC56B364EF9EB1D4429EA2C09A9FF83627B7ED0672C255493C992042B9C21
60229FA58010E7A7E40640A3221EAA1CBDEC0B1B4628EB5B309F5A4E14E5748C
F9099138DC800C456A17852C3502CBE38BEAFEA9B9FEACCBF82A46C6DAA021F2
13BF46AE2C0BBA83BC30CDFF8B838401BF794879BC5BE34029690CD410326F0D
6CC5D310420D7F647E62CA404685563B7016B90799B0BC34542E1ADB76387207
4CC7508DEEEA6C958F4EBFD8626D4EA7D50717814742B957E6C9D9878C279E51
E8D0543A3ECCAC85E4EF94FAA79B25D4C891DEB8E44C9F65F355A4C607FA7162
8260A79AEF5E9AFC0BF1805C8CFF2F3FCC6A5968051F33382F73BFA50407610E
2A78142845C5745471BF736CBC8B9055A83A2407F32D679558E7D540967E01F7
1AEBE42AF50E63285548643B01C23F16143E9BC9C4200115F2CF5B080772CC33
587A6E17D010A6C2FD5F5CE7E7EC6E9BEDA42E7E2A51581A7B7DF12F6E4EF3BB
FD4C9F2C3771B13B154D1B1494A6935B9758DEF88ABD864A02799D6236EBEE54
ABB68F20E2C88522DB43C31752331FFBDDD9989AE98EF8266EF135913DBA272C
191BEAE855824A6D40C6C5C4853F0B6E6CC6626F8441818969F5BBD2CAFE6FA2
4B78FFE5DC955203C9E5D01B85F43219A47754BA410850A387F88106BD9DE810
33CE22BD12195A925DCB71CB89C09256D17576A324B8D8EC2B03EAFA0DFA4883
84FA0FE06BBE66B659064275048DF3C6E2ADB646CE321616368513193555BDAE
78EB1630351D741267DEA2F7DB58D9B45F255306E8699B7264FF981DB39FC767
4B309D9787276D537CEF23EFCD4FBDCEEB34739B4198FB577F0DFBEA3DB5A234
286AFADC5AD58B50FF96BD7ADF5D63274998486C60C8544311AC5E897D7A29A7
787219D0739268A65B0311F3EFDDF63D911EB5E5A70CAC9AB53EB76C9CCBE042
83F4C505EC98471523853C9A8A397698E12A1668BD7EDB05E999E406FE137402
FD738724DB521F7461B43CE97C83653BBD280C2BAEAF862B02CC2015ED350F4F
F2253EDBF703166DB50033EBF42B4D8813919EDB9EAFC9E5D2EA9D49175B13FD
F35A36A6FBDE88CB78DDA72A8214DEB74938A9511E652B18F0CE384FCA7222B5
CF1BCC396D4CA6DDB83F1995D9B03126C958CD429DD0AF83463994E48BD98171
44595F651EBDC3A4BCE08EC02484D2FC497AA0A275D2EEDDE3E8498F898A3277
C721D84DE679B3BCF56A175C45162AB08AA93B320632E955823F7A3DE3055CA8
50F0512F7075C9C6C9D2AFB4932BA02278E1F0A35689AC858786F84949B68965
F673491FA6E97CE2563A63889F2C38B12CEB700F8D7364AB34D05130794B36CD
52A3A0B4D17ABDED2F0CA7BC746637701CF8F657B3F959AF2A1D2DAFF2D8B1F6
579CFA98B8A860E36E1F616439CBD576A93E65C4B95AC3EA7F89D071FE28397E
2B33DB10BE3FFD36D93242B6FD72EA7B8FCE9706CB920B6C2EA041D11E5A93CE
4F53A32E827C0A8946E87773575CFB4EF8570103E901784835C7D67449832AFC
A74978304F0B6A368A53341DDB5AEB1BC7289592AEDFF7F5AFFD1B3B0587F0DD
13A475704CBF54CE5BAC9B80E1BFDB3F31307CD56C5BD7591D5B3FFF0D8FF59B
A5649EC9D2583B64DF88AD8BF4E193EA7A650DF5549C5614F9518E6F94E0820E
82E3BFDDB95D93504B34B6DF69F142B83DE30AFEE2C17046EC2707A21EE4A115
50985FE1F8D757A9AF8576D3F4953B1B6AD9EE0698422FC285719E946082A6AB
156B92AF84E15019D06BC0255E1A2AA3CC1CF8D00F857E0787E896EAFE19954B
BDE92CCB1A0FAEDD93B003D9A4C22CC4313423E537A325C5EF037EAEFF27AB93
67C273FB441E86C4FEB37EC7FF10F2074BEC4CEB14A0D0F86C238C8F133029B6
E906CC448D8FA159E4411B4938BC656AFA03DAA05BB8170D7B63418B86A45589
CFC6AD578E91254DC89EB1429D6219D9ED1BE3E46AE824FE642EBBAA344B23F4
A59B914CE8201EAB674BB561BD2FF9CB135DB58F7263D9BA8FF6D40275AE56B5
5A91A09BFDB8EBEEA1AD5D3AFB9BD300654C57694C0277C3798F8399738FB38E
D872837438AB661B8F86ACBC1D0D08B18217E62FFF99CA345AB8D0C8E75F7CAC
3AF9CF724D28C8C8F00A0359CC28FEBDB5B4803CC5FB8636EB77FE7310F9EED8
C94C7991DDB18D87372EF7E451C5C27F8255C67ECA932D8D1C5F4B258ADD9223
A79EC455C1012AD8E4F5D98460DE36F2D8C289B712CBCDDDE52B913C3D3F36F1
5BB7058845DBFEABDFA509707D5AC75C6A381EC653AF66C9BD5B5A51216E5C1D
3408DE61FA26D8881D55BEA63C205D78C61EC93280106156886DB94A73A7B552
29961A40CE16FC962A794CF23D68A87B63135291ABF8C1AADCFF2DE155E078E1
AE3C4897CEE01540ED73B330A710C024547EBD469D73F68452CBA2904BD5E116
7C7F662D0D9988341A095BC39B4ABD12189B4727EC44A484CF7B52EFBA1F8EF4
EEFA8EBADCF4DC236AC1F1AC44D16CE8A5F925B4A30C5FA8E46913EE7A8AABC8
B73A57FF8CA6FFE22ABDFE0B761D992B666B1CBFB718B84E0DBA5F41A7DF4F64
944C4B56794B5E34A1E549654CEB5339756923F215E11460AED3D108A171C26B
244D1FD4B3DE660491479B7AD9716B01883650F516F6AD55EE396F9B65CF24D7
FB216D07B8A08F14A88324FEBA640F8E47A5800A97F0B623CB881FD6E9E75F5B
4EC52E23487B87E8E6724049DFF3AB37906D13EEF36B7E847DD1BCB391745D15
4981971A9337E657F67B4D6C249BB626A0A6BA0EE6EF502FA805A32C8EADEB69
D6676A649D3EDB10272B77BF922A260078F9A530C826396D25B74122BB29541E
BA273C7B24F46368B688C40E01FB23D1B6E090847EC6C66BEE725A6E44BFF99D
8FDBE6253D80356E2087C936DFF850C2AEB6333126E503D0E0D748A82D381FD8
257A969F211CB13779477DCC6083CEDECCF352BD38AB0BEF218F021ED0A49B54
82BC03A063E47C7558CE7407F61A6B82FA4D3C7ACC5EFC98EABEE9FE87F89843
9E4AE7C30C154C9FFE772339D277322F3D607F245E311EEBF68487C8211C47C7
BD44E2529DBA7E3F2861DBF23C809441E2569AEEAF725BD6A07342F14FC2E70A
1FE9EBA53731F0156FA8B017244222D9E6BF7AFFF4A677C72870CA37C8DF241B
8C71CCD0DD7DCEB784E85E869C35013FEDF0B50A60637E05A753D4362F981BCF
43D44FD723C464C5347AE24723CBFD18FEA71BE90055FFF8BE927369BEDD3233
27017FFCDD38977A0FA20D2817F22952223DD56CE8450077AD696291956DC50A
B1B8FE8544B3B468AE5AEE6B1A536BBF51C2FA7F4A14FCB11AD4ED60353F1DD0
D8AE9E4358EE24DC33FE7B90BEACC535BD223A104564E38D567F6E198376240F
FAC07B7B47BE7FFBFC582A46515DD83F00F8F4B5F023B471DAC405570A3F08AF
FB4E5DDE9233B409A253D021220963
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMSans12-Regular
%!PS-AdobeFont-1.0: LMSans12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMSans12-Regular known{/LMSans12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMSans12-Regular)readonly def
/FamilyName(LMSans12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMSans12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-411 -308 1407 1154}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123833081E024C973A102D8F460BD9
75ADEB5A09536D6F3C9E0404C494A7531556EFD108E97E770410E56FEFC620A9
58A40E61E443EA13AB10BA1FFC9A8C5A0AE4B3A70B9DDA35CA4FAC9678E39054
2086BDBD692C89708EFFFA5F235831F7A839BBC56C877DB8F713A2D5393994A8
357B4DD54096FEC1724D57F143398862CA36F1C982DF09539CB8C9F0E7CBE7D2
13233BF5F8C425FABD2185591D3722ABE7F23FDC6700C38136752536882D7EF2
65AF1EBCE3D1D0DA11C2DBD4DE61169AD2010446EE632BF9DF6D929733846462
D10A17CDA1BF70BC1B45EF8BDF72CC5BF96901EE0E7FACDC309AD744B803E28D
170937F444782DBF1A9F10FFCA1E96428C339564080B955D616BB9A3E6C6A801
ADF0609EAF23845FC74ED07C0FD09827EA10884C9B6B900F3FC4C2DAA80823C3
52199CAB38314687E16B2402A698EF5C895BF425ED9B2499D4202D0A8D1216A4
E1187557EB50C8249AF9CC836B1B1D9B4A28CCE970EDAEB57538E662AF941CE0
53D88DB0B078DB739F022E2F92A79F2EB23F089A0E3199C3C2FAE7B93A66DB5C
F10E6763DAC5C342EFFB9104ECD0125C6E7D32D5CE68D11C2014A33EADEA70A8
03A83F22CAB36A7EE9AFD9569661D2B65FB216AB8D1FC7A52F1A471D48B5AA41
16746756E0A8DDE70884DB4D1DC78EFCC745E00B803C7496C6FFC65CAE5FF981
CF760C9E8224BB781DB61934E01B2E9197BB6702E6B1A57C454FA5DE2100267F
912D837CCD9A027E9A7B3BEEEBCC3AF72685CA319212891B6D217650738552E1
048F13CD46B6620DC526A8164D1FE7D9D20EBA6F65CF59CA7A611B1DACB00CFE
42BD5BAAF8E4C6076820DB48DEBAE7E5D36969EDD94FF0050D5F880823A40F9B
6601CF5E16B62AC684179510113589997DE43DAAF37144199ADF6D36E3DD98D5
D4B7A8437E6E7F9B01D636671DF223DB8FE2188D1505B5E82FDAF2671D468141
8E63895C1C7A4273E038B5B3B8EF260A0A35D2FE2A391274C38EAE50A6507512
690D2DD4D64276AC5E544B36BE0B51BCB83CE53A6F20F4DC5E2F347A7E54C91D
69204A83F1D46A59DF25AD24664C9D5FEAC7AF6488D173C2BD855385676D8C39
2A82F8DC836C8BB653E4C9A19210AEA6313E62E70EC9BEF8C4560812D60B1472
F6404B1AA6031C346E175A9CFFF3EF2873CFBFD2C69574A5D7DEF679902FF59E
3B86054DF5B3FDF83856591650C9E72BF8E2143D43A1481140B10252DC8E0EB4
8E2446E4AF11C73D52910F14BEF067F255C44923EA6464AC86DBC3773EB7AE9C
408E9CE5EC893F4705C65569101693F0D22636A00F432618538766332BE25A0D
74993713AB2FFA10EDEF127303002CF111DF1BCA43019F62AC6FBAD2A4F2C83E
0B909AD58E95EE807B83CF7E1E095CB10D5CD3263B03C83FC4B7BE57C6625B1A
B3426B888F236D57DB2F5A50B37FD8E60F42B30857EC5CD2FB4EFA5A8E48AB87
BA6E9E942DF5E90DCD355962158491A8FD8AD2C7F470E48D25BBB0F614F72326
C3F650CFD4308DE0425FD9EB666115759EE22D9F51DAEDF5873816653E5215E4
36CFC0C51C1DF9A1CAD2BC6E812806D30B4821F1AE91968E038A3519D4236FC4
73CE71A6377E32DF8E4EF5950273E98803BE1717D7FD9500E68B2C77DBDA49C6
C7CAF82BFEF596C524B327969A71459F9B49AEB06A762B8FB0E039B398A8725A
856FD9955EFF184CDF0D4ACE998AFE92AA7EB62E988B0D3CE71048399787217B
CF5D071A3AEC9EE2CFAD51447F0D660BF7CFF7EBC4AC5BC957AF14C2AECE5819
AB516CEE0E1C7AF3DD198DA7FF834DFA815E1F3765392D2DB2F4AB03FD01A261
24DE5DADEC1223353192A043D952F5CB93C8A1FDD997A23BECCE71AB67639EBC
8E9AE584A91278748916B90E7D89DCEE471A182A205D85B6DB655F64D923D876
DFA6452E0BAA0519CB64DDE6282787A7F448D78C3B99F7383E534EF6C936DF6E
D77EFB07C3DA6F0368792584F36B0027977D6B37B2827E64FF0CA96215E4498A
8FFC2B984B99A6CA7E077BA5CC45608100C7EEE908F27E984ADFC4099E1610A8
F1ACBC0DFE56DEF2EAF845F1C42E9EAC8E5E51949710ED727C5D7E7F3235C489
7D51AF17B9562670633526DA154F2FC6BEECF7C3DD43EEB252FCD82555908CD9
11F38C6954DA675AE9F70669113065923D7A6457012D7D59BAE248FC14B9011E
4D789FD52E782C10FBF3263FB1CAD089373B9D48292FBDEC55AE303FB7ADF8AF
A0646A4031EA627495686545D11C0E99DB92988762E6585B31D7586A3A14590F
A2407BAB1E8BB563A9C89C0F79AAA6185F2CF7FEF8C99C29BD310590E1B613AA
B89F20B39C6AD3802E41B372B91DD57238C1FE2E084D1E275AB283D865659D9A
45853C24DAE4C4384D6A6C0B4E1A3B36FA9E6A3552760C1998BB54FE1DE1ECB5
1495B569492215D28DAFF0B369FB7E14A12FB3D4E764B326718858F60B40D0CA
F340B83A047FE949BF24C35C73E75ED960797BBC187FD33134CEDB86D1A59923
04E47019BA9543F0A89C4DF01C43A24BFE5463C9619F0CE9C083EDF570C8EDF0
185B123D619284BEDF7FAE632E58059E431CD83EEA8085E3337E32DEED5C9FB4
9D201DB2ED5B28AD0CF0A7C36886429F9D70DA0C55A9A2B4CEA62AA27DA04D2D
C9F3EB1838B3E3E37097799C0E5E098F847FDDA0D4DC48817A0848201DDD7E18
4C0EA50044A2E997DB689CE85F6312A6A94F0B83CA610688293CCEB93839EB03
A684528FD6D2338146CFA3EB2CA630B01A0EF0761F13888A4306667786F6967E
0A3CC6EFBA5BE1F043F38C1E3B3CB2173152213DF026DE53C20BBEA11B7521FA
D2EA53AB06C46134B09C79B82A56592F27FC27F1D49D5FF4BBC0E16231807B97
254749D04EBC0F1106F62A30D3F714A33E4F65F77CE340AD3A923D8C7BCCBE3D
2F962C2514671FBE41774ABEF7DD9C5953ABFA381D0F9F5B279256E80137AB78
1294F18B5E7ED330B352D98EA20DAD98F7031D30544A0768AF6483293056805F
5D584C42B434EAEE621F08E02E3209022918E3011E2CF876AD6F2CAAF668D1E0
1B09FE682EE128C28E930169DBAF16CB02291747D4AE034EAC20E15E45079F16
873B5839C3823697F6197061B7E0724EBD5B2D76FEAADC98EA7FD3DA13B764CF
1DCE3D95F87F1ACFC209EA16B2A6A5D0B83978C06F051212FE8E4E330C001617
75A4F0F369ADE9F609047DB5AB1D11EF4A587E569A48CB4193904A7D2C3B7252
9D338E22402A30C823DD655DAC472358DECBF7FB5979EF5F012CAF413DABCB32
90E29A0CE86EA2ADDE6F26A46CBAD656899D01B503CDDCEEC86FC9C2BDDF196C
16595542D8F32E962D41213E6B67A4DA34531A21651E03B5EE5C4FB7CDAF903B
C5C04FD4EEE3C936A06A609F48029307D8249FEAAB72F6E1C6767884C5430CF3
79E657FF3FABB6D3F28ED73B01004891222775300DDF7F463EA60EDCE62116EC
CD472E7C1BE6B07E1C5BB164A3361765B4356C4E2C8E6ED1E1073535DA36AB23
0E3D91EDC1384F92AEFFB951482AE6821291164B14DA11FB16C0E671A6104082
94DA49D02E83697425E75CD6015C07D1AC0A3728D93B3CE879C967DC7FC302C4
D295E606E3BEB5DD0B068D657A4C5A856537C06F75BAB024B682FADA1E3A01E3
13BD1235E05FB023A6E44AEC660E02AD5C0E438F964EF1D3B08A4B47513E1F8C
DC2763558C93AC71A4C6AD7F3C99DC40C53BB0F0A68C7C49C128507F648221B9
F62D64499E6F41E0452EA291471F6AE12C9B18AE1E1328DA357F0E30D9AB91D1
F73B6AE9F49AF2051EB2FAFAA81AD2E91846D59CBAB89268B6CB0783681097AB
0CF27C1433A5B21C85C42294C5C5DA468B5307FE39917C6C2E033240C8670350
8D2380278FB9B8E125AB32F3F6B1F8FF071E03D1BB27C6A591AAF6BEBA129620
A8CD622F9B0C79E4635A10CFB39EE250AD0FEC9C672CC2DDC0033D035B1D76DC
14C0E3A5055D73EB6DF57E174B90F05D39F5763EA4D257BB4ECA6774D2B04FFA
B082F33CA61BC587A5132CA4E82F35F9DF4D9D7A31B075801F323729C9FF29E6
81FD7B0C080A5B57E37720EC786EE39776EE06BFD3C04FF933CE48AE61ED583E
1C8F4C440B5BAC980CFF66BE9DA2BD1B660010CC68949F79D88540FA56F817D5
C1B557C9C11D2D1E7D8E99CAC3C3C3AC7708061FAC0F21DE18CC23D29A563527
B6439438830C4C8235DA5F8C16BF26533B564B2A5DD9A9C13F495391EF6C45BE
6D1FB3F56C8F84A7A13CCCA4C1520D58AFA94041A69E4805ECCE506F008FE43C
D00F569C46DA4F15A736793F0C6BEED9FCD9CF230F4B05040A5F609792475E20
A46B230F55327E35FC4BACFAAF15F672ED14CFF0AD50200A157151F7625E6329
6E325E2C36D0D6AAA10FEEA3CC3D11A56D1CB957F27AE487F8CE7038159C2EC2
12D7741D517DCE40C6943373DB96EF2F40120E7CF6054D70678B01042D547F91
A3D046DE70ECC2B19CBFA85D103528A79957F00BF8849A73B9D49874E3A3AF63
84AEA13283716F280C3478C8EE4EA63876BB37A6A154348ADD815687DDB99DDA
88F1E2C5887707CD4C93907A62DF68C3DE2065A772019C474B05142993345742
272BA4AC57FFCCDB5AB2208DAECAD14F460F8E24FADFF6AD1ACC1A2DACB18A81
08B8CBCB5FDBD2B0B197153C1BE419883FF01BB562BF7A8CD1C6CD40BBB35A56
8664466A6F28FF39B59D88927CFD0276CE94CF640488B6626FBE5FCE6EDADB8A
3512329E3473F6983DF6D12824B219F996F4AAB4425E9D7C3C8193004DF6B0E2
446527C658D57C494DD907E1E6DCAE729D19A6F9ED2ED65CE2F04C2ADDE87C26
088D33E097B393724A08324ED1CE78B360E7EAA7A5C7B9BA998A3AF778BC7E1E
A555A3A3EFEA1F28DEECBA64BD825113E613717E3D948CDC7C93B089D631442F
409F848C2646EC58EC8181601B97C41B9472BD6082E327E536BD4963C6942FA5
ED9933A96CE6B476E6310B54D76C35CF2E4A42B114C565CF272B577AD0616D09
DDA2A16584C8D40E7F673FBC8F8CDF3950EDFD6CEA20D0649071442B2916EBCE
5F4D3A00818AD62A83D27A94524FB712BDC72F8DEFD25B8B70D7C07F365BB9B8
17A766BEC0F198937149ABFCBE4A67BDEA7365C463637218A766F1C1562C0AFB
78905D4A1224349EB92BEEB557DF134CA24FD48D07660C776EFF8C4D4B6B7AEE
C4DCC76F083CD0FF0CCEED920E5DC26327B3C606DFAD347BF28EE45E633D5573
BADC79D3796F440720BE08EE3F855A597B65071E7946D818327A2EA22AF26931
3CF93D62BE9F3F102122C52BBFB697ECA94867E63CC03ED3A5C17C70BBC9515D
BB6667A7B7736183FDB6FB5F3E4266B7D327312EFB770916FBA90D89A8993679
CFF2A83F7C0050DC2F5DED04CEAD7FC1C9440005EBBB793A0B71577BD408C15C
2152DC52D90BB96C4C2EED449992426730E1A4338C14F18731B6968624DC634C
B7956956787431C5F75462EEDBC507DD0FF2EC8AEE38FE96A5EE6334C12E55B2
4E5CA3AD0E78C5B63FF9941BF214B5B5AC3E4D781DE2C5A1D799C37EB4975AF1
B31505C0313797A2C62016519BEF23B160A29C67BBAF30D4EB72A67C5DB42A01
4CDBEDAD13C5F886C678E102C27F36EE9B552645B83D67BA54D4C2D3463B8201
5DDBA4372B858D2D40789EB1A68AFD88B506A966D126982A37208271A1A6C794
D2BFDFC029CAFE08AD0BD8A248953526FF8967B38478FD9A143A1D7010531EC3
868D1C4A2F5A13400556D1D07217CE900C16506F570143723FFCBF332D5EB49B
E21977146C8872ECAD4D82A933AF0CADEC15C30BBD458B7C032659C5F89187EA
9BA0F213A5209551645EF4A3399C2832F197C27808D7DC3A930D9C0E8F192EDE
4748C0BD5F348BE3BE857EE4576C8EB0C82D8E1C74333BD4CC3B52AD7577C8EB
4BCC88ACBC5A62EA1F054D8C429DA845C3E5389AECCEE733A2DFE5343CB6D3F2
45E3863774D6B474EFAD513CFE9712A378B73A598E2E26B11AD6D15487F42614
44111E1CB316702DAA740300CC2654A5692ABC4EB03896F32CE12BC890FE7866
22570A504018E479EBDB07EA3A7D588CC01789095BDF3B4570651844C3F57051
523EC8C785172FFDDED3B859563F8FEAD4BF250A8FE3F66CA4FC3BA33700B81E
87582793FE86C6A756247B7737782B74497CF608B2937568560967020310DA0D
DE283183FB057FAC50C227D23DCA95729794727ED4EA28EDD5367CC0D134374C
C5FBCC1DDEA0E7B467FEF1FDA47F843A6972A781290D136A9B5D69A31D428F46
C49406B6D6E9979556CFD400721EAC67C16221ECCD01B688F4343B283D1E9906
259C74BE3535877F54B6215D3A6955981C414EF167481A4A921BC2AF4DF19476
5FA7B8A2C25F2BFAE740EF719D1C27F71B50303BFB33BE530AF19353EADC57AD
57642E6BCAFCBF85D00F5DA5480AEE170BB118A1BB322502D578F815327B4D93
3326D9CA6F604491CBF50E1AAB4DB1875D107D8180396BA6046C28257C3F3FB0
FE3C6A0F9989C65473998758CB8376842CAE4145856413B86B4B6F63D03A8CA3
2BC46B30A03AF2EBF1516AAD7B89846E96852878792D64A7BEA283E5D8CA7017
D28C94EABA89EDA72DB06294512B2045D6C2DA0558ACF08F7C784508366CBFCD
223ECEEFF45CB2E9B62BC2763D38121FE0F961527C3BD065D70CF3B60077B6D1
29AF2ACCE51092BF2DBAF4E6124BDED04BFE6694D400A2D13141E35806D8F53E
8F34D70DF5C324DEB56100BCFDE53B3B31226325A27C50FC50685C434D4EF1B4
43907B41D1DA4F460189CA64DA2D8AC35DD10A87853A458CD34CEEF0FE8FEDE0
1A7AAD5D667300F07CB0251ADB66564D07D976715AB3D87BA81F0E2E8EA0BF22
33265A6B04D305815128532889B531170C4B10ECD0C976C7A9DF84C04787B612
DD3A2FA850EC3326710040E77E88BCAB8DF111003E63EA4E8D843817DAFD6E9D
833942F2DE1EDFED677569C646EA23E316AEE1EC29BA8D4A7B9642BAFF30E18A
42C47DD0FA1EE3521C98714EC451AB5DABDB3B5B32E6F3D5BEEB8A2D7BF5E58B
BB72495C099A1E11A76AAAEC1C8ED1C42A4C6D58F0683E9AE3BA17701AAB524D
0A8C9985149D040C2D3DD064CB1E86D5B0FD13DDB7A07895FB592B70D96E3F2E
F5D976A0689E9EA28659C1BF30B4AA716C348026B414FFFECDAB638B9DAB4D43
65B6F54027C158296377C57BA2DBE0E10AC009677247D81DE4C1C11ED538F0FB
F58F37942B3ABB615C574286277CD3EF604179CE6CC5A45A7241643523B8C6A3
BFB4B3DFDEF5363899F97A9397559CBDBB8C1EC91AC0FA666F6A4161E6593F9E
F18F45ADCEAEA2E477EFB20457C18B596A7ABC182CB4A946697340BB8721E5EF
326085016F9E506375D1E089C675FE4FA63F145C16F1812AB2F8969F9BD74705
319E03CF6E93F929FF69A8CBD1565CF3B86A0455B9121D1B79B382C13397338D
E5C961B3AA70DA22E24F5D5F7DF0EE62F44E519C647AC14E7625D8FF646D135B
F584D4963DC5B3ED1C118B40FE0E15AD22D73215F280FF2CEF63C5018A99778D
B1DD2B545FF4B9938D2EE9029BD66526CBA3365B18D8CF2E912DBEE22944E6CF
716D3B3FEC178E2FDF1B066E0025917D1BDB7E9E37AD935833B94133FD5A8805
D9A0E71EFB7075790A3A1E11482D57964C8C345D7F297AE1AC22C56018B34C28
C5C1943613DA224759862E809CA9240E0BF42374C33F5DD39F1E0CB030996BC2
F12ED81160B6A5A4468B2B2585EEEF01CD882063EAF594FC8F9F4A0FCEE7B11A
31731DE6B46EE9D1C3D61DB2A0F414AB944E0B3949BAB173449FD05F2D761B67
600B9B590952E32CFA64906B285C38647F8E221462479F248198554057B9862A
120162EE8B3F4E8DA71604E693340621FB2AC18758359E92F6E5F49819178A98
5CF7B2AB3B35E7FFCC75FE1811BD701298F763AA466B7843770F5CA2FF86846B
A1B1B2BFE36AF9E311D31CB4D124C5ADBB70994AB0353B91D6BC325ACA18621F
9F14916D8DDA0542791886B52275052894C39DAD40632EC98DABB7DA1FFACB88
ABACCB2742EF7F6773DD8865845DE5781CB4AA7B2C6A41E086DFAC2247BE094A
885352C70B1CECF3AFEE87B9ABBFC82C68A2D816A3DCD667B80FB1086D998C0F
06512FE791EB65AE23598A51E2CDF7714D94E9A898390970697E79A5F4F65FDC
310F85FADBF2F7E039F66790FA0C776B5F6027EA3FD56E6B640D8A3743852743
D2AD1EDB84A77AC0ADBE695F365835E3C5F9582E3BDEF332D469741F1ADE9006
57709B4DAD35578DD3E41C38F74C9CD426AF9CD9C35372E0A6B90A6A848CEE1E
2837245FEC25E2CDAB7E3E2BD29D6E460691CBD49F4CA39C2C5C89C3EFB53818
56F76E79BE7F42723C95CCA984D9909D73CBF0FD4C582927E6F48151E720E33C
A846C5D59265755CEF317497B20CE477C46C9CF5A2EA800482A6B9FC7D6B89CA
8103F7C53355A5E7C09E211F59083D4A7355DE49D65F468A51513C6C0C4E7C73
BD8E43A845AB9D442DBFC69A0ED01AC4044F17B810E8E46BE9689B9120EAA244
AC1D2C3E28B6F4DAFE97712E8EA0BF223325A0068F1FFA5FBFF226D3739A9150
AB31AA85EC4C4EA80C645EA6AC56160496E102C4FA87EE82799CF60EF345BF35
4AE7040D28E2027A98BF9148F4B1118179748A72DBC727F7C1E2D97BD87B20D7
35CE102C0F60A9D44BFBC683B622204AEF7778AA81055BF4B7E8C455A6398D78
56DA702CB01A0043201222A5A45EBF34945E21DB85C6976CD9C242AE6B9BBD92
FA207757BD5012E76973C9A16619D7518FDA16DB9280B9485C4867644D32D0D9
15351D2B7D4307DFE77A4B16D1848D485679E592C1AB0CB6C7120BB118A1BB32
2502D578F815327B4D933326D9C9BCE0F0786C7F4EF8C2A5A242E84CFD4DC50A
DFEA0C2AC766B9D3BF598A13257E2415596166E303FD2376DB59BF3DC2D02055
70AC830F81D359DCFAD0313003AF5B1A1C7A7DB16730051EDAFC10D2A983B5A2
CE0505CD251C5DD459A96C113F239B3FDDB442396970B2C343CA8659271D622E
4A7A73B41920BA2F51F6627DBC1F119BA6B4867859F77E4972EF4477EEB05A4A
E105D57F922B7F2B2BB5E83BC884BDAD2E7864F2E521ADC7C069C46B465ECD0D
65F4C45137F1848A3687D5BE45FEF3D084AE1B3A4C14994E68833BA0D64D1D33
C91D1D85F6DE7DD73FF355EF1ADB8628B9430467A2B760BE974AEB670A7EF502
CFB37E6B882EFEDDC7E7567F116654EF98052AFA60874BF174292909EE79FE29
4598B8493F9991DE93CAFECF773D5BED5199C717C8C05CC48AD62E125FC003D7
BFAC6730535735FB2F12E8DF9C6EF0F015C8184493FC6CD5447F35C53DF6B013
8A284A29A37284134AB99755852C1421B94EB181D2943267C158AC94F834EB78
FBA8079CCD6C29F308EF10EDC419BF3A54256E363F1E05B58EBCBB2DA424073F
982C9EC093D7F96770C73499AC0AFC3E26ABB685A7B72000C7B2DAFF6236CD77
3386E362EC7FC47766BB8045A2D75631964EA9A34813F7315679AB24938AD4C6
4BC099FB010E66C05404B4321EB4D3FCB27B4D5756428E2AE9ABB2ED239303AA
D05165D1F22B1B03033C7048A90823CE9BCAF917F4855BE88DFF74875D842C71
1D6E09587C4C0799B8DF9651B5B2A9B70EC43DD557CF42C853E4936F42086790
3CBBD57FB065E3B9EE8572086FF769550AD34A047DDF4DCAD48C79C13C76BDB9
A98BBAE6948FC4D1F6F1052FCB5BA1CBEE181912E3FD187F98241577CDBF8AA7
BB7B1925AC2931C2D35985FC76CED13AEA4AD9599669F4EACA96CB516D417B86
9F6EA4BF96CF880E9892434B9CED332AE162EEC85770D85BB679419099F0279F
6755E232669B65A7A46A6161F9AEFC342CC65477008F94133D944C5672FBBDD9
6C88817DE467096A39E6210AC25E07669C5BB03EFD1554FB8106CCC32384015B
ED56819D5A7AF7CB389BC5900C4305D9F2EE9BDF168EAB3B30CD4F93304E9E0D
B55DD4D84970F714B6D200AE32705CFBF7A12EC415F3FD1B6DCFE6A6CAB055F1
528EE862FF17A34710083C6F7294C927613D73FB1C2D25BCA2B4E479414E699B
812685A5890DC3F9512E97A2B342229925F735E97C672C57F9804BD0F195E369
BA9B877B857DA39049F5887F6C75EA22E2C1A23F52B93B79B89DE7E561195C68
53D22BF99D85992FEAD2417FD9AB8A730C0E99E1D5E76ECED3A2597A37B05784
55B6577D3098BCE77E3ACAAC49AE0FFF2957BA9610ACBFA0126C66B7EF67D7F0
788071415B1E7A6CACA81F27926269038DA257DC2063A50DEA9C8CD10A4D19EC
D6F04C9440876C1ED130F192EBD571DBDEF885B59E018381A22425C461BDFAE1
AD42E8AB26F4FB688CC3ACC6E5F8A55D547A3094786A8B0306926BEC3DB7FE51
F547AE2540B689C8AE581CE6668FB9ACCDFA2245364CCA16643841C1067EDFC2
807B3CE00CC05F6CA1D87A1C83530D89EDCEAB8C3F498D0AE331A2DEF9D4E3C0
6BC4ADF8132A0AF58175DB7A2F2DCF94A078C5ECE127ADA570D5CA0EE28C02E4
71759DE406C018F9EE020A5F6C02176DF5B8FFC6D0C7CE429D9BF87A7718A844
BBA2C252FD10651905C03D64576524BE0B1B9D79A76536DA7036198FE44F3EE6
444B6DF528FCA00A4CE5BB7C3E53EB9E4F12937694DCD6BAE7F438E85B8E1227
FBD00719732AA17F5A5AE3F9E02A54FB4BB5E0C21787CA3F7FA1A6AE0B1AA5F4
C987DD89D27FC33F11C257D6D6DFF9907A732FF8E21FC00C9CBC224D66AAF8F9
0F1242DFE702B81B3B95A6FDB1EAF5AC8A2EB991A9A70D398853D6355C337018
C53C36E479FED7E7D1445D90E3D3812EF4AAB3DDE4ED62B0E74FE29AA994343A
57474BCF49473BC0C120073E96DD4AE86F022260FCFE119FD4617303B5431392
AE9068155217146338DE3D4C65A18311D0D8FE3BD2D72E438409C48B74674163
2E040D458B5F026B67859F13BE58CC190AE494135DA16F1B90356C4C9C14D82F
6727BDB414C852C8CBC4738EFCA71AC9B1C90A59126346AB709E6836BFD11C73
D77F4E2C514BE5E06C5BB5B4F65D63FE9DE188DFEC83406B1CBB11FA4CD07930
E09F25E0781529C8E718C225960F527947EE72E320DDD93541EB69CE0F6520C8
4D910146B206F55EB11C2187F97C7B158B4E8F7E6007FD5D79D53EF7D334AD8C
B8E8A7785555FF98140F6CCD858B1A4E9FD7D26EA65B0C82EFC57F42E20CC880
EB0682B9BB414C8984D47656ED2CBC816B173B01048BE9D1E4B54ABC02E416EC
634A0AECFD4FEB93F67D42DA16B20088A5B19809A011BB3B9054ED721014A303
DE6E4EEA5A2EA61CF4AAE256929DCDFFE563DE5A22A319285634E1F092DFC497
489051F908C6577818634FCA96CCD3DBCCD0D2BF9640DFC3D0956556D6D7E350
51CB83C391EA6FD011433001ACE5040433D67C1A098D23D2AD5A142763BA71CE
104B525873C994A70B2194642BBE17421176E00F249554B7E32AE99A8D9A7C82
6C628131FDAD0DA86DEB772C3173C9084E0D97F5FB8C4A0D6A8C1F2DCBB42D21
34986ECCAF8449D92D4F1EB6697656D511EC7D3FDFB5D96D98E1D822242F70D3
9C03DB01E36C56A386F7949403628747FDD3130152F51499014ED2AA3A3E6BCD
63BDDB99AEBAF9BCE3D81E2CC477721A7B7FB7820D5EFC490F4925922419B3D6
35AACF51D5A44C841A968C8DE9FABF4359979B400C493522A4B260C55A31AA19
39D0287306183F7C8537A5FCD09950C59D0B79467CED736D9EE1FC660731E9CA
18F182EF865BE434330FD6B8572443E10B06E061DDF52FAD0AB9815F70E9FD16
8C02851FCE51F7AAC96EDC902B83D15EE853A5DFAF99239703FE05CEDB40870C
4FF92C19C3AF991B3613B4F89D2B37E93AB287AE4B9AA65B6286E982EABDE52C
010E02776FF2806EC476D1CA670A2EB9BE2D44B5BCE7AC1D74C1BD7363CB2E13
EADD443BB6E162BC772AF7B58328046D79C37033CB8C3D1A08EE2AF0A2E8B422
CDB063D8174B5AAB1B4E0FDC3A82D3C35D36AEC8EC6DB5BF5F48A62C1F238AB7
B166C4CD509A9AF2273B83C2DBFBB4EF256B7156955121EFD5D365D188736DDC
DE002E74BA03A2B15E0529E61DCAC207A7145094D285FB329D2FA4B7F5017C5C
07405A6C3A7062E15DCE1DE01C840FF89A4DBFFC31A9576E828FEBBFF9502D99
5113E1B59AA5F820C4B36393621BDF53B39234CB9BDEE09C748A3AA319551616
0CD32FCB548A161C49FD8F9AB3003C3D5A24DA865F585C0D32147CD50A0D8D22
2B9CF039B3737C81A3145CA1E66C75E2658023FA7446DF0D6CEDA2138CB70C6E
41B33B67AA651CFB16E92C7A390E1E324C159A70FA5EF93BF5BDFDC0E113AD24
75D791B43BDB158C5ECA2A116244B8D7EA49270C2A8F7D50B895A2993EB643E4
8CA097E019AB04B35B9260A7A9D8443532415C86954ADB38A38C9567765135C1
C12A374012E8703C1BC0C47A4B48860872891023CC7DD4F5E2996046854A2892
4B2CB6DAD323811A946008743118F5F985261416AC40AC78C167A0E5CE18889C
E0B44A0315084F5C57B7EA356B72A26F7C5BFB146E5B38643081A91DA1D968D7
187596D1AF192E8FE34ABCF54AFFA384D3DDD6B5376367D1DD6A2119FE27AAE6
442E5086084C35FDA23C4480CD7FA11C350DA338E4764D15851B308E56463C6C
FEDE020C96D673F463FA5C7E181BE31049D5BA334BE403FB133A38820655A160
4484D3C2AA113FEF661AC07D433FF4D5F0B747C26B417258A347FA3516D012A2
C4E078C4B37430AF88A3F85132DA00251F5A4E3AD99E45005633E7F349157850
C07ABAB3785EC358AB38BA979F052EDCB9851C35D7A31AB6EDB393CF2EE6DCDC
36670BFCB52AA9D4FD71639AD9C915281C2F4C435C4F7A972F76AF8310D38BCE
2B730B9A7A7AC1A3E0FD6FC3384E76924D0A6D9AC04531C01450286FC19405DB
16C42D1F5F66E7F073AB3678AD325FC4E08FE4C042560C3A4FAC284BD50D9DC9
B4F3007D6DCB2A974E04CDD34141696BAE8F8DE78325FDF8657327D41340F9D2
987CF9462B74259F19F9A268883ABFF42B4C55ABD3F432E2D3D9A96182E60BC6
720E97F77B4F77F75F2E2336B76A11D14A9518E4B808DAFFA265501C47B6D7C1
400C3EE6688FD5D7849B502507E4294DBA53E11A43ECB11D072C68D2131BE1C7
C43CB9D843C0CE8A2DF6DD952B33819FF58DC3B451611B1DACAC71AA4DC07A70
26EBE9E2D290B1EEDFE0322838AAD2F04AD675AE81DD5C91B731F89E0191BF23
AECED19F8E90DC45DB0235C7B7C1D182C9CFF6BF212142E5DC4AB2B15B017AEA
2735E8E862CCF28496AEC62C6D2A9117340E0078172FADA65DBF0C00EBA9A358
B189F80CAB3A5536FC910307208321C365A5104F1AEAF8EBBCD44A60F2BD3B1E
103DA708F2393AD051D68085AD21C982C71F0EDE52336EA0E0690CF237B5C9AA
6C2AE6F49B7895C1C62FBF075B80842D5A9611AD49611F2EC4AE30F411164382
E360B4E19F5065071C9BEC4CC2EF965369AB76E108E2B0DAE2A4DD41844112A8
300C7AE737DD81D4935D6E4BA842B2DA264DF7A88FC29DC6E8BF9A9AA6112330
45CF0CD5B3414419F5E85244AD0E183ECD4B097EE47C0591B39720F9E6A25F53
AB0F25FC269D3986C4167C3772DCA9225133AB7A081C813E8A6172801DF1C297
EAA26623BB4AA099247C870EB1033F07DBABC8B72E337E41A4615E8586BB328E
01894D99C4BE9E6EE4B306C97C9CCC20ABDE11FB9C157BA35862BC4E1B5025AF
C238E1E0444E5810C493EEEC7F67231BBF0215EA3369C569A0DB36BAC272451F
BA3DBE756A21FDB61E68078DE690DF3FC96DC95C657A484BF7A29EB0DCD2F4F1
0C28ADB9054F1EF53F19060E6B43DFB41FED0DAA18A96E78E95F2D64DF693B5E
51D15A9B58005BFC62628A5411221B1CE3D8837C328CB1C0322CCB731C9032F4
16801BFF29280E8DF87C63C5AF11C6F9E7D7EB54EB32197604302C9DE7574176
11B1D3136ACEC99983BEF0A714AA95EA9F1BC0888AA8940B122BFB165A5C675E
D9BF72C04CDDC0DE4A91156AA427F1B06848E8BC5F048B0811B8F3355F1BB213
E92E077EF909BE4EB77C01D27035CBB808C08E6F118B82596DCE1F65EC688E9A
64DB6CE5FCC1C5809D82445CB5F22997110F5D23A59FF98AD4585187CDFC445C
E44B1C31885A508D2B610CA73DE025BE1ADDC0F3DFBA621DBA05FE953D2FBC7B
17C910075A370A1440ED15A786E9EA7BFD9253C78FB2A765892E7989F65C97D8
D3DB27D17E0D46AD533BEEE066651BC342695398F8F36DB986C6C618AA75E527
C04ED4016B8B560C40827DC6DDB7D589B843320CB7CB1C1159054E684E676978
A12FC9B997E8E599100364D03CA46469BBEA56C64D83B3A4E0EC929AF1598D41
EFAC35507BCDECD90FBFE0E1B178DFFB185939283167A1451C795EA3428FF0D5
ACE86099E043BB19DE8A07FF884C9940EA1A747BF07A3A0A0DB23197068DEAFD
EC48042ADFD12FD6DA9BA0FFB366D19D8C69701D7E8ECBEA885694AF31D3719C
72C2FB8B8274AB54A6853DC6784398A6BB0A478BEDF018EA67683158D1B773C6
EF553EA897D5F384629E8039F14A0F012805FAA475A8655810C8F92B8D2A088A
49BF075DEB3CBC9528577E0EAF228BA967B97E800CB528E880E36926946A84CC
DC7C4DFBE4B841BF8F025595E257069A47979A1AD488627E97A5D010C7D7B9EB
1919CCEFA5DCCFA45FB5E6F5C91D33E6F388E1C1C7839B309F0421354ED4AF82
3FC9137D9E686101542A0830AC0D9A363D739AA91B44329AC890C19E0B312DB2
4894111FEA3B9E78F91554791ECEB97C06A56A945CA4A4A4DA60E9C9FCEDD11A
585524AC604119029F54CA5690679516C69324A87BCE67B45A8E0E7C9CC523FD
0C2BB3BCA04E365588B6DF5E97A6608F4FDB7EBDEA9F2F8D1000640AF2F7DAB6
C750448F7A92F72EFEC73C72EFDABDCFCCDBAEB6F4E16902630393BA4A1F3BD1
B8490BBFB1C3A0C6CF7962A86B26F3AB70A8D25526BAD00D4DAE73DB39BEE3B7
90E1D778EA2294E84A32791E5E96831F20AD8E052072B433E5041DF32C69E0D4
F050660F51649E94E2E4C0A29284FD2C9A8740851EDC442490FAE839F142D290
CD8F7AF8845CF78D4BE9C7F2E4DC00372532B7A5BA59945F0D1E677AF88B804A
02E9BA9C87712276836F4DD29D9B14C25FA8C2E8F6CDE3B28720EF13D11D12B2
81B0D37FBE4BF01A7ACD72502D81A9F7AC2A2F6C9241DE7DB9FF51AA964B0EE8
1C32D22F40D4E6D8AE494CF8272AD6D095FC64A4FA8D39B08B35641FEE00260B
500D1E3902D306BDF393ABD5FDB4FD28A6ED41D5F9A21559C307210E615B56BC
DDEB8E688933804EFBC6E426304797617B9815E5C1D06AF1859F45140A382AD6
E69933742BC03BF8D4CFF06C5B946E21D0F5A799CD011CFFE4CE538BC49DD4B8
8BC6F4D49FBFEEAB3F2E9FE6A9BCF82431E1FE33E745D31978E29ED4F37D57B6
1C96A427B9A412928EECDF403BCD3BC892094A5128E251260C8CEE49C4702019
9365941F774F8CB1F07D5498B68A580366AC13E2427FCFBDEEAAC67F14F71B45
0BC562A195E9F1CA35BCB4E6E27332E5E230434D41C9A91D2F6D8AEBCC0FD307
9EDA8D04232285A78C70D0D08155B5F74C62CB69B3F2B6CED65B8858853D8331
F371CECBC003DF54B7391950BC3BF98BB467DEDED13A24A54201197D7542BC10
E7F9CF2FDDFE83B006FE1A6D13CD8F297F9CC94D3224E75B5764B9DFAA97EA45
4B7FA5E13E7E40B950CA43B39FCFCE3085E4EBBE1887EE01FB77B3C18F8D7420
49016DBF2EBE83E22175FD33DE7F7281F28AF229119A2752AA2AD62BA6AB975E
71220D5E3D26704195108131959D62AA6D345373B58DF4002F04E2F442C635EE
313567B047C6B35C47D1DDAE0E00521E662CDC6883573E170F08928D7B75E13F
68D31203BF4FDA6F6867641456B8764D231F6E67A925C9AB89E142758EF9A41E
BB356F66B6CBDFE9D437F55F17C33AB41E835231B5058FDBAA07A27A116C80E8
37DC740E86068952F0A57B095C5C2D52F322CC455711C0147CB76F4723BB0226
4A6A3B48739C83BEDAB386C9B13FC9996591ECBE650E4D6B1B30248B5410C7C6
8DC45383A6470A21648D9F06A8359BAF6A18DC9B42E3255D9F5B6B98BE298A39
99D919618CB298D4B56B91A01E225A773224878068A9224DBC865A180BEB1725
360319CD3B6C808BB29CE0999C0817EAF613BDE7A2897E69408B6925AC50729A
5390AD55036DC8628DA7C0A7618327CF03CA722B49406D37C55A9EEA7F6FF823
03C2CC1B26C78B74DA6A52A4DE356AEE0560A5B2C02D360678126BC086FF6FFF
378E0AAA0718A30B8D06E9D5471B7A2E074D659C5B0561A34A2F1605CE97B9F9
F07E996E67B1730C0D64D471BDD24DCEA030AA03C684C1C89C0B70F7654DB9ED
F8305228BA8CC82092B06953EC634C8BD5A7A63F99C76DA23FB3E8BE62FBE7DF
36B2148573DDB07F5E27A40BBE00964DB325318C07E290980359E7E046E29182
F0F0D1F7D5055B426B1CEB2CD19CCA3E498E6672788DE2F61EF7006D89EE6E8F
2B7CD8572F94B028B708C01494CFF389FAC46B17549822D83D2978F0C710ABDD
EC6CFDBE96638BCDAB5B5C63C696FC7472C9F7D2039BD0F2D272C1A834E24BC8
CB518D7981761DE89F68F04AE0E61AFDF45FEA58F190043D1A9E8EB366AA299F
C67178BBC57EB673F38730E2C28D822E3E158A14C9BD02E00781B20C4C6894BD
CBA10A671A4C63C9D0A6A9BFAA49F87C4FC0A7241808AB8A493DA0DB3B5B32E6
F3D5BEEB8A2D7BF5E58BBB72495C099F1D6AC04066CC198989172D7838B09D7A
E5CCF00A362F172FB91CEA4DFB1C7C7682105E23A374BCA91885E7449A62DD81
CE07ADE6E6B2935B26BD94ADD389BFC649D880130B054334CBF42718BFC37FD6
202E62A4E2018D2C9204C441C636CCBE2B4B4972590BB01D053DB966B7D29AD4
2BF3C564785928E4CE7D352FBDE6EB1E09BC6C8032AB362D65C77F144A456D5A
77B0C43821F042E6D9ED30955B9E08D8BD04B6A33FE4897153F85738B8B4C883
B0C2426B358A2CD7AD380EFAC172D225FB2072E3AFC6E0AF422C91AC39A18D0B
21CEE508528C5E62F30713EFCD0C6E1D1FFE3053925EFB1C1A29059487E75AF8
2AA67D4C205294597B09384BC11B0F1096BB8B09AEC197300AC5C68153E7DC46
AC75E4031836536A9FF8FFA0FBAB6C9B5D06C1992CE930EE2913F287B3CCA268
A071C64D40EA659C24098088BEA26BF5A725FE56025D191BD82E4108FB815ED1
D54A3661DACC545C7C06D6F28A8DCDD13AEA4AD9599669F4EACA96CB516D417B
869F68F13554F89637A3099F1E6F704C5D05B3DE9003CCB8796F6141618B71D6
A0C183E57E6099B9E4192536830D9CB9E41C4099C3807A01337FA4063B870474
66804D6AAE9C380CA0AA2C44D0E1275E30BE3FD062801BEDEB1BA91843370C34
78FA5F3EF565FDCCB00039E2259431C05AE758AC6470333C22FE29D5C49223E0
E1223EDA803F464A548DB51DD56DD84D56199DB129442D4ED35DD408564E7EF4
74F381B059D2EEE887DAA334E2FDC585F1E45E61CAC2221B02EF8532A8962EF0
DB618EEEB9F1CACEBF7299500D3DE2165FCFC898D707553AA90560AA32BFC1FB
1353D8E46062A6306D7C7C3F523B2AECD6C05A0A8366D4EBC86DC9CA9C8FC97F
AD356E02CC507E81CADD7262FA3D6C4E186D6DC488FD13E33323F969C14BB298
0F7880873FE2B0C3B945FCCE0E01F764EC4EDB23202CC5618424B0FDC58C7828
5DA59DB52664C6E1AD1A4021E7D782D9901E78AA828FB9ABAC42443EFEBDA807
87A0F0A969EBA7C2C61AFE1C7FD58404CCF6E173D56F8D3D3CCECC39E2976CA3
496814414270F4A67574C6667EB5AE787380013313A6E11C75D16022627B875E
2A5A006C333DFB972F11B7020A2D36E903F851A54EFE91D6C9987BD4A34F0D4A
2C4E81DBEE2C34418B805EF51C5C3F8184C7446F17F0A3661C091D322D3FF135
7B446B13C8880EF56A23FC0EADF9D03849B9CE01575003819BBD14E39725330C
1CA0C559AD8DC9780426676724C864184A3E809E761BA76B9E0D0920C9326B49
9854BCB7C7CBCD9F998FB36512DBD85CA66FEEB463995EF7066EF0AFB220FE1A
50BD047372EDF021028D8240697E45A45DBCFD9EAC43E54B387ACA9492AEB601
D13C01F568CA8236BDEECC277C8D49A9D1BECB8C59A9F4763F2566A7A513A6C1
1F5765A1776B8D06259F68B9877CA7D618C9740E920185026700AA3854294DA6
2F57F8C0D066CBD371A4A0FF645A91B9258A37008484F27750EAEAE17A63DC63
6EE6CEA9566B528AB762B09723AC952E6D0DCB7D728719F0CEA7EEA796931623
6284A571A5A3063CAA9DD92C9048EBA35A1228DA421CAE132B0C35181C92FDD6
246567D330094B7DFC9E691906709AC46D6632950282A4CD40C3B8D91A403019
E16FE252C76C2147E8495CB3C2BF2D19E7D8E0132FCF3D02609755B814D2F9B7
D52EFDA805A84FA09055F4B9A89FB5659AF715D30803CB35BA1E03A91A608406
6D7FAEB32B64D6D37DD17C7B6C78392AA062A73365BEC7D1115ADF2DE08AF7B3
1448DFC1C98EE686B4A997C6FE528A33C4E84D465FE6FB031B48D904C5120D40
27D36EA23AE03874442F3FE5099171EB974085C36024281CD11B73A278E437FF
D71428B0D84F44171C48CF73E61764658A058E234468B01FE40756ED5627E1C0
49C42CAC123C976C6D8743F78DC7D08679C38C7E7C399B808C81A7D65C103575
63DFE6085FAD3790BCC95E85894F8359F04B3BF096B274A94FCD5719F163517F
B66E333C8B24CCA4F4B970A594F67A09C43611AC9EEAE94F2C9B4A24ED82B2F9
D5CB5D32B93F2CA8FA546DB1A5A2BF3487999E1327D0ADF92820ACC78B0793B9
F0307C776C250EFAB892DECBE1E9CF7F118F554E5688D5246D21E1C4B171298E
5E300A394A9E1DD257A096A966C527C855E5A072EEA5713D78F437DAE50160FA
C28C1C21FCF83DE763D159C51EE7A31E4510F5196DF93DC22D53B21CC59C1C95
98B25156DDF8176D929CF6922DA1704039DAFC5F90A93199BD45A3407A477D1A
7D972649F1E5AAA05725A0365D26908E23E6C11A20D3E8C9BE47403C757EDB2C
47C8FFB13F08DC13655D7241194A25388FEDA8896ED89585FF58BD0E3ACAC93C
4FFBEBC6007D613F23E810E14EFA9686AEA33CBBC14A90191909AFAEA9BDCE78
71DC58262FDA3007DA70EC6C4453AD18ACD9EBE68622562F7E2608060E2CC989
BA3E13B958C0DF5AAF91F50D9A6E3CA1094CAFCFD1AA6E87F704695C32C3FA66
07A0D7DB0B4C3E713FF2C1B9B9B53E7C2AB98E9FAE78A70296753508A06878E9
B177DF9D1711C6653A12A443D87E143EDCFA8F6F08F06BB44BD9534030A4D459
3C5356214C58108B155787439EF62CE27FB2A049346C8F1199E124CB8A788732
A709957CE23D39B600EC0B3691FDA05AF2A3FD4608C2E2C56EA5C8F822C59141
1144CE72E06B4019E62ADDCC2A5D4F1C948FD5F508EF79A6E58394BD8311F9DA
2D83EE0CC8AAC15778A233397B42D6F3E389C51E5696B0F3DD668BDF76A5F474
B850CE6400C544CDB704455AEC212BB664805A6ABBD010D85C3565B2ED2E163F
5C093F777A6B882F96B951F92E5D4E51D532F29BCDCC9EE06D59CBC90EAF9BBB
F55ECA16E6C8231463C898D5B8A110ED791CB407A7959F6668F66D3D48597A0D
1D28FD9D2762CD95B4BE8C22431014B54551378F52F29CBB2BFDE84254187F59
74B1DF0E0975D5431D458B546303CEB73239EA4B42BD9BDF1CFE6774250E0262
64EA6B1D044F85D6A1E672DD1096784ED2206D80192C2787656F69C502EADB54
5806ED3373D16487801F7A6CFE211D89E217CAF6881D65F8CB127FF9339190CD
044880D04A84C3711FA121A191239DE0D26635132611731EAC2F77F346B24EB1
28DC42D7CE97C28789CB23DBE16BEBED01CB8DE3DB9DDD2FDE4C295151BE1F1C
9C1A407E38BAF13F7EA262D27BB30312558EC7AD3692E77A34193CD294F996F1
A4A8E408604369101BD16DB8A70A7E46F92001D2C18BF465FE7C2844BF832E4D
54880BAF264A4431884239A8DE0E622021E0CFDE12AF9ED20945DD7A6C6B173D
07D5203F8C21D9CC04E187BE53F8FED4F33633BA03A3D1F9CB8EE7E0A553ED1C
167611B98529389D46C775E966EBD24101C91398605EF9467750D982CCCD4B93
7C796330535735FB2F12E8DF9C6EF0F015C8184493FC6CD235660A1170816ED4
00EFD373D263AA62AC5F6B51795D3301080ACE7A8462EA4D0A2E3CE3EDA1EC59
EE43FA58DEE5D8326E1A9D0DB17A1D921E3306AB2B2A0EAE2EF6681A050A1DFD
CC768878F88AE90E87FD781289145C5D862147EE3C628F9A334F62DF98CEC11E
91273A1462E031C8959F392DDBA187B24F6075F39DC5E1DF623E1CDA10F00AC0
1C286AE887979C2FA424A13E91220E40F11CBA7C15D695F3947BC776B062381C
25057FEA90D02F11A4C96F312E7BA4F23F9497EDE5276D2E75E43898FCEC21F5
09B2CF0F2423C2904D3139F00CACD6246FA607853A7B1D55F04D2AAD7D1332C4
08C18C647FBC4AB1C185D9D9037832AC20085EDA0954F8CE227028F10E36B814
67F992CE0AE4FA23E512640BD887EB65D2F4C5B17E298172BBF1045055F162A0
09CBF703FD54101BB80A110C2FEA10748F81DFDE2C7EF5B3C5422806EBA4D2DF
543D9736D46BF9E112781D53309A054F063DFF43BD4DC9648135C5EB0DD6004E
AB05E713C34C35EAE0B4828C6D311C890B95CC690A3E78B57B908980447EA9A4
AA17AABB95D0B41A5A86074D3095B7A1E942933FB399BA1D1DC296BAE0E9E354
60A54CA23292A902C1A2B93AC197F513B27501361CDAFC36D5786B1943A28A4A
5A91789529C5A59B07C199F94E3DA50AF9C3AA06100A7ED2E690C3B5B252295A
4CCB9D4320925AF1FEA65B17FDBBC6389FE3AF63F5DF5FA763D8FD3889D306CD
872EADAA457FCE853E384D8E084498A132A127E47EA5DEE197B62458F69B6E9F
731B075C02BABE20B60FCF888473890836421662B423C0D3B1DA66DEF7C1C437
7CFC60FB3DEBD243B2BD25723DE6E914A3F183CCE2E71222CF34B0D07E45C567
2A15ED3D21E158EDDA88CD0092634C4938793050CDFCC7D359B463996137E387
40C5DB6760F27EF31C45E92FEA03DB08FC5D9090EAB1386545156D49DA30C013
E25FEF37091723377A30F5DD2F41EF30E19785D144B9DD88BC2CB0ABC575DCB8
719981359E51845E3044180DB5BA5D3EC18EA3453197B5521333C3ECD529F393
F7A9075AEA04EBC6FA6E3E864C1CD9FC1D08AC1A4ADFEF6D072B3719FC609D79
89D0C22C7C6C2DEA7403DE02C3B15716A62629DF6DE6BDE1DA40D44230922D7B
8A9E05E59200E4DDC04356EC6CA515D68E4059226E0C6365B4BEF4E79A0A60F1
8EEA216ED74D4BD0C51B54B5C77B96DF6EFD38C498DF5E556C0FDD996FF3C961
C020CDE0F0198DA96155E68E5D4E4D5422F22A8BBEAE8EEFF2C8478FD8141228
EE027845A0D3AC7A84420398B08D2892D3EBC9577B1B1F3F7077A9C8CAB84CA9
4EADD49258C371159F0D61B7E12BDD2F042248127DD69AEAED3D98A7D157E62E
8B375B710EE1DC55A0C923CE39FA059F2DBA1E5502046DBD4BA7D013D5E78C93
2BB3B1B624B25AE6632D7842638BE4E6AE9C04FE42D0D6311772886B332D13FA
82460C04943B1A840CCA56ADD2519E9924BFC3EE5F0133FCB8C93C144FD17EAB
19192BB65781F8BE7502516932BBC41050B9FAFE993CBE3B5951B557D62C7728
7BC66402CCCDAE4770EC72BE8E392CC5B31955E1270999E600419540893DF871
E16F52290B1D22DA6A0A4C3788CA5648FD3266964847E789FA11D9907AF4D3ED
CF0267A48E640FC74EF5726A3B3C44A5BAACC01F119B7FC93523C45A98B426FD
708EF3334514C0474D77B555E4C866B5D7D2D944EBE0524AD03E77789FDAFC84
3F9B84CF64F65F5C986C9EE1AF23BA1C1CD6E1C3A76F93A2593A9C24A1CDD079
5800C3AA97EDE42EC548626C8F51C2434A063F3BA7E5B56A998E506C7E1609FF
4CF27F4ADED601DBB8CCC9397353C23423AE63D8E15573D12B77414032B63988
301D55F78BA7EC05F73F4DD9A48E3FE28152517E4E15D26A74E9BDCB2D4780B9
B415179913DC9A7A34DC1DC20860A339F9B36660806308D8540E0B12183019F6
01200E8C8E6D7527C665B9D50FD32FA1999CB88E34656ADD93070071AF67DC28
21C5A31677FBDCFE76E6FEB489B3CD8AD2C5DE776267F3CA8E1E4DD8F65C1E98
C29EE3975AA9A6D6CF9E33C062BCBBEE57B6626035C0EEDDB7439D03DE51C493
D726B0668BB9D813FC292A572B4E8A4646FF6928C2AF3D239FC55CF30CE51668
3AD817D86524132066549F95CBAF7F65ED0394CC3A3836DE8429A9619D47D459
F4F919629DA2C0DD4755BAB8D03BFF44F22EA3669A5F4C5C74DF7D2C59DF2A8D
383A09E26B44B01AF5865BF2739290BC7FFE4C557C5E7D758F37ED81B86C0359
A060DB1F9281CFB8BB836235D8E0E4F82F23552EF111946F163CC89CF70AFEF0
1258128C368983BCE2AEC95547A8E3EF7339327CE3E61D6A086379CBAC9A4A05
31505DAEAA2316FF4872F6FE68207F3A056FA639F9DAFD02A3CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C2D462F1
A71924DC798B57B6D5D13738CB2582F75CA7F1BAE6B9A8B0E31D2AE2C7723DE7
EF1E262B77314B252928C6699442358D53C590CBF6D0C1B406F3DDB54D85FB94
F4F66C7DC21C22595CDB358A007D8CAB42412D8D6638AA0D62613C595D1E9AA5
448AB0EECCCBC6EDAD098CF976BE53A8E2F5D2A4BA6EDA8B1095B381096178C6
DDBDAC4BEEEA9A039505936488E7E94479E6F02D75E2FCBA18607B510B4ED51D
B6F8520C261ED5549FA6287B240C140D3234EFFE4D089D9B450B8E946967403A
D3AE666EA92F348B20011F78FE6D542317CCB82B906D58ABEC0C1485BB092E90
6E7424CC62AA9E61A47258A0C9B8A990E9AF27AB9182812F516DAF8BF9F0F7D9
86B1D4352D3FBA9AE6B0AE4D83681CE09B1BAABAD5DEF2C0EBBEAAE575B67C26
D06A35A0D394EF1A332D55D86418FD79975C870E6D88A5E7E0269BAB29E63CA9
1A99D4E55FB18F6C6A2C175D46C65DE37427737C529217CDFFB40C1CC5E799B3
728AF8D6A742D6FB17DCAE007F67FA45EF0CCFC2AEA3B4E47F70BA2D5AEE9FFA
E5585511048432F2E80E18174791A6E15E13987EB96A2EAC896063C7418B4BCF
C127A9AB30BC2073A5FBF9F7673E1A4D816B85DADE28C0C67A74F8126AE35689
E82EEBD48F301B04F46631626586FD77921C79F575FD55F8C5DB71D0F0661BB1
48ECD50C24465D47ED0FC01110F292DD03458F742E5D683AE6962A9FD11820D3
75EB93355AC26199AD691B6C151921F0224BB5106D833CF37922E07CFED3EB04
70827DFC12722C995F9D7908EB4EB1A43174F69B796A4E32AD623A665C8A060C
64533D2B36D1C2501A00E9AAA7C0B4BF4F92601CD07D583F3D5216D8AA3510EC
DDBE29741201F3B326C4058F2438D94C9A0DA688B13F692FFB9EE32F0F94CC9D
E769CE637C09051029C41C5A021DC3E3809A14E029263DC79B6F998D537E1E4F
59F97F2A13C26713620ABB8A9E63D2692454A9B6A140828C9D09F76BEC0E3417
C58846B36EA8EA698BC11529F972DC2B9D5940DE571877B0A231275AD10DC9D7
145F99F16F9AF65DDC2D2DDA7E57BD2FB7618B4236391216C1F404E089DBE95B
9B5D63507E5C6E25A675C2032F5B70B838E4310670F11870886E1C254A88CACA
2481C23AC80451A2CCB7FC900CF3E81957986D78A1B5C6AF0EECF94EDA1380CD
092EE529170B82672715B6FCCE554DE9BE77149F7CDDEFDF6AD4BC9BF80F3188
A55927B2E7B3FB059814C123CA62478537A6492B618815B78E76D1E4F1DAB681
1B1027FDA813497CD4BD2852A2FB53DA74B5AC563512235D6F65BE4FFEC81319
11F2A6E3A7818D6019FC1622A8F4308B26C4760199541525ADF55AB7F3D4519F
001BEFEDF3B5F9748F3265112C5C449A8B06E5E9C35A222CA0A3902CA56C8D8A
92DD3333BC92E01622A6216BA2D69E11BE79B33B1FDD9637C746C73B77D2320E
AB325185CDB2C1D66408A671405387CA88D3E224CEE861D2894CAA4AD7BBB0F2
87460E60E88B89FFD655E0147EEBAFEF61BFD649457BAE23D642D2DF132DEBF8
CCFC44BB98A7440207EE7854D81CFFB79D7910F0397398FB4257714C25B20CC2
54494C72ED471DF04F89857E9F7F7DE95179875F21FCA3994D0B0421D344C8BC
2610FE98E609E6BDF94CD7BDE47B105E13164CE1E177844678F29451140206E3
DEC0016B15F1EB96D5CCBAA6F264F07057B95A15D3B8F74B1D3101578C35ADD0
A8D9D4DADB64A7700075588C874F557C39572C91C79CAAF2B2388FF6CA1079FC
8DCC158108BE01B14747369E037993186D57B74D8268BEDED04246B2492652DD
D3D3E1EADA0AAE2511A0731F4CFBEA451BD48C15D194B7A273BA928FF7D40143
7FAA45A7875DE9FBE63BEFFEC23FA20704D1F9F8AB6F71A4ACCE7F37A15EC744
6C46844FD2327E6B8D0FDA58FED3DCB051A5626469EBBD2CC3AAFD73199411A8
11144339FE0EF2DEECFCD5E0AD8AFF2BA278D74ABA7D7F6D429CF84A77281339
9E29277A0D834B21E121BAFE7BCFB7B77133F13621553C54B09562D674E9B100
E07C13C21DE04212F82732BF4C2D54BDEDA8EC9FEDDA5ED47EE10356D6168652
7251C0375345CF8060296BC7A86CF5488B04AB67FB08062FBFCF0E730CB3B7A8
F76F9FFD6020B2604390BE751F0F3AC8746AE06156B8DFF94E853CFC496A047A
230D44CE626F06B447B8DE8271F471EFA967DB962566B38EC4D85A8C953D3402
E47D3F6256325437EF1F238C8C935980287D9474DB1A7F3EE4CBABD29AB33B78
F4D90D6136C752DF1D512440312CB41FFB6983E90B71B5562243D7153661DE69
065AA0ACEA46DFB6A015D5012D26752ADA9152440E2F30378B0299923333C513
7171D46DACEC92047EA4E4227D0E83F0DA03E44E91EE051EBE44062A4CDE2C4D
CBC3A71F2ABFF02BFD572B01F17BBBBA0E10BB4F6863C1587C09CFB052316D4D
96E57440D0CC6DB889AB224D8CA16AD3B4194DCBD2FB66C44CCFE98859CE27C0
8FBC05291063120165B4379B1A4DC9D967DBF0F609EC096036351451AE7425A2
6CDC319A31BDE48CEC0DAB99A669F70EBC4901DF9C5469C868EFD49272668B44
CF01330EF8FEEA0DD4D2C7E80850B49E6AE486C2149AB5368FF41481D6B8DE86
62E73CAE558AC3FA584EFC5ED60AF6B276713EF5869F582AF9C2D26A6C7A7737
256C6A801B16C8ED115437A8EA8CD328F31FB6D60587C3FF1A6C11283200B83A
849EB440CC7226756524C0FABD33553FA71C10A239CCBD5711618EB284E0040F
2B3660BABBC1DFFB65AA474FCF20136E448E120B61C9B1CFBE3C57C6A60222A5
C6ADF8C6FF656F486628AF926E274030339DB091453B27A39ABDA1974EEFBDB6
3EBA9322188FA30CB08809DF8774454EF384C3FE28C017EAEB2558F831D7A853
8FF1F732D0E3BC25BCB88E8B1FA0E9E224F2D827AACA130EF87B79062FCE3A99
15BEDA60491A69DD4DF0D71A6B7C109BAE2A87F9F7F9215A4DD961564D35EC7F
43285ACD288FA609DC30C2772ADF6DB9EF181C65193048B7544787411E184CB7
6B5FFA315D1B9602F3F17472B1D620613D72EBEA85F34FC363789B4DE5E639B5
0D8F4EEB7425340CBBE92862923F31B8FE9C75C0F505BE6261EFFD7F390EE3B1
2312F51B3512559F1D609D0ED4BE1C038EA627ED64658353BE1CA3769040F003
E9221117AFEF21255A08232EFBD5D5F7506BFD050AF0DAF05760671187A075E0
F09CB31C059ADB0351F9DA69C9E396212167ADE22B5728F5F9B1E60889D97FAC
2C76A037DBD29CB89F48CA3794406CB57F20E678DF666D31CE2F53E9BF2BCB01
902D82E4EB6BC1D263A3F79D0144C74A96F6CD2A907CD9398069A573964AB81D
02D6182078F31BB1DD166D07EDE6454270BE0140F6365B1C9C1670B8A568F690
91BF0FBC9AD619AF7C3141F3AC228154EC7DBB3A58840236BA90D553D86CF2DB
DAE1FA97D2920568999A59AD14685C049D0ADFE3AF32FDCC748D4A2A0AE8620F
D24CF4C248948E397F8959BD6E6C845E2379D4B42D8D19FA6D540368BA9F7FF0
57805A1B8D41E4680A8FCC7996AA504054BCB21818D243551EDF472DA46570BE
CF8F9D80DC136F67951EC6044F4FC8A20944EC5A405B0B04E6CCCDCABAF4E5A9
71B226E8EC30D58429131673D36625877888543DF9BE9FB5C703FD8322FDBAEF
D98DDE6A86C8F8699B19E2514E39AFF4C1C5EC64895EDCE15A46FFDB831AD616
1DCDD67FFB74C773637429CB45EB3EC3298DD9662416405BCCE8D41867F10A45
181FF9F61F8D79A3639ED39E843DA393E08C38B1253D45C14DFEED6C76BC1BAC
B556C77B569846D272D13834756ECF1483BB2A61BB52C4EB6B7FB30EF1846516
35FA581A19FFC9B611740F46E273B976BDD4C754325E889BDA3C5BA3A8F966CD
BB11AE8C6F9FBC8342F32A6BE7B225AF9D076A6465686B6D30A4FF7E0870B757
5D67832B87E025992C81E31E226BD2179365D17659F0393B34E72CE680042CA6
83B123A05C55EF84A24005F524A46A9757A61917D367257A710B796DBC7F9685
ED49D86A517096EE83B6414419F5E85244AD89C95368D79B954A992F1CA1643F
75A6E0FFC44D262207389BECAAEEF046BD92348782194BBD9037AD4EC6722D85
C5D65A7F6F43EBB6CC37A363EE76FD62DC5057567FBA01A821D434C4B893E723
B94186AECEE4AA3817307EE1EFDAD968B21D0C77112AB99ACD7FBA165FF099E2
D5173413B3995A7DB9B4C56C828F8587F6EF3C63A26C4BF383C94DB6272EE22F
A8FBA3FBA9591A1D4949A68C1F57865065B9C16A576C1E3572850C7597A65A9B
217ACF63C815873DC3496F6DE0DD4D439203CBD0291F03932E92CE531307A388
E898729757B9730E0CD3285D6FDC3639BA7736F51C2A208BCAB3D3C9D240070A
A49C340CDFB18D5C7675CD3DE77880A4437ECCCB3D7FD9F691F34F583EC9FF04
ED46A1AD57C7B3F038A7614820E10F58BA7CE24243C4829A70563C3285F230FD
C0B1C8E66AF7CC6273BB96CF880E9892434B9CED332AE162EEC85770D8509E70
3F542EEF57BB334A8B9A1D5BB894A0F043F0877DC1063341E30B49E0AF725F33
C1522522D8B549718A388E9C7A5B2306053AB76C142B36FA36A0471F0F1182E2
48DB1347F42BAC7C23287322A84D10CF5EE66EC1CAAE29FDE9A27730B81E36B0
E3AC051E6654E378D800C941C1092F4FF2D03D6ADCF97B5719F7886602A0A075
851040A501D3B14BF47757273EDB5BBE050D2F3A3DB09C279C212F6AF9B7DB05
E93585560DB7A3501002252AD7B574C8411EF65CEB56BE25B9455CF0E2129E9D
5960D70D5A6B7DE4605232752EDEEA07D80E1637430EAE317C52C12A5656C7B3
F16742A9937FE6A96C2F4B285A75CD35248213B783E813DB58E0AD19A26C4305
DC537767FE7AA653AC9907A9C532B0B7890C562A902E5156B14CF9851847926F
4D6643907C77765177666751D0AE2AB43E7B31A652D1AFE2118B0836DC31F617
5DA8FDF167348D2C82A64066B00B9F9E10A9A7DF82C1709D96CDCD5C34626B40
613682BA8F55603872B728A8BF39C73780DE327D7111F02544D8F3142FAC2827
C5187DE2A6DC271CDD7BBFCF1E80EA31B708DDC32ECDEC1C574EE68AE90E31B2
C698D1CBEE55968EEEBDAB9195ACC646A3CEA908DF0423326DFC2A455157B13F
EC1BBD406BF3C9B11676A98AB8DC8B253A1FA329EECDAD7B622FF3C96C68D4FF
95397434C0F263A84B1115DE3B4654B265A8B7F619FB1C654B754C7937F678F6
4FDF207974AA20C835DB9E74C2E94E8F92735A1DFBA5E70BDAA612AAAD558603
98B7C5E4CDDAF1DEA46BC01F114712A8557FD071945A638CA6D2A831E62E21F0
A0B0D2E3758301F6B146A2A2ECB4663C7AE7A4D713ED5078D3B9FA37E8058CB2
A90D028F6CAB73A2F2ACED52D002AC6A12769C9C668B90462F99F904E2BE8463
357D83C3C70DDDCF0FFC905392A7DB137EEF6F9B96B184B57906FE52F3A8ABAC
E340C8960E28621C1D369618C2BDE157334F54048305FF26E8113444AFEDBAB9
61CD40A95B857B1C0B7CE0F811CD7F5F34BD542F7329D6DB9D7EC1A522635065
4F42969A71ADB8DE02E51DFCEF72A7B6EF0E818A6448C1FD16851BD347FBC6E1
769AE3FCFCC55877840A1135E1405C7EF583387727649751592A143E8D5A159D
E5F977420C20FAB4B034B31FCAD6B7A727742EEBB61FAE4C096B85AA8408E179
CD54E0E8695F8C92EB33721DAC788A7AD30570F8AF60F727278A2142CFD0DA1E
C2DFE45BAC2C8627F0C0577BFBCB242A138392AA9DCDA7FE4ECAB46070EB7B6B
9704B3487F39AB47D213636D1468E60B3AED40485AB98BCD0E3B8011A55FB1CD
4D8834FB2CB20A8A6569ABAB97F21B8E333AB95902DEF3E3D305DA74A6CBCB4F
502BFDD1C1A92CE2EDB48CE9F69477C819EBC5E9C638E2A058EE2076C77CC024
5765D770F9CC1C005E0E01371CC753545A2410BB5A4669448997B59EA95CA942
13EFD22F45A95E977C62D5A1F4BA6B717966235A62EC1FF6DC65FE59ED0418F6
CFF797125C7E252837095BFEAC00EDE5DBDC5D346AE84DE389590D1BB9D82D9C
85C5F7C172EA403AF89303AAEE1FC91B75A90AF99293091C33B8F0F2BBC3B328
86CE4F6B16CA930CA8111A462E533351AFA4B4E5946524C7B4D543ABAB00A1E1
D79081462E3701D5B399D96938F3FDF31D90D499E39E83E4AD91AEFE55D060CA
415362050ECB9A7C3AB8AB6C697AD5845D58DD2747B7F6C1FD5174F5EC78D1B2
379918C8034B0858893FFE248BB93568177386BD88E7939404D2232734DD9B74
C639A295D808662B7F771B08E89597394FC627C1D04D6E3705F05C752E2CD594
D05B15173D5A85A7C58E02FB01223D0792C9E78F1F0B694F1EB9DB7A136CADA3
BBEBF94FDF4C1C0D8AB9DB1C4EDF7F1982539FBBD85CE0B994192330E9CA13D9
C379F6D4BF688ACAF9F67A367E143C796A0A76858D65B37ACD6745664AA06C3F
9047FBBD9B8EB0AD91804A740DAAA914520EDE2097309D26995DFA76378BF839
C4F64FD5682CE86CA4A71F71CDA3E2428EED77B3191FF2B7FC8BF3AE8B6F5E9C
82246C7F9AD5DA06C4D7F6CB65990B7D718F6A16F933DDDC891E9EDE0F18ED26
CF4ACB665CF384897F3E5156C9C207F4D522CBC2B8E78D7E1ADA023B8D0586E8
4D43A52DBCF7EE48E3313FAE1C8E1F9A6E1FD9363B7CC06828FA7AEF04615E0D
55955F4700CCC455A521EF5A9CF1F4ED6B93CCE82EF2DF66AF526C4D3723A90C
F0636E3B4CF27D1F0D909D5404EE055BEBF63E296F910967F9C48B10AA019220
E6607D3DFF14466DA8EB9AFA0334B71F8FAA0D71F814BC6766038F7A17D436BF
9B87FEED4792659E7EBA4669632CB07D3813F871C07E725DB927C4A31F098233
4E79EFB7E3B370A6190039BD94F21DCD05FF887330D1BBD7EB9526BADFAB299E
AB77CC0EB53BDCF9FC767A18B14840B5FDB3BED95862F2884FFFA1FC925DD967
EF465C7319221AD70B3B3321E57F36710D9E45EF3C791B05165054260CDFB040
AE74B8D924E48E7D26F82EE75D47C78E207D2824F6E97E893277026355FDD1C3
C40F2D73104612FA58833A4EFA28EF131D9FCEFBFD625B7348402BEE59368220
EB2EC57A6C33036354C6BF79126C436F4C14079CD216A6C58ED7D050A72EF304
80BD30F59B2EBA3B7CFAA89CE01362B903531BEE28D7319ABCDFA4A21B5DE536
B34845B32A3096DEDAA0598AA85D1A40DF5386E11E1547205847E9512E14E680
8D98937A7AF5F2E15801E0708687B052204708054B780C53D467D0FE46560B44
CA4FF989A4D77F1E278D6022AA04BC6B893BA13C1A07155EAB53871FBA392FF1
A0A02F21B630E2D0D5F8F7162623954EA20A929B6F235FD48B4A4D7154644142
834F073E7FD4CA4A4FCA4364EDAC9AA4A8F14F949E0A263C8622F0457716366B
8AB304D0720F34242166828193FB7F1382462D6AA2DA88EB80DEEF32355DC3BC
02F3A6E9946BA059DD88DACD456940D53D9D2C4B706A00CC6F16ACDF1FCD5149
A3986E515F357FEEBC1AA84D4DEE30CC4133F3DB5FC92476F22676DD43FC6F18
924E69A0FAF4203A8A977E8D306ADD9E203F38CDFA104765ACE531EF83BC0C64
EA78309545337E06532CA633F8FBBECDC7A5CC2F4DCFD4D988543F5AB8B4B5F6
C9A44057E82E549A659D7410AB730A748521DD52E46A5489495F4E48FE517FAA
46C0AB04C0E1008B486B01B2357A2AAC32CF65FE3618A34A03E194FD04A76BC6
39504203584BBB1EF0126BBE386A4DC43CFEF348D2617E273FEF70F3DE86E720
D3F736625BA1A7CD7DA7010ADED0D6792072EA93E5660E17043F5813B0B61808
5B32C1AF604AC4DE06354A284045CE918B3EADF22C8AEE536F7BD75D3134B781
7CFD5F0A5FE69DC09AD014986CF5DFF274FA14091B21873C964FB44700D03DB0
9BE7391908F963BEB364BC57CF068911EFD0CFB2D6E53D04028AE61E758222EA
9858F587CD46C76F0FC53F88315F0545E31B480904EAE9D1A7946F2F5103434B
6371D43FA3BBE7695E88E0804A06EA916C925DA20726A2682EE3A5B1829D7A69
9139665CD54CB5D48A90B179BC7EC5343593DEC0F909F3F12CF929BF443D987C
EFAF8EAE58FC7836B09442D90DB1AEA614DC3D851435B6A24A44494F99B5BD32
FED7F47AA7DB38FA58362AB9435915041720103E32165A072718A9943C4C2F40
516AEC96F0129A6F8D4369EF2508839E0AFC36106EAB4CF5BB9853C3EC0EE8DD
C954CD435B3232ABA69722D05206B8F71AD2D09F89C5E1EB3AAA4F12C642D0F5
155A2042372B518FAE2557F438DF34BEB4F916F7465A5EBF6B7F14B8887F9A21
CACF3B3C51C5ACBCF5AD5FA45B0EFCDEE327F495B0F21FBEA3009C648656F3B0
5520CEC4A67518C8BF2F5D0E68403033BA2C83C12F2150C65902C7CA1B588476
BB13A7A5B559B891D5B1AF2474E45333F0B318BED1A2FC784E5C5109EA16F63B
1BACBCC82F3BB83EDA3320A36D29EB6045D4BD546E95160EAC5CB6ABCDFDDBE4
B5AD57E39A39F0A9295F802786B006A01A109A8C87EE96C48D8CC0A447B3AB1A
2A9D76664F69683421B85FD4D24DB03D75952BEB98F2F50212B6D2F5E8063E99
2E2010A53C1062051D0EE5EDD688405456002EB0C2D572737338A5FDE760D25D
A4EE5FCBF584C9C7300024F029CC9C4AA87BCD080291A7D385E9D724C4AC1A6A
45BF36F082BBC643053F2569A52A6FE249C96E7B6810BB8F0AF65470920D2EC5
C2ED95AAAFF80BDE1F35ECC2245FFDAF0BC3BA27120DFF61E7D6023A5554B577
FA44C3B89C7255A43429E7C21EA2FCDD456AF06EA5DCCA5E6BD177BFCE8088C4
BE6F00151F612B7A94705469251BF2780C3BF9CD9249ED195C4228C1E78F2A3E
85D711CBD2E9FFB55305BBA148EC726D639DDB4D3578E9DFCAA9D4676D29C9BD
A6E28EF60FBA561D814C833EAD9A57AB12A9A9D3AA34815546C8CA27F25D3E0A
DAD9B80FE362F5E849ADCB03C1474FD9C0E023115A3119C020EFE30F3E286589
A951194BB37A26F3749E97308D8A3073DF10A087F691F1EBCFE028FF245ADE11
82C693F816F5F2500114962E610D7B2D06C8D2879B8D5E3A5D7AEB3E5897A22D
87115DB650543BF3A26FCBBA81B07AFC1A0E94D5F55B38CBA463DA29ACD1CEC1
E4FE2660E3DF58FCD65AA3AF6F5A8DDEA278D337AB12E7A5439341551B2D6212
2EF000D83924205067589BF3DD3C8C2B5A96BF0E921CC49B27A40297B6A0471C
AAFA243153AB2B96D87CC584E2FF1D3297352E35C2588C904D214BF501E39330
C7325B86F7964C35411F69F22FD8E7E329BCD29A724AE402E841029C6624F44A
4B8D39484987DC12A81C1300149B9BEEE1EE3B133ED53C9FAF16507C597F04D9
182B3F1673AF46C5C480DCE287B2945BB63BE19734D7FB0837E6D4834E55F1E6
30309BFFB8339B886B2F184AEB0EC0B07300FB64F50D278643079187A8D2A1C7
49910E6B8B7A6B181967B753ED7C6CA58ECA168FC3E91E76D92EA98932C0CEC7
BD5453ADB24993D19749C7FCEE1F220DEFBD5E19E0533BEDDD8232D54F5E2DB1
E850B93372CC84A3C6A182563FA85BF709533AEEBFD6DB6A632C7B921143DF58
A880D226265EB13FC896A973AE98FABA39CEA4AE5B0C88B5284420FBECB14556
2727D51B7D713F6C9D6E9D1A9001FE636691A52B305A7C3B312A669769DA7D5A
6492B15DDACBAC1620BCE6DEBAEB995C708E85A5B2543D0EB27D2E93EACC6DE1
435DF417905BE9186686583FA828E292F3DED7EA96E740E1B93D0FBEB32C5703
6C109A304BF10658E6128F3F2F4DACA2C2F71F7F2347265FC5A7FAAC672EFE29
CD280760255E827489FF27F9E3C88BCE96FF81F19BE550BA2F2CA0002184ADE8
3131A77CE940B35A5BA846885B1CB518A40404FF6B2B0DA8731F37B21D125846
1B9F586FC2DAB40DE84D12F939116E50D5D43C08932DAF8055821E038A4D990C
358F5154A8BA5FEB08F6C90A3966D5C7F2B87FAD64AB6B4348ED749CB19E05BD
F21BFFB63A8B9F81765B7367881F1D3ABC49DB9E9FFED61A588CF465A38BC309
78458BB651A7E5561F47A4D20FE602C02671EE6DD86C1845EB36B5AFC29776A5
C5CD86ECD8D500F951767AF33F88145F7F2BAEFA5EFFD573A2CE27EC76C5F361
96E5AEE4B404008860EE2CEC06139329266448B53A64376201B507B92E99DFF7
1D4911570F9B73FBAB17A0AE8D3BFF81FD5678EEC6D78D5677A6AC1BA8B46A8B
54C0BB633B0CE58974B30A7500BED9D2F41A448404827713061D751895B342AA
98663DA46206E75BFFF829DA78EE002F467E2ED2FE946AD49768FDE35454487C
540F94886E6085D63720EA510211FC10B0A70E8C4DDA735541F46089C9DBC601
CAAD5FEA78A9A2947B5DE41927EFD3189BFCB109AA5039C378AFC7F0DCD464A3
FFC914AD4265F33AFFC5F139B35FBE764751F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusMonL-Regu
%!PS-AdobeFont-1.0: NimbusMonL-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Mono L Regular) readonly def
/FamilyName (Nimbus Mono L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusMonL-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-12 -237 650 811} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B89290699B50C1BF1BAEFFE
1F57BE7B5EA025241A248A6D4CFA5067A1DA6EBA4CFC940599BA3F3C934D7248
B8E4AC5816F0D2CE8B3C4193CE39D19FFFDB75254573173CB51CCD83C2F2D06B
2483CF9B07B21EC6F502F028C273887BB06DAE2AFAC10E9FD3C7CF51BCA7B277
B706E425302DC78975AC0E43B87073257A5CD7424B6865FCA89D886E8F95C4F6
D457623DBBC0D16BAFEB4C649F5D72B09B18502EEAB687E915E9B536A361B4F1
44C3CD4CC683B5F05A4ECB4823A5EB5179BB7EEE8B76C21B2491A97808F6318B
585B0BAD98F42FB4A755BCB74CD354F794C8BEA5B90FB9681BD5849D45247E39
930C882490230E1662D39CCA875BFFEAC3E79A78DE6E1298ABE9817AE98675C4
16220AD0D3A36580EE2F2A17AAA1246C416D58A4C52FBB26AAF3B6F75833AF8E
3AA996218DAFA571FBC7CAD90ECE9C883C813D8F168C5E86BBFA0F0A5CB36E35
2DE4CAA0F8D3227F72C5056BFB5BCA6BF9C60E037A0E44670A8D3CBC9A19F379
CA8DB30B711F518A8C7569211AC70C46EED2AF62A37F238BD0BD12D60332E673
C6E784B3EBA3F2E71E9993B97E8A38F85048937E958F1CD8FC6E661048546135
56B810FA1FF611B96495081C04542DF7FEF085DEC619DC8C84CC57683D212813
9D14728AA32723E1D15F2AF8F03422CFAC472615E0E7FC7EFF06419D43D12C80
AB86A8ADE9327E54958AD7E77BD6A58A19A8E843B400B0EF658DD1A4D8A46970
B4C3191D8A4E8390FEDE7D4DBE7D4DCC8E5F7C56F7122FA54E3897703115EC63
8AE7573072B94BA1AD3A99908BF3B1FA3743AB177448F013E82CFB4AAC767928
A57CB378F900F83D458624EBE6A7D0067E3605B993F5CFDB502635117336387D
170AB42F95FD62934E4EA330B8A48154D410482DA1202736A20966EB10A2A8A5
7A14B7F2D4815E0733979B9FE7F888ABC36137C2137DE0D7EBBF2323C750C674
1543654A34C1C67C390186CE712378CC6217567E4237E92A3EF7E4B3FFC5A421
EEFE780A9E6A964221586204FBB205E243C953608656A6EA9191FB546BB34338
E9CF17EF1AF57B30934D33BCB97230F1F85044E95361E31324B0F048C2F099F9
085FC2395C8F5A89348C414095D3732590B5E767CC184E9759AEBEA33FBFED92
3ADF87B75E8CDE74E37C9AB7F35D50296B0B4189328CF15E5DC2EE5CD4FC85CE
C5A85A6059067CD3DE740A28533FE2F14590626BBB11347F5815E0FFF7BD1B15
072D732D073F4FCF983F6E922F751B981FCBA82AD0C8D6B4811AF48F65A36B03
99A326E0A57B695C70C33A4D4F1488C39AAE61A41BAC6A15727CE914A23413C0
CA57A43E7425065D6CBBC712B23944236E528DD56974529CD78CADC41D9815A3
64DD46D9E3EFF7643DF718FCF9190B3B86C38960B5D418A3D4AE53CD4447780E
D76337619F86AF1FB6373D0CEE6B46717AC744B1D6E9C29C2E65C25A7376AB09
51A98F66890337D903C5B59737BBD6C22E537A1985F09FDEEC439727DB22005F
21BF23B5A47ED5874D9A3D81B1D2FDEB7B58C32B7EC61E25A04D9693D78163BD
216D3ECEB117A738E3585CFBDF46AC09FA17B14F61D5378232B80EDB42A4D5DF
1451CB00F77716270BBDCD97679B9709B2B129796ADFC7E958E434402D7B35FC
32C14EF45686927A0A136D522889627824ED0DA1BFEA292DB6BB1ED1885730E5
70A3252AAEDB3183D3EEC87358B9A5A10AD65DFE9859513047015152C6ADA49D
ADDFABE51E2BC590052EAC34F2AE56D633B483593A036F894A47E520BFBCAB4F
55BC6F0E95986808AE3B197E89B591B339FE0C57290D964A14302E8F9A8BB3E3
663F7299AC949DCA6FF96DF1D61D2CF73A17AE73B085F2F608E4B3FD8F7E1EA7
49D415F719E022CBA49FABD2B63F76B1731DA34398F8DBD0F2868C7144055A80
7F57BCD3B1A703EFA9A8A5C76B0F25FF7E8483A98025173809BB3B0ABF9CD194
23FF2B7870983E112277051225916015FB6D1E80141E288ED4A2B0FD35F21D0F
33F06C25C9D13B7EE066D6C4811F8F4C232E9B57650D50CB35C7496A7AA13E1F
15030EA41B1E721FB0E23746B9F8A98B3C2A58DF176667500E58782156ED7737
34596699148CA61639BC210621851001B624686BE4E5328555771EED2E03D507
AE66BBEE79E19BFA8AA7A8D8DE53381FB28546088942206DA44650D7F1388245
F6C6BCFB1CCD8EA30EE808BCB0EDDC23BA660BD583D36156DAB0E57FC0C028F4
5960790B1774778583C64B49F8B1A0516777CA6800752DE99FB1AB18BEA21792
0C2AD4318417ECE4F631399197646928DEDEFB0A2B19553DC227F7C1E2D97BD8
7B20D735CE102C0F60A9D44BFDBCC0027C40E0F9DE9385F79D598998FCADE704
A102AAB8A330B36B22482CF96FD2696A48C832F41C5C22996D8C91D104F88377
7AD1B0FFD5C8C14C34C3638C8EA28ED7C459E375FDB205B8CE97B2E416A8809B
C6252FDAE3573F67A51662367833673F7FF134434641D2BF3CA3B929414B1B29
EDB53F00CFCEF86DB4F0C65399D0BD87F6DBB5CF39C981133CCE565A47244948
A1CA07D422DB05A9DDBAD2E69B4AE827864CD1D0B503CBE8249A14C37B54C54C
D69DAD2A5C2183103109D37EE7582AA955CFF7718F9B4EB041B9468DD40304C9
DC1D4D8A059876405158D9422E934429B55AE8AF654E91B8167212FB2D1F27F5
5E67DB8A021F37873F029ECF7515A0F23D18B36684FFE56A55E18E0B8D381F92
286716650CFDA57CEF6889E6449AB834ECB4EE4A7DA459CCE764AEAFCD6AC0D2
523F9C0CF249E2E689838710429175B88057E53C22816E801FDD83FFDA174319
87C9D27B9EB2020C908E6238208611707A3372F80E50C8C47F0CA3C9E9FE1E79
E19F8132DCA56409D28A7A0FB913916015C5A139DCF52D542774F1CB1DD6C146
ABA975D8BEEBD89DCEA01E8789E668261B55600A9A20EDAEE67EB74379472D6A
A2DA88EB80DE317B381149892DC532F898014BB352651CFFDBCBBABBA18E1643
76C728F23CDA310161CDDAE6CFA6052B8B7244E309D8D8602FE0008363A8CEE7
EE4689FC4BC0F89A7488A36BFAACAF2D63892A98DC4A082420AD0AC0FC3BBC90
1BA4289EDEB60D3BD6CC384E76452E5F7E12121387A62EE2DE9BFB34EFC8785F
C1117B43F208A3F33195238AA98A3DF4D154176673A003851DE425A8AF6BA783
A835A408F3A2ABE61D1117202663935BC91CA74D5AC59C9FC0E6CEEBF7774FB0
5107D8EE462228AA2611C4111563ABB27AB6E746CEBF9CE816B349CE7E2BD8C8
15CA35B7EFF8A256212E9EC4897DD4F12C7913AC7842D60CB4A26A706440E79F
43310E4B9C2EDEB66AD5DB1DC80645A5DFBEDC32C58223FB032506BA80DE16EB
F582A3D80351CADC60B733E50FA695EA1AB42E821798E27E0F586CBF2D967E46
8B2E8E763415D0514CFAB92C297D25B4BE338A65C000757D7DB940C0F9E4622F
14BF3FF5FF38E77DCACD3AC38364E795AA8B50BBA0F69C64237B9AF46C2C7CE5
7930679CC335C0550A7606F5D22ADEC865F1154930EBDE8107643EC1A422243B
FB5BB29381C0744C32E50F7440F4CB94A23EAD2B4F0071E0DE691DF99CB8E706
620016AAE08B908E5AC9039C06A5FF101DFF78BAEB6B92C114E7CC244189592F
58D27B2C18E58F18508FC05B5E88E68DB0EE1ABCE733DF29E92C1FAB21CDE8CA
16CB2BB841D002A3586E59CA6EF3D902DCABAAF2A2FABDA6C4A97009B252F342
FD8931C6A6CA855C1161E6610727336C75F3AF246805A802391DAD21B459A690
CDA5D6C76A9FB574C9D242FB8AD6C71D150D1BA062CF840C5D0CB101DA3DD33A
42E1504EF7025D7A358D8282F303BD989C3FD806B7F59EBBC14ED7BC71D66909
1521BF6739131AAC9614BB38EFA28DE86728F7959E81800355E907D237ADFDCE
99C8E610006C5A8AAE834A0587D990024BBE82DE17CFA1598DEFC33624D698D3
FA83EDC6E2540411B3D4063F144C89C4FF35EF81584ACAD95CAB483C9B77201C
C9AB52A92CF959CAFD2E6790AB45F6927C75540C3FE0EB837DBFFFAF3B888134
AB38B5B3BDC9BDF400CD61CF880F6B9A1B6B68F3CCF0B1836A57B8516847C08B
520AD822DC04982DCAD312CE4EBE815CD3826AF0FC76BC1B1FD420957905FA61
72F75BC78655462648506E87CD85E84C54E47C448AB0EECCCBC6E1E9405ADA3E
1BF030E67C7B8BCD803B4C9ED2CA50C0BB1C68CE8D7F8AEF58EC303E62B84EA8
10FCEBB29C12930D55F9C88123B62748256476032496AFF7EA7B25E27F7FECB2
51C07A0CBF632410D7D948427FF6720C2A4FB0EA09E150319A8AA055E3E63BB7
8B7DC142CECC074D19E6587FBB3C5D957A65E458F553F1B1C3ED08EDC81EE1C1
CCD679D993084C69C0470EA7EB4D60CD093EE453B1D8DCFBDA0C94C7AA56F4A3
52ABE8B76CFCD134AF11DFEBBE14A62F9F5823B7515FBC688D3A85522261A03E
F43EDC3BEA89F8C96908F23BA807FF9DBE66492B5BD8E36847640531DF531E81
5B5FE41D2AC970039A2F32E63BA0C8AD9D8E7513F2E3A8E00614DE8B34C7CC2C
8B9410CC8F653E3052810F8CB51FF38ADC96E2A5CC72928BAE3E61E71EED0184
02136FF6CC18ED155D1A470B19CFA88B9599539A819E3C6AB5AC6857414C84FD
93446770C3DD7431F955A5F3734F6931BD71F1B314845780F506662143AC7F27
EE86A53E3314F573D5D7CC3E498E6672788DE2864C3B2EE9A2B87C812F3DCDDC
E7C43BDD86591982539FBBD85CE8C6CFBB6BA8D8AF2C8CD5272A2FC2C5E6C959
5A25F131F93AC559297C632BC92D811CC6DABEB08B03330492CA1038FEA46B19
3EF6A85BA50BC75445E28494EEB11247B85C7BA5DF0E28C3DC3C483278A41D39
A5F3332699713A6D13C8F93D2A565C9C12C093FD89B3BC2BC786BDA32DCD59DF
1F2F8CE36A98F1E92AC4A52AA3EEA5CA67FDB417B5CD85285DD186D7A686C15C
E11822D38917765DB31E5DEFF7607E3878902C2ED8CA8FCE9D11698FED220119
F3CE1D6D8B76C46953A1B1DA0B0FA091CDFF685DCC73BA92EE81BF71F181BDDD
08AD98761FD285E9A38F23573AA92314B58F88EA628B38280605899D8A4C4A4E
5211BFDF572B8179AE7148F928DD9C97800246273DA18D1A428A91B5DF7E0518
2EAB8A2552D56AA3C47CCD8C1D6E639E7789A3406452D096CC40E931BEB00499
F42D9FDA38444B6EC2235A741134B101D1BA1572F02F0DC2172E8954FE7E4A66
EEB3288CA4FF44B9A8892BCAC2FDC9E32A0C8F86C172867073811C72312FB40F
2082ADADC1A0A3A691469AE5DFD01A16AE25B25B08AB2E160CE2328846864205
5E47766FCE0C6C856B3EB50B00B1ACFB2EBBC09D2A6219ACC6E08495C350138E
ECD08C67F3631AB786187031FD330E786715251C3C2EB411F1DF26E07068680B
8C052248B906AEC29D9DA4BFE3E9EA738AF1EA813B2EB88C720C901627A6010A
110BB3607BD58044C55311A052FB978A84ED5839D43135E3E16080657EAE40CE
85E8E74D5F231B3730D983B4FDCE645B2026034A5CD9EC8F7721313F07B1C32B
CEA034F240E1D1BFB8DD71B756404D11476BE68E839DD0A975B25496BDE0B6FE
EE1E3DF069ED437474AFFDB591B5077110AFD783B34BBA039100AC61BB252D56
C3812B91A9AEBF21A6B5BEC534AADB0D528C805599870FF6F28AA9C2379EF102
DA68F545890097F96533D448B995184ACD670DF655A2B953347414C499B5E054
7A37608297EE459C09D056EB0ED530A784DA70BFDEDD0A99659DB7EF0B3FB2A3
01B3D10F18E0E1E1B068C139C8DA2EA7A61240CA5C5C096BFE50DDD548ACD974
32442F69BAFB501D37243BB4B7F6B64843194456898484D5ED09EA4CD199A498
4E5D647DB3912821E726BD4CBA7AE8BF83E11DFBCBC20E23477644AA7201F6E3
1EF557FDFA2A73486C829264B058D399525D8D829E917B293DDCAEE45B97F17A
3438A2BB9FA0FB530A315E02952C4F82B7E490A2548C4F8CBC00199B1E26AB4D
9ABD1658D843B7536066C7CB408B4BD5C8D97C507AACD34C33F7A008424F6FEE
1E0EC4BDDD38F4596D438D1DA3FF7EBB3C297A795976B7A9FEBA78FD5E5FE4C6
E3956DFB2E80615ACA54CEECDB05842D87D099A660B676650871D5D3A9C3855C
ECEB5F2A7FA99CB897D6C39A05E800FC13D3156AFCC7661B950D0AEA453D012C
C6748915856FE50D44AB865B0D46B6BF7914B6C489502E197FA64B863164AA94
642A1CD146EF5C3B1C10287CB774DEFAEE0A4A4FE0A18283494E800D9B6B955A
610468882D97673A70BC841C93B487520B90054EE9DFF3FA3614033863454FE3
096DAD651D775AC0F01E93463E6D5E4ABF643D3A39E96233F9C3EC8AC99B7232
A60CEEA5D0B9A75F4494270CC46E6D554D613F1D011B623F39600745CA6B7E15
A5150776AA159D0B068AA950ACA109A9A4383DB36D86A4314220CC1848F0B10F
6A4513E3B02A8E30BCAA1CCD00A1D75B6C679FA3924DDF7FE8D0AF7FA7DBA9D7
F9A61C9B8F56EA1018819572E954EC0AAC8B981AE84713DE864F9D005C89D073
4E18A41B92FD75F5D015010E4B2BF726468A5FAEE701E74385CA2A785AF98095
DD061605EB3C312BCEDF3F7A422F8B6F4256659F92BA0E8BD32F7898DF297685
D30A1599288011C0BFF1FF6BC7AD84D3EFEB0AE28025D1CC96FD2D03A1BA252D
76A846C1FC2C760C11AF007F342068833F680606DDBCC23EF88D7764A94F2E9D
12DD5A22F9A99B47A84017FBA6B264C591BC5C9BA0897E711DFF02AF1F6B4B9E
FFCD165867848F9B3286C3AEFB183C0440F63EEF3C0ED308217E424C29643A21
EFD80142558A4512EE8B3B464EA3D72E5A0672A325C7F3C91D7AEDFE8EA5EBD6
974251067331F7478546A9F3B582BBC67A7385B519B1B0511E46F9D748271ADE
C4FB9DF6EAE064D784A44B418EFFDBF509A6D65BB2CC926B7185ECAFB04B17AF
C9E8305A5463B9C8202E4D3CAE567AC294F5E14B1DABCDA48C53E70026A6C7D2
F0DD46597346744210128E80DEF90FC98CF7C47AFE19EE7C54377780B0FDCEBE
67E66FA45678C25B93AADFAAA55E4C2FDB684FC5A51A4EDBD543DC03930F36B4
8779C45E983D9909DEE373D14513586AD5E371AF15993EC9C077A03560E06391
BDE9D019D8729AB35100BFFDC94BF3D2A73421F9D738DBD7B92E88938B3B26E1
F3D6DA978D71CBB2458A31002766242FFDA01A2F20D38B5FE1E9E278F81D4ACF
30ACD25B0D6175D567B84D06E0EFBC94403686C1208504423FD0DB3A43EF5C8A
B955CABE9FDCF0D0C98D97E9FA284F83DABAE0222FE9B72DB19A01E665721277
BDEA4D950BFC65FD406A43D94FDF051CF873148E21CEB633FF949FD226F9E6CC
DBE4AA9A4759D2DB09AFD19465CE92279389CB6EDA78C8EFAD4EF51F4C3E3E8A
4DC92492AA66A9B5875995CAC3FCB6BB8AE33D07F37BE3115627F78C543CA685
C779C1EAF3A2C7A07644244425D0B1CB916D3E5F19F1BA474833E5F8B2AD7C6B
D1FC4B06ED2F724A14B020CC82CA15D51E940C6AA8410EDC8EF6D0FAA4E417F2
70E582A5363E9A99259550907048C101B1F98BD0C76BCF805E7209A420D7A22B
80CB7737DE2537E7B54F5E1643E30046E87453D7DE94BD2F3951CA19DCE0F3E9
2C8BA31DA7E32D9E55D0E9D04AFDBEA497E867582A10D7F1F8514ADA98A9A9C8
47FD8B2F752FD9A1A2508DD30B4CEC6E77C7351EFDAD29824B8C0FCA02A13540
28C7041B2F8338C09F7F56E3F4BCC277FECA52B0713B474B16D62F3A52A0AB99
5C1B45E1286E3EA1B04036A4E0803FCD01F5FCAA5C9A6F7896F4FA7C5048C086
8EECFC3FF291B2E624482DCAF786C10BEDB739584F60DB13C7A6D559A3646AF2
B83590B2F1AC3A3F1C9E8D46568D0A7305ADADEEC573CDD9DBDDD561AD9478A3
CBBF9BE1DE1E36014C5E4B546CEC445793129113559E917EE30BCAAC115252D4
68CCF773F3D5F482480A69070C62EF58635174AD32947F829801EAD6AB1D5FEF
42C455555EA98AAEB83268D7C9A12DC744A1FDE78D9AA42A1B38006A00FDE3EF
2B1720EFD4515E0545A74377C8DD8292F21814EA7DFFBB52F64C66A5EBFB8947
4EB6D1477B447732394FB808E7CC28E8FFF6021E94CBCB32A765DA0B65F20E22
3B7BFAD83F76ABBCE0AEB499B4BCCA5FF992B299849979B16C98123CDED507B7
D5BF94A3790AA1FE15F4BEC5021D179C4F0564652E9765C4058027364E0E1047
2F2EAA2CF900087CA9889B31AA88D2B123DD472A01FE93EA14C8ED5E9949CD49
DD86CCB8C5D158B1215369A10A6F80A7399327D4D43B6FFC7B5C3497FB849DE9
5191E6BDA41016ECD6767F1F3004976BAF279C581634E789A5C10BC1E93488DC
C273143E753D5B867CD9F7E078D1DA94B7D89BD873CFBC936787F848BB9E224B
0BA4B135CC8709B34137EBE447A68F1A9E8D07D39236BDDF5936B95A2DB43452
C78FB25F02D3C225AE0733274256B42EC01BA2C8189D5556B71345AC51F803B2
6C0D76839FA5D28C5890E78A09AB656294A1B178692C1A9FCF409286611D14F2
F207F0211A155FCB44F4E525877C80FFE810F076D00710C302B4E5E8AD40D6C7
2ADF9C98773585EA5E4D316AEAC8CB4182A887EF4B2B209866CAD15F41F7AA0A
EDC115AF57A6320C8F34A8022214210B9DDF9783C39758F2DEB5872E01B20C5E
3CC7E40CFFC4FB38AECDEA912516F3828A9480D61796904A57448634286AAEFC
C802402D904B43CC0FDE715A12BDA15003F057E05D147A27AAA2684BF08AE584
333C38C32FE56231448D2D4FD987EF7D250F9865E3FE7207BCDC7F13F9C188FF
1D9C3BA73A8A85887A7B273A60D565A2A2CD4E1A158E799D50610BA45F200356
8AF44E2EE4DC9BE51F2D969EB0B7E169D0A3EC24C9454987D9A8FFE069E2853C
13A1479EFBDCFDB925E45B3F17BE776D928EBC5C2E791B87D4136A0506943305
5575EE2B52D2DF34C9508B4ECB16EAB8E169A5F197B2DFA31AF1544E5A4FE962
9ACD0120F4830EFED86917C5CEFF9ADFD18C0FE8DBAAB749F802FECA58D6E39A
107ECE8A3EBE7E645FC2811B21B8EB085BAB7D12B3B5F1AF9C403D65CAC4A7A4
00940B6CB82BFAB5BB2E73ED0578D79771B9D519C1DF5CACF9446FD3908090F8
60D024C0006150642DBF74F84A65488460352E7F6497C9C4BC364259B91096A5
6BD43D3E82F32AE0088A4A1D2AD1C11F7606C5484FB0E9D7DC4D1D2A24663AA6
A96DBD57E0710C7318C152697C6B1F1666B1942DB8937D1A4497FCA6C6801BE0
C84589B26816D538AD6C45D3F608BE8FB158E0B9ECE78897BFF01FB5C81D7206
446578E808C85D435FA03307969231251939229BD7F21B61CBC0F205D27CD5C7
F44295F69D6137DBE0F490067FFEF9E72F83666BF02750917263B0494BBA03B1
FC66332412737A6286A5A97EF8036E4CCB576456F27AA97073B3EFB871D39D35
7200742FB65BAE28DD52EEDB0A041C9FA95568E8F0F32FF73D0441767240D285
2E8CDA55EF149C3861AA34F3DDAB60E00392AA682150C701BA7342D32F498E3B
66E8C542C12C158FE38F1DB46C6710AFD45B3C5E6B0325EDB655E6F5A4CFFA3B
012398F16233D18EF3FD13BBFCF23842A46D722DE9F2F41FB52E3BA02409FCA5
2298314F089813973164CE5EE39B6BD6808FBBF4CA6E1685A49CF7A205296741
6E1B39CD09AD02420438BCC3C78EF0034C5A1B51A046F2E31995DDB0BB2E87DB
10EF8578B62FE85FB67D25E1BEB50862F718C3F79284EBB4FCEA21FB89065ED9
127679A42B2658B63212DE25324600C00B0974B028581FBD99475EBFF05230AB
A6013AE02075A1CB79491F05D36D1700C707D88122ECCB9B4850317BB69805BD
CB5252DD46B5F2998715448EC5924DA6CFAE9C932255406FD25B6A222959E1E0
5EDFFF4C9E6385B59F2B0B7DB26866CB441D17685399D28B1C00FCCDF26EB121
C60F56D781BBA22A2F3FD30839C8494EAB2A76B06BFA60032104B6445A0ADE83
1B4E70DC9FC0A8C269AF7F9CD9509043DC1AE79B9152C2770C557E0BC18E872D
016BA5E488ECA3B070DCDA989945CBC8EFCF4B7088119C2EC09D6663255E07DE
D78A529B83EFD43370750D2902EB5FD3FD95672C8878013C27AD31D408714E8E
7C016E16A770CB2613181FD00007FB8CE4E7A4F2735BBF2FD7663E33173E5C99
CBDFF32AF5A5CF2C43D952782EA8DB67200B9333A07A0E6AD8333F289DDCA269
AC1A0D66EE6B86D4CB4818213CCE18464232A3DCE5826302220B18E72C78022F
68DEE69AF8968E3A2C5A42AA419003CA8CA55E58F59C374DC675811E23B0C42C
D5C987569D14CA7C9C676A05B909021E7720C1A97D52F8B6B88C9314877BCF48
A966AAF2A40AE770571E5C7F936F0D6F0DACAB0DF99222E0E2855B78D850B4FA
903759675AE71B9813EEC31201F240B5ABA0354CDF58B256317D5524AADD5708
2CE1B616D7A1C3D17FC9563CE02E9DC04A2E50DDDB8BD7356DBFE9C155499AD1
2D083075FE2EFFC5AA1D2E76F129264A24C422B99D56BC3D873F58F5A8E02A97
3C05B5078FD2A3A300EBB9378B41FC3DBABCD5AE12DBBD63B137C6E880B80675
02722061F5BD2726632400350CF3579E64A049A167EFD8A23EB17A4436000FBE
EE11321D4E8A52D656492A2BBA00BC5176A508AC249178C7E3F9847A7FC088B5
91F2B099348845B23A755F460BB896D49500D234658246DCBDFD81B90539FBAE
B357B697A105BB1FC7F0FDFF080176C3211B9B72A4F7A73381D127036AFCB11E
2046CBF521E7AC5730F3F469229FCD2824EFBFCF62805F0128BD4E7F03CE7E7B
4F02C89C8CCA8DC01B16BC3EB2949F5094C0D09360F319E89DD8609B493E2A29
5A3C2A61939C288FEA9D2FAE4115485AD86ACDE3D1AA71DFB04790905077BB3B
31A8FE7536A6C33C78E341144E359E45BD7F3CC7399F0D7C695686A514AFC1FA
66774C4BD02157C611E9403556D2714548AD74233B87F2F2078B65FD8F61CCED
4DDB9E930FE9B7D0DABE7F6357B217BB9B99622BBF570A2ED0DF37E482435998
E1346341E3F25181BB9987CE9E9946D3B29FA40FFD1A607F305738071D79022E
7376291515826E985D75B84F7C9ABACA55F89A1271E0EE46F83C830F61F9B1E8
887347AA68B633950797966D386C8D0ABCE2C1D693A4596F555663B110085C40
B8B3C34E7E46415E4565AD3815620331F1912EE5EDC896C0F6B3924AA98138C7
B13A8086FA3412620C1313BA84DED46F134445FCD0DC57C1A79AB5239F25F43D
E008481B7E7E1B702F521DB5A356BDC3E00D60A6846317B876923B1384EE8E65
96C86A800513E6EB0A8BE1F61FC7222B85F5EA7238BE3772BD8776331D70A6DA
8892EB13C2231A4E4BF70F57B2ACBBA3C55C3E8120C3E0D52097DFDC2F0A01F9
BFDC19C591DC8A9861AC92B9D1AA510049E7EEEA8A6B74DC53AFF1CEAD88713B
289E120F9D8E7A5091F7E3C22A50A746A1FC570B157FBE22758CA3E9E2C211F5
5A5D1F1CE403A12E3035AE79461C4DF4DC86DB95FC22237716F3D16C4454ACC3
C8104BBD5AF18FDE161470583A1B61C0E8DF8301485598B8E94255073EED40DA
C02B821FA498EE0121B34C8AB3AC4F1F3BF27D4BB4120F3F459EE91D334F7C86
AB1C10FA3DCF447F1974B762610BD771E6F26F79A47126B1D240F542D3EF083B
CB98655C61C5C1AED849FE71C72D24060FA69BF073402FC86CDD4C4DC003E50F
313862190C83D94C3D515ED3E71887117D4652EECD027FDB8323478FC280619A
B474636044F266809A2A4AB6916A2095E4DAE1EE213BE7F1348B2F930C2F48D6
86907579C09A38F65B45DA338A4B12D61FE32FA44666527661ABB023DEDBF918
BE102A347876FB098D93AFC526DAD7D3E9FA26F5899BB735F6F3C221A21FA278
A19B6E4096B22F59E79D33FD30FAD24E15181AB8AAD3E0902F379B9E4B9CA9AC
D6403779F64A37BD62E2E7C8AC5611744DAF5381BC0A10A3027A2E8BE357162A
0A48725B3AD2FBCF3CA4515093FF1AF770973A1E84B97B67BC28AA8C1037CF58
D0579D3246B06694CD5C74819AB1D591AF3BE05A8309EE4372107AD7DE1224DD
8077E3C094E1BCCC27A8682E99F473FB72CC20B7C322DD07BA61CDBF98044BAA
7A8B8B39F69F3E226AA9A5C6106D16A51D73AA66EA856CAE27B7E205C546EC8C
53FED3AEA037C3DFE5A3EC004FE23E173182D4D98DB0F0B6F5D483665DA28C08
F4CB2A29B6C405F9666605DE1D44905F54329B4B433669E64F2F01DE3989354F
3EC3CA0C8B015B182F1811D000DE40F3684383410252E29EA17FB216E31F6481
091B7C28E63E41523CEF936EEA3D398126DB090834C6BA5A3774DF2F36A91833
8AB7E92FB874E3B1505DC0A5753B6EFB9594F518AC7585D1B5855E4A02CCB9C0
B0C8D6D00946C853A769D75B2A1479BDFFDBCCC82DF001D88C6DCF5E68070704
4ACA7B685CB9BBF8182D3E07CCC75CE698C32D69146B8FE30A34E9B8E676FEA2
A4D9B8E4AA5D9720FB325AD564B94B5C76D87FC4215406A86CDF8DC23985CE48
7F95068762460A0CEEBAAE9113C4140F00AFC130A9931E7EDF497CD1354EF361
C4CF7FA1716CAA7891605BB8853553003B61CD977B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (example.dvi)
@start /Fa 134[44 42 60 42 49 30 37 38 1[46 46 51 74
23 2[28 46 42 28 42 46 42 1[46 9[91 68 2[51 66 1[62 1[68
82 57 2[35 3[62 1[65 1[68 8[46 5[46 46 46 3[28 15[51
28[{ enclmec ReEncodeFont }39 90.9091 /LMRoman10-Italic
rf /Fb 240[45 15[{ enclmmathsy ReEncodeFont }1 90.9091
/LMMathSymbols10-Regular rf /Fc 136[97 71 75 52 53 55
1[75 67 75 112 37 71 1[37 75 67 1[61 1[60 1[65 12[94
1[100 1[92 1[105 1[81 3[105 2[88 1[97 13[67 67 67 67
67 2[37 45 16[75 28[{ enclmec ReEncodeFont }34 119.552
/LMRoman12-Bold rf /Fd 202[95 95 95 95 95 49[{ enclmec ReEncodeFont }5
206.559 /LMRoman17-Regular rf /Fe 171[96 1[98 1[90 7[99
2[90 1[96 1[99 65[{ enclmec ReEncodeFont }7 143.462 /LMRoman17-Regular
rf /Ff 134[55 55 1[55 58 41 41 43 1[58 52 58 87 29 2[29
58 52 32 48 58 46 58 51 13[58 78 1[71 2[99 4[82 2[69
80 76 74 79 6[29 52 52 1[52 52 52 52 52 52 20[58 28[{
 enclmec ReEncodeFont }41 90.9091 /LMRoman10-Bold rf
/Fg 45 26[45 105[40 48 48 66 48 51 35 36 36 48 51 45
51 76 25 48 28 25 51 45 28 40 51 40 51 45 3[25 1[25 56
68 68 93 68 68 66 51 67 71 62 71 68 83 57 71 47 33 68
71 59 62 69 66 64 68 1[43 1[71 2[25 45 45 45 45 45 45
45 45 45 45 45 25 30 25 2[35 35 25 9[51 51 53 5[45 21[{
 enclmec ReEncodeFont }80 90.9091 /LMRoman10-Regular
rf /Fh 41[67 91[43 4[48 24 43 29 2[48 48 4[19 48 48 1[48
1[43 48 48 9[82 3[58 62 11[53 3[58 9[48 2[48 1[48 1[48
48 24 24 1[24 44[{ TeXBase1Encoding ReEncodeFont }28
86.3632 /NimbusSanL-Regu rf /Fi 27[113 105[103 123 123
2[129 90 92 95 1[129 116 129 194 65 123 1[65 129 116
71 106 129 103 129 113 10[175 2[129 173 1[159 2[220 7[153
178 168 165 175 36[129 28[{ enclmec ReEncodeFont }34
206.559 /LMRoman12-Bold rf /Fj 139[17 11[34 104[{
 TeXBase1Encoding ReEncodeFont }2 60.7301 /NimbusSanL-Regu
rf /Fk 27[43 105[39 2[61 41 46 32 34 30 1[46 1[46 1[21
2[21 46 2[40 1[40 1[43 9[84 1[61 61 8[62 9[59 8[45 2[45
45 45 1[45 45 1[25 30 1[70 43[{ enclmec ReEncodeFont }30
91.3242 /LMSans12-Regular rf /Fl 3[48 23[48 106[43 2[43
48 24 43 29 2[48 48 72 19 43 1[19 48 48 24 48 48 43 48
48 9[82 58 63 53 1[63 1[58 2[72 3[24 63 1[53 58 63 1[58
58 6[24 1[48 3[48 1[48 48 48 1[24 1[24 44[{
 TeXBase1Encoding ReEncodeFont }44 86.7577 /NimbusSanL-Regu
rf /Fm 139[37 61 43 2[67 67 98 31 2[31 67 67 1[61 67
61 67 61 13[74 80 8[31 1[86 67 74 2[80 80 18[31 1[31
41[67 2[{ TeXBase1Encoding ReEncodeFont }26 110.419 /NimbusSanL-Bold
rf /Fn 138[82 2[52 1[82 82 82 119 37 2[37 1[82 1[75 27[37
4[97 22[45 45[{ TeXBase1Encoding ReEncodeFont }13 134.08
/NimbusSanL-Bold rf /Fo 133[47 47 2[47 53 26 47 32 53
53 53 53 79 21 47 1[21 53 53 26 53 53 47 53 53 13[63
68 3[68 79 5[74 1[63 12[53 1[53 53 53 1[53 53 53 45[47
2[{ TeXBase1Encoding ReEncodeFont }37 94.6448 /NimbusSanL-Regu
rf /Fp 171[82 89 97 1[89 104 1[112 75 2[37 97 2[89 97
1[89 89 65[{ TeXBase1Encoding ReEncodeFont }13 134.08
/NimbusSanL-Regu rf /Fq 134[132 3[145 79 132 92 1[145
145 145 210 3[66 1[145 79 132 3[132 20[145 3[171 184
2[171 171 27[66 39[{ TeXBase1Encoding ReEncodeFont }20
236.612 /NimbusSanL-Bold rf /Fr 134[55 55 3[55 55 55
1[55 55 55 55 55 1[55 55 55 55 1[55 55 55 1[55 1[55 9[55
55 5[55 1[55 2[55 2[55 22[55 55 46[{ TeXBase1Encoding ReEncodeFont }27
90.9091 /NimbusMonL-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title (Deep Learning of Humor from Gary Larson's Cartoons)/Subject
(Deep Learning)/Creator (LaTeX with hyperref package)/Author (Robert Fischer)/Keywords
(a, list, of, keywords) /DOCINFO pdfmark end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -41 -890
a
SDict begin H.S end
 -41 -890 a -41 -890 a
SDict begin H.R end
 -41 -890 a -41 -890 a
SDict begin [/View [/XYZ H.V]/Dest (page.i) cvn /DEST pdfmark end
 -41 -890
a 0 TeXcolorgray -249 25 4 392 v -248 -363 4259 4 v -219
-149 a Fr(graphics/TU_INF_)o(he)o(ad)o(er)o(.ep)o(s)p
-248 25 V 4006 25 4 392 v 2469 191 4 384 v 2470 -189
1425 4 v 2499 22 a(graphics/TU_INF)o(_Lo)o(go)o(_g)o(ra)o(y.)o(eps)p
2470 191 V 3891 191 4 384 v Black 0 TeXcolorgray -33
-128 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -33 -128 a -33 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -33 -128 a -33 -128 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -33
-128 a -33 -128 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section*.2) cvn/Title (Contents) /OUT
pdfmark end
 -33 -128 a -33
-128 a
SDict begin [/Count -0/Dest (chapter.1) cvn/Title (Problem Definition)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (chapter.2) cvn/Title (Expected Results)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -5/Dest (chapter.3) cvn/Title (Methodology and Approach)
/OUT pdfmark end
 -33
-128 a -33 -128 a
SDict begin [/Count -0/Dest (section.3.1) cvn/Title (Literature Research)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section.3.2) cvn/Title (Pre-Processing)
/OUT pdfmark end
 -33 -128 a -33
-128 a
SDict begin [/Count -0/Dest (section.3.3) cvn/Title (Humor Classification)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section.3.4) cvn/Title (Cartoon Classification)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section.3.5) cvn/Title (Evaluation) /OUT
pdfmark end
 -33
-128 a -33 -128 a
SDict begin [/Count -1/Dest (chapter.4) cvn/Title (State of the Art)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section.4.1) cvn/Title (Neural Network Topologies)
/OUT pdfmark end
 -33 -128 a -33
-128 a
SDict begin [/Count -0/Dest (chapter.5) cvn/Title (Relation to Master Study)
/OUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/Count -0/Dest (section*.6) cvn/Title (Bibliography) /OUT
pdfmark end
 -33 -128 a -33 -128 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -33
-128 a -33 -128 a
SDict begin [ {Catalog}<</PageLayout/TwoPageRight>> /PUT pdfmark end
 -33 -128 a -33 -128 a
SDict begin H.S end
 -33 -128 a -33
-128 a
SDict begin 13.6 H.A end
 -33 -128 a -33 -128 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -33 -128 a -33 -128 a
SDict begin [ {Catalog} <</PageLabels<</Nums[0<</S/r>>4<</S/D>>]>>>>
/PUT pdfmark end
 -33
-128 a 207 1167 a Fq(Deep)64 b(Learning)f(of)i(Humor)g(fr)-5
b(om)538 1449 y(Gar)r(y)65 b(Lar)l(son')-14 b(s)64 b(Car)5
b(toons)1383 1932 y Fp(DIPLOMARBEIT)1009 2186 y Fo(zur)26
b(Er)q(langung)e(des)i(akademischen)f(Gr)o(ades)1330
2455 y Fn(Diplom-Ing)q(enieur)1339 2710 y Fo(im)h(Rahmen)f(des)h
(Studiums)720 2964 y Fm(Ar)r(ti\002cial)31 b(Intellig)q(ence)h(and)g
(Game)g(Engineering)1561 3219 y Fo(eingereicht)24 b(v)n(on)1351
3474 y Fm(Rober)r(t)31 b(Fisc)o(her)-7 b(,)33 b(BSc.)1320
3612 y Fo(Matr)q(ik)n(eln)o(ummer)24 b(01425684)-33 4041
y Fl(an)h(der)f(F)l(akult\344t)h(f\374r)g(Inf)m(or)r(matik)-33
4210 y(der)f(T)-10 b(echnischen)27 b(Univ)n(ersit\344t)f(Wien)-33
4396 y(Betreuung:)f(Dr)l(.)f(Horst)g(Eidenberger)l(,)i(Assoc.)f(Prof)m
(.)-37 5444 y(Wien,)g(14.)f(Mai)h(2018)p 1266 5457 1205
5 v 1583 5570 a(Rober)s(t)g(Fischer)p 2589 5457 V 686
w(Horst)f(Eidenberger)p 0 TeXcolorgray -33 5900 3827
5 v 1350 5997 a Fk(T)-7 b(echnische)28 b(Universit\344t)j(Wien)578
6110 y(A-1040)e(Wien)p 1096 6091 17 17 v 75 w(Ka)n(rlsplatz)g(13)p
1660 6091 V 76 w(T)-7 b(el.)39 b(+43-1-58801-0)p 2476
6091 V 72 w(www.tu)n(wien.ac.at)p 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -41
-890 a
SDict begin H.S end
 -41 -890 a -41 -890 a
SDict begin H.R end
 -41 -890 a -41 -890 a
SDict begin [/View [/XYZ H.V]/Dest (page.ii) cvn /DEST pdfmark end
 -41
-890 a 0 TeXcolorgray -249 25 4 392 v -248 -363 4259
4 v -219 -149 a Fr(graphics/TU_INF_)o(he)o(ad)o(er)o(.ep)o(s)p
-248 25 V 4006 25 4 392 v 2469 191 4 384 v 2470 -189
1425 4 v 2499 22 a(graphics/TU_INF)o(_Lo)o(go)o(_g)o(ra)o(y.)o(eps)p
2470 191 V 3891 191 4 384 v 0 TeXcolorgray 207 1167 a
Fq(Deep)64 b(Learning)f(of)i(Humor)g(fr)-5 b(om)538 1449
y(Gar)r(y)65 b(Lar)l(son')-14 b(s)64 b(Car)5 b(toons)1318
1932 y Fp(DIPLOMA)38 b(THESIS)489 2186 y Fo(submitted)26
b(in)f(par)t(tial)g(ful\002llment)h(of)h(the)e(requirements)f(f)m(or)i
(the)g(deg)o(ree)e(of)1330 2455 y Fn(Diplom-Ing)q(enieur)1843
2710 y Fo(in)720 2964 y Fm(Ar)r(ti\002cial)31 b(Intellig)q(ence)h(and)g
(Game)g(Engineering)1832 3219 y Fo(b)n(y)1351 3474 y
Fm(Rober)r(t)f(Fisc)o(her)-7 b(,)33 b(BSc.)1225 3612
y Fo(Registr)o(ation)25 b(Number)g(01425684)-33 4060
y Fl(to)f(the)h(F)l(aculty)h(of)e(Inf)m(or)r(matics)-33
4229 y(at)g(the)h(TU)f(Wien)-33 4415 y(Advisor:)h(Dr)l(.)30
b(Horst)24 b(Eidenberger)l(,)h(Assoc.)32 b(Prof)m(.)-36
5439 y(Vienna,)25 b(14)378 5405 y Fj(th)458 5439 y Fl(Ma)m(y)-9
b(,)26 b(2018)p 1266 5457 1205 5 v 1583 5570 a(Rober)s(t)f(Fischer)p
2589 5457 V 686 w(Horst)f(Eidenberger)p 0 TeXcolorgray
-33 5900 3827 5 v 1350 5997 a Fk(T)-7 b(echnische)28
b(Universit\344t)j(Wien)578 6110 y(A-1040)e(Wien)p 1096
6091 17 17 v 75 w(Ka)n(rlsplatz)g(13)p 1660 6091 V 76
w(T)-7 b(el.)39 b(+43-1-58801-0)p 2476 6091 V 72 w(www.tu)n(wien.ac.at)
p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.iii) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter*.1) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 616 1012 a Fi(Erkl\344rung)76 b(zur)i(V)-19
b(erfassung)77 b(der)2956 1261 y(Arb)6 b(eit)144 1706
y Fh(Rober)s(t)25 b(Fischer)l(,)f(BSc.)144 1819 y(Staur)o(aczgasse)g
(8/13)142 1932 y(1050)g(Wien)144 2045 y(\326sterreich)144
2441 y Fg(Hiermit)30 b(erkl\344re)g(ic)m(h,)g(dass)f(ic)m(h)h(diese)g
(Arb)s(eit)f(selbst\344ndig)h(v)m(erfasst)g(hab)s(e,)f(dass)g(ic)m(h)g
(die)h(v)m(erw)m(en-)144 2554 y(deten)k(Quellen)g(und)f(Hilfsmittel)j
(v)m(ollst\344ndig)g(angegeb)s(en)e(hab)s(e)g(und)e(dass)i(ic)m(h)h
(die)f(Stellen)h(der)141 2667 y(Arb)s(eit)g(\025)g(einsc)m(hlie\377lic)
m(h)j(T)-8 b(ab)s(ellen,)35 b(Karten)g(und)f(Abbildungen)f(\025,)j(die)
f(anderen)g(W)-8 b(erk)m(en)36 b(o)s(der)144 2780 y(dem)h(In)m(ternet)h
(im)g(W)-8 b(ortlaut)39 b(o)s(der)e(dem)g(Sinn)f(nac)m(h)i(en)m
(tnommen)f(sind,)g(auf)g(jeden)g(F)-8 b(all)39 b(un)m(ter)141
2893 y(Angab)s(e)30 b(der)g(Quelle)h(als)g(En)m(tlehn)m(ung)f(k)m(enn)m
(tlic)m(h)i(gemac)m(h)m(t)g(hab)s(e.)140 3667 y Fl(Wien,)25
b(14.)g(Mai)f(2018)p 2412 3680 1205 5 v 2729 3793 a(Rober)s(t)h
(Fischer)p 0 TeXcolorgray 3541 5381 a Fg(iii)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.iv) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2709 1012 a Fi(Con)-6 b(ten)g(ts)144 1344 y
SDict begin H.S end
 144 1344
a 144 1344 a
SDict begin 13.6 H.A end
 144 1344 a 144 1344 a
SDict begin [/View [/XYZ H.V]/Dest (section*.2) cvn /DEST pdfmark end
 144 1344 a 144 1548
a
SDict begin H.S end
 144 1548 a Ff(Con)m(ten)m(ts)553 1548 y
SDict begin 13.6 H.L end
 553 1548 a
553 1548 a
SDict begin [/Subtype /Link/Dest (section*.2) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 553 1548 a 2982 w Ff(iv)144 1752 y
SDict begin H.S end
 144 1752
a Ff(1)84 b(Problem)36 b(De\034nition)1157 1752 y
SDict begin 13.6 H.L end
 1157
1752 a 1157 1752 a
SDict begin [/Subtype /Link/Dest (chapter.1) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 .54 .5] H.B /ANN pdfmark end
 1157 1752 a 2418 w Ff(1)144 1956 y
SDict begin H.S end

144 1956 a Ff(2)84 b(Exp)s(ected)35 b(Results)1077 1956
y
SDict begin 13.6 H.L end
 1077 1956 a 1077 1956 a
SDict begin [/Subtype /Link/Dest (chapter.2) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 .54 .5] H.B /ANN pdfmark end
 1077 1956 a 2490 w Ff(3)144
2160 y
SDict begin H.S end
 144 2160 a Ff(3)84 b(Metho)s(dology)37 b(and)d(Approac)m(h)1559
2160 y
SDict begin 13.6 H.L end
 1559 2160 a 1559 2160 a
SDict begin [/Subtype /Link/Dest (chapter.3) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 .54 .5] H.B /ANN pdfmark end
 1559 2160 a 2009 w Ff(4)280
2273 y
SDict begin H.S end
 280 2273 a Fg(3.1)95 b(Literature)31 b(Researc)m(h)1273
2273 y
SDict begin 13.6 H.L end
 1273 2273 a 1273 2273 a
SDict begin [/Subtype /Link/Dest (section.3.1) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 1273 2273 a 25 w Fg(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)271 b(4)280
2385 y
SDict begin H.S end
 280 2385 a Fg(3.2)95 b(Pre-Pro)s(cessing)1077
2385 y
SDict begin 13.6 H.L end
 1077 2385 a 1077 2385 a
SDict begin [/Subtype /Link/Dest (section.3.2) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 1077 2385 a 80 w Fg(.)45
b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)271
b(4)280 2498 y
SDict begin H.S end
 280 2498 a Fg(3.3)95 b(Humor)29 b(Classi\034cation)1320
2498 y
SDict begin 13.6 H.L end
 1320 2498 a 1320 2498 a
SDict begin [/Subtype /Link/Dest (section.3.3) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 1320 2498 a 49 w Fg(.)46
b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)271 b(4)280 2611
y
SDict begin H.S end
 280 2611 a Fg(3.4)95 b(Carto)s(on)30 b(Classi\034cation)1371
2611 y
SDict begin 13.6 H.L end
 1371 2611 a 1371 2611 a
SDict begin [/Subtype /Link/Dest (section.3.4) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 1371 2611 a 69 w Fg(.)45
b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)270 b(5)280 2724 y
SDict begin H.S end

280 2724 a Fg(3.5)95 b(Ev)-5 b(aluation)917 2724 y
SDict begin 13.6 H.L end
 917
2724 a 917 2724 a
SDict begin [/Subtype /Link/Dest (section.3.5) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 917 2724 a 28 w Fg(.)45 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)270 b(5)144 2928 y
SDict begin H.S end
 144
2928 a Ff(4)84 b(State)34 b(of)i(the)e(Art)1017 2928
y
SDict begin 13.6 H.L end
 1017 2928 a 1017 2928 a
SDict begin [/Subtype /Link/Dest (chapter.4) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 .54 .5] H.B /ANN pdfmark end
 1017 2928 a 2550 w Ff(6)280
3041 y
SDict begin H.S end
 280 3041 a Fg(4.1)95 b(Neural)30 b(Net)m(w)m(ork)i(T)-8
b(op)s(ologies)1567 3041 y
SDict begin 13.6 H.L end
 1567 3041 a 1567 3041 a
SDict begin [/Subtype /Link/Dest (section.4.1) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 1567
3041 a 85 w Fg(.)45 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)270 b(6)144
3245 y
SDict begin H.S end
 144 3245 a Ff(5)84 b(Relation)36 b(to)e(Master)h(Study)1457
3245 y
SDict begin 13.6 H.L end
 1457 3245 a 1457 3245 a
SDict begin [/Subtype /Link/Dest (chapter.5) cvn/H /I/Border [0 0 1]BorderArrayPatch/Color
[1 .54 .5] H.B /ANN pdfmark end
 1457 3245 a 2110 w Ff(8)144
3449 y
SDict begin H.S end
 144 3449 a Ff(Bibliograph)m(y)729 3449 y
SDict begin 13.6 H.L end
 729 3449
a 729 3449 a
SDict begin [/Subtype /Link/Dest (section*.6) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 .54 .5] H.B /ANN pdfmark end
 729 3449 a 2838 w Ff(9)p 0 TeXcolorgray
3543 5381 a Fg(iv)p 0 TeXcolorgray eop end
%%Page: 1 5
TeXDict begin 1 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.1) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2948 1197 a Fe(CHAPTER)3722 1197 y
 currentpoint currentpoint translate 3.26875 3.26875 scale neg exch
neg exch translate
 3722
1197 a Fd(1)3722 1197 y
 currentpoint currentpoint translate 1 3.26875 div 1 3.26875 div scale
neg exch neg exch translate
 3722 1197 a 4137 1197 957 426
v 0 TeXcolorgray 0 TeXcolorgray 1669 1653 a Fi(Problem)76
b(De\034nition)p 0 TeXcolorgray 144 2029 a
SDict begin H.S end
 144 2029 a
144 2029 a
SDict begin 13.6 H.A end
 144 2029 a 144 2029 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.3) cvn /DEST pdfmark
end
 144 2029 a 1012 4345
4 2261 v 1013 2088 1737 4 v 1043 3237 a Fr(graphics/examp)o(le)o(_c)o
(ar)o(too)o(n.)o(jp)o(g)p 1013 4345 V 2745 4345 4 2261
v 0 TeXcolorgray 1154 4508 a Fg(Figure)31 b(1.1:)42 b(Carto)s(on)30
b(b)m(y)h(Gary)f(Larson)p 0 TeXcolorgray 0 TeXcolorgray
141 4754 a(The)36 b(main)h(goal)h(of)f(this)g(diploma)g(thesis)g(is)g
(to)g(researc)m(h)h(whether)e(computers)g(are)i(capable)f(of)144
4867 y(understanding)d(h)m(uman)g(h)m(umor)g(b)m(y)h(learning)h(Gary)f
(Larson's)g(carto)s(ons.)56 b(This)34 b(is)h(done)g(b)m(y)g(ap-)144
4980 y(plying)30 b(sev)m(eral)i(Deep)f(Learning)f(tec)m(hniques.)p
0 TeXcolorgray 3571 5381 a(1)p 0 TeXcolorgray eop end
%%Page: 2 6
TeXDict begin 2 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 144 80 3820 4 v 0 TeXcolorgray 144 333
a Fg(Previous)34 b(approac)m(hes)h(of)f(computational)i(h)m(umor)d
(mainly)h(fo)s(cused)f(on)h(written)g(text)i([)3296 333
y
SDict begin H.S end
 3296 333 a 0 TeXcolorgray Fg(11)p 0 TeXcolorgray 3387
276 a
SDict begin H.R end
 3387 276 a 3387 333 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Yang2015HumorRA) cvn H.B /ANN pdfmark end
 3387 333 a Fg(][)3437 333
y
SDict begin H.S end
 3437 333 a 0 TeXcolorgray Fg(2)p 0 TeXcolorgray 3483
276 a
SDict begin H.R end
 3483 276 a 3483 333 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Bamman2015ContextualizedSD) cvn H.B /ANN pdfmark end
 3483 333 a Fg(][)3533 333
y
SDict begin H.S end
 3533 333 a 0 TeXcolorgray Fg(1)p 0 TeXcolorgray 3579
276 a
SDict begin H.R end
 3579 276 a 3579 333 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.HumoristBot) cvn H.B /ANN pdfmark end
 3579 333 a Fg(],)144 446
y(researc)m(h)i(of)f(h)m(umor)f(using)h(deep)f(learning)i(is)f(still)h
(in)e(its)i(infancy)-8 b(.)61 b(With)37 b(the)g(adv)m(en)m(t)i(of)e
(deep)144 559 y(learning)26 b(and)f(con)m(v)m(olutional)j(neural)d(net)
m(w)m(orks)h(\(=CNN\))g(in)g(recen)m(t)g(y)m(ears)g([)2852
559 y
SDict begin H.S end
 2852 559 a 0 TeXcolorgray Fg(6)p 0 TeXcolorgray
2898 502 a
SDict begin H.R end
 2898 502 a 2898 559 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Druzhkov2016) cvn H.B /ANN pdfmark end
 2898 559 a Fg(],)h(images)g(ma)m(y)f
(no)m(w)144 672 y(b)s(e)36 b(tak)m(en)h(in)m(to)g(consideration)g(as)g
(w)m(ell)g(and)e(similarly)i(recurren)m(t)f(neural)g(net)m(w)m(orks)h
(ha)m(v)m(e)g(b)s(een)144 785 y(impro)m(ving)31 b(the)f
(state-of-the-art)k(in)c(sev)m(eral)i(natural)e(language)i(pro)s
(cessing)e(disciplines)g([)3360 785 y
SDict begin H.S end
 3360 785 a 0 TeXcolorgray
Fg(8)p 0 TeXcolorgray 3406 728 a
SDict begin H.R end
 3406 728 a 3406 785
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.reviewRNN) cvn H.B /ANN pdfmark end
 3406 785 a Fg(].)144 1067 y Ff(Carto)s(on)38 b(Classi\034cation:)138
b Fg(Con)m(v)m(olutional)36 b(neural)d(net)m(w)m(orks)h(are)g(mostly)g
(applied)g(to)g(real)141 1180 y(w)m(orld)27 b(pictures,)i(b)s(ecause)f
(most)g(problems)f(of)h(computer)f(vision)h(are)h(in)e(this)h(domain.)
39 b(The)28 b(ques-)144 1293 y(tion)k(remains)g(whether)f(they)h(are)g
(also)h(capable)f(of)g(analyzing)h(carto)s(ons)g(and)e(if)h(there)f
(are)i(w)m(a)m(ys)144 1406 y(on)27 b(ho)m(w)g(to)h(impro)m(v)m(e)g
(CNNs)f(for)g(this)g(t)m(yp)s(e)g(of)h(images.)40 b(An)27
b(exp)s(erimen)m(t)g(of)h(regular)f(image)h(classi-)144
1519 y(\034cation)h(will)f(b)s(e)f(adapted)g(for)h(Gary)g(Larson's)f
(carto)s(ons.)40 b(The)28 b(traditional)h(image)g(classi\034cation)144
1632 y(task)j(using)f(the)g(CIF)-10 b(AR-10)32 b(data)g(set,)g(where)f
(categorizing)j(images)f(in)m(to)f(ten)f(classes)h(\(cat,)h(dog,)144
1745 y(airplane,)c(etc.\))42 b(will)29 b(b)s(e)e(adapted)i(for)f(his)g
(carto)s(ons.)40 b(Classi\034cation)30 b(should)d(range)i(from)f
(animal)144 1858 y(carto)s(ons,)43 b(culture)d(dish)g(carto)s(ons)g(to)
h(harder)e(categories,)45 b(suc)m(h)40 b(as)g(carto)s(ons)h(that)g(con)
m(tain)g(a)144 1970 y(depiction)29 b(of)f(go)s(d.)40
b(The)28 b(original)h(task)f(is)h(already)f(solv)m(ed)h(with)f(con)m(v)
m(olutional)j(neural)d(net)m(w)m(orks)144 2083 y([)169
2083 y
SDict begin H.S end
 169 2083 a 0 TeXcolorgray Fg(5)p 0 TeXcolorgray
215 2026 a
SDict begin H.R end
 215 2026 a 215 2083 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.dogsvscats) cvn H.B /ANN pdfmark end
 215 2083 a Fg(],)j(the)f(question)h
(remains)f(if)g(the)h(same)g(is)f(true)g(for)g(Gary)h(Larson's)f(carto)
s(ons.)144 2366 y Ff(Humor)46 b(Classi\034cation:)149
b Fg(Often)40 b(carto)s(ons)g(b)m(y)f(Gary)h(Larson)f(also)h(con)m
(tain)h(a)f(punc)m(hline,)141 2479 y(whic)m(h)24 b(will)h(b)s(e)f
(extracted)i(using)e(existing)i(optical)g(image)g(recognition)g
(solutions.)39 b(The)24 b(extracted)144 2591 y(text)31
b(has)f(to)h(b)s(e)f(considered)g(when)g(trying)g(to)h(understand)d(h)m
(umor.)40 b(Here)31 b(recurren)m(t)f(neural)g(net-)141
2704 y(w)m(orks,)41 b(esp)s(ecially)f(Long)f(Short-T)-8
b(erm)38 b(Memory)h(net)m(w)m(orks,)j(will)d(b)s(e)f(applied)h(\(TODO:)
f(REF\).)141 2817 y(The)e(main)g(problem)f(of)i(these)f(net)m(w)m
(orks,)j(is)d(that)h(they)g(ha)m(v)m(e)g(the)g(tendency)f(to)h(o)m(v)m
(er\034t)g(to)g(the)144 2930 y(training)31 b(data)g([)720
2930 y
SDict begin H.S end
 720 2930 a 0 TeXcolorgray Fg(8)p 0 TeXcolorgray
766 2873 a
SDict begin H.R end
 766 2873 a 766 2930 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.reviewRNN) cvn H.B /ANN pdfmark end
 766 2930 a Fg(,)f(page)h(4],)h(whic)m
(h)e(is)g(a)h(ma)s(jor)f(c)m(hallenge)i(to)f(b)s(e)f(o)m(v)m(ercome.)
141 3212 y(Another)38 b(goal)h(is)f(to)h(ev)-5 b(aluate)40
b(the)e(resulting)g(neural)g(net)m(w)m(orks.)64 b(Hidden)37
b(inside)h(them,)i(there)144 3325 y(migh)m(t)i(b)s(e)e(some)h(in)m
(teresting)h(insigh)m(ts)g(ab)s(out)e(h)m(uman)g(h)m(umor,)j(esp)s
(ecially)f(since)f(deep)g(neural)144 3438 y(net)m(w)m(orks)46
b(are)g(inspired)e(b)m(y)i(the)g(h)m(uman)e(brain)h(and)g(function)g
(similarly)h([)2924 3438 y
SDict begin H.S end
 2924 3438 a 0 TeXcolorgray
Fg(4)p 0 TeXcolorgray 2970 3381 a
SDict begin H.R end
 2970 3381 a 2970 3438
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Cichy2016) cvn H.B /ANN pdfmark end
 2970 3438 a Fg(].)86 b(Ma)m(yb)s(e)46 b(some)144 3551
y(neural)40 b(net)m(w)m(ork)g(la)m(y)m(ers)h(will)g(ha)m(v)m(e)g(their)
f(o)m(wn)f(dedicated)i(function,)h(or)e(there)g(will)g(b)s(e)f(a)h(co)m
(w-)144 3664 y(detection)c(neuron)d(inside)i(the)f(net)m(w)m(ork?)53
b(These)35 b(and)e(related)j(questions)e(will)h(b)s(e)f(in)m(v)m
(estigated)144 3777 y(in)c(the)h(presen)m(t)f(thesis.)p
0 TeXcolorgray 3918 5381 a(2)p 0 TeXcolorgray eop end
%%Page: 3 7
TeXDict begin 3 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.2) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2948 1197 a Fe(CHAPTER)3722 1197 y
 currentpoint currentpoint translate 3.26875 3.26875 scale neg exch
neg exch translate
 3722
1197 a Fd(2)3722 1197 y
 currentpoint currentpoint translate 1 3.26875 div 1 3.26875 div scale
neg exch neg exch translate
 3722 1197 a 4137 1197 957 426
v 0 TeXcolorgray 0 TeXcolorgray 1847 1653 a Fi(Exp)6
b(ected)78 b(Results)141 2155 y Fg(The)31 b(main)g(outcome)i(of)e(this)
h(thesis)f(is)h(a)f(mac)m(hine)i(learning)e(pip)s(eline)g(whic)m(h)g
(is)h(able)g(to)g(classify)144 2268 y(a)f(carto)s(on)h(b)m(y)e
(funniness.)40 b(This)30 b(pip)s(eline)g(consists)h(of)g(a)g(pre-pro)s
(cessing)f(phase,)h(training)g(phase)144 2381 y(and)41
b(testing)i(phase.)74 b(A)42 b(similar)g(pip)s(eline)g(for)f(the)h
(carto)s(on)g(classi\034cation)i(task)e(will)g(also)h(b)s(e)144
2494 y(dev)m(elop)s(ed,)37 b(but)d(it)i(will)g(b)s(e)e(adapted)h(to)h
(m)m(ultilab)s(el)g(classi\034cation.)57 b(Classes)36
b(include)e(di\033eren)m(t)144 2606 y(t)m(yp)s(es)42
b(of)f(animals)h(\(cats,)k(dogs,)e(horses,)g(etc.\),)i(di\033eren)m(t)c
(settings)h(\(culture)e(dish,)j(stone)e(age,)144 2719
y(outer)34 b(space,)h(etc.\))51 b(and)33 b(more)g(seman)m(tically)j(c)m
(hallenging)f(classes)g(\(con)m(tains)f(go)s(d)g(app)s(earance,)144
2832 y(con)m(tains)e(marriage)f(con\035ict,)g(etc.\).)144
3115 y(Secondly)-8 b(,)38 b(the)d(mo)s(del)h(will)g(b)s(e)f(ev)-5
b(aluated)36 b(rigorously)g(and)f(the)h(hop)s(e)f(is)g(to)i(\034nd)d
(some)i(new)f(in-)144 3227 y(sigh)m(ts)e(in)m(to)h(the)f(neural)f
(structure)g(of)h(h)m(uman)f(h)m(umor.)47 b(F)-8 b(or)33
b(example,)h(if)f(this)f(thesis)h(sho)m(ws)f(the)144
3340 y(existence)d(of)e(a)g(neuron)f(whic)m(h)g(\034res)h(if)f(and)h
(only)g(if)g(a)g(co)m(w)h(is)f(visible,)h(this)f(could)g(imply)-8
b(,)28 b(that)f(the)144 3453 y(h)m(uman)34 b(brain)g(also)i(has)e
(neurons)g(that)i(function)e(similarly)h([)2351 3453
y
SDict begin H.S end
 2351 3453 a 0 TeXcolorgray Fg(4)p 0 TeXcolorgray 2397
3396 a
SDict begin H.R end
 2397 3396 a 2397 3453 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Cichy2016) cvn H.B /ANN pdfmark end
 2397 3453 a Fg(].)54 b(The)35
b(existence)h(of)f(la)m(y)m(ers)h(that)144 3566 y(serv)m(e)31
b(certain)g(functions)f(migh)m(t)h(also)h(b)s(e)d(w)m(orth)i(in)m(v)m
(estigating.)144 3848 y(If)f(the)g(net)m(w)m(ork)g(p)s(erforms)f(w)m
(ell)i(in)e(the)h(test)h(phase,)f(then)g(this)g(is)g(a)g(v)m(ery)g
(strong)g(indicator,)h(that)144 3961 y(the)e(deep)f(neural)g(net)m(w)m
(orks)h(are)g(actually)h(able)g(to)f(learn)f(the)h(h)m(uman)f(h)m
(umor.)39 b(This)28 b(w)m(ould)g(op)s(en)144 4074 y(man)m(y)j(new)e
(researc)m(h)i(p)s(ossibilities.)141 4357 y(Another)43
b(imp)s(ortan)m(t)g(result)g(is)g(an)g(annotated)h(ground)e(truth,)k
(whic)m(h)c(will)i(b)s(e)e(facilitated)k(to)144 4469
y(train)31 b(the)g(classi\034ers.)42 b(This)30 b(ground)g(truth)g(ma)m
(y)h(b)s(e)f(used)g(for)h(future)e(researc)m(h)j(as)f(w)m(ell,)h(suc)m
(h)e(as)144 4582 y(comparing)h(h)m(umor)e(b)s(et)m(w)m(een)i(Gary)g
(Larson)f(and)g(other)g(authors.)p 0 TeXcolorgray 3571
5381 a(3)p 0 TeXcolorgray eop end
%%Page: 4 8
TeXDict begin 4 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.3) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2948 1197 a Fe(CHAPTER)3722 1197 y
 currentpoint currentpoint translate 3.26875 3.26875 scale neg exch
neg exch translate
 3722
1197 a Fd(3)3722 1197 y
 currentpoint currentpoint translate 1 3.26875 div 1 3.26875 div scale
neg exch neg exch translate
 3722 1197 a 4137 1197 957 426
v 0 TeXcolorgray 0 TeXcolorgray 773 1653 a Fi(Metho)6
b(dology)79 b(and)f(Approac)-6 b(h)144 2026 y
SDict begin H.S end
 144 2026
a 144 2026 a
SDict begin 13.6 H.A end
 144 2026 a 144 2026 a
SDict begin [/View [/XYZ H.V]/Dest (section.3.1) cvn /DEST pdfmark
end
 144 2026 a 141 2191
a Fc(3.1)135 b(Literature)46 b(Researc)l(h)144 2394 y
Fg(First)c(the)g(a)m(v)-5 b(ailable)44 b(literature)f(will)f(b)s(e)f
(researc)m(hed.)75 b(The)41 b(goal)i(is)f(to)g(ha)m(v)m(e)h(a)f(broad)f
(under-)144 2507 y(standing)g(and)g(kno)m(wledge)i(of)f
(state-of-the-art)i(in)d(mac)m(hine)i(learning,)i(deep)c(neural)g(net)m
(w)m(ork)144 2620 y(arc)m(hitectures,)32 b(h)m(uman)e(h)m(umor)f(and)h
(h)m(uman)g(p)s(erception.)144 2814 y
SDict begin H.S end
 144 2814 a 144
2814 a
SDict begin 13.6 H.A end
 144 2814 a 144 2814 a
SDict begin [/View [/XYZ H.V]/Dest (section.3.2) cvn /DEST pdfmark
end
 144 2814 a 141 3019 a Fc(3.2)135
b(Pre-Pro)t(cessing)144 3222 y Fg(In)33 b(this)h(step)g(the)g(ground)f
(truth)g(will)h(b)s(e)g(created:)49 b(A)34 b(data)g(set)h(of)f(sev)m
(eral)h(thousand)e(carto)s(ons)144 3335 y(exists,)d(but)f(these)h
(carto)s(ons)f(need)g(to)h(b)s(e)f(pre-pro)s(cessed)f(in)h(suc)m(h)g(a)
h(w)m(a)m(y)g(that)g(a)f(neural)g(net)m(w)m(ork)144 3448
y(can)h(b)s(e)f(trained)h(on)g(this)g(data)g(set:)41
b(The)30 b(punc)m(hlines)f(ha)m(v)m(e)i(to)f(b)s(e)f(extracted,)j(the)e
(pictures)g(need)144 3561 y(to)k(b)s(e)e(normalized)i(and)e(bad)g
(examples)i(\034ltered.)48 b(A)m(dditionally)35 b(man)m(ual)e(lab)s
(elling)h(of)f(carto)s(ons)144 3674 y(is)27 b(necessary:)39
b(F)-8 b(or)27 b(the)f(h)m(umor)g(classi\034cation)i(the)f(funniness)d
(of)j(a)g(carto)s(on)g(has)f(to)h(b)s(e)f(annotated)141
3787 y(with)32 b(a)h(n)m(umerical)h(v)-5 b(alue)33 b(and)f(for)h(the)g
(carto)s(on)g(classi\034cation)i(task)e(a)h(binary)e(n-tuple)g(that)h
(de-)144 3900 y(scrib)s(es)d(whic)m(h)g(t)m(yp)s(e)g(of)h(carto)s(on)g
(is)f(illustrated.)144 4093 y
SDict begin H.S end
 144 4093 a 144 4093 a
SDict begin 13.6 H.A end
 144
4093 a 144 4093 a
SDict begin [/View [/XYZ H.V]/Dest (section.3.3) cvn /DEST pdfmark
end
 144 4093 a 141 4299 a Fc(3.3)135 b(Humor)45
b(Classi\034cation)144 4502 y Fg(Giv)m(en)35 b(this)f(data)h(set,)h
(based)d(on)h(previous)g(classi\034cations,)j(the)d(goal)i(is)e(to)h
(predict)f(ho)m(w)g(funn)m(y)144 4615 y(a)d(previously)e(unseen)h
(carto)s(on)g(is.)41 b(This)29 b(is)h(done)g(b)m(y)g(training)h(m)m
(ultiple)f(mac)m(hine)h(learning)f(clas-)144 4728 y(si\034ers.)46
b(Imp)s(ortan)m(t)33 b(to)g(note)g(is)f(the)h(fact,)h(that)f(h)m(umor)f
(is)g(sub)s(jectiv)m(e,)i(so)f(the)f(generated)i(mo)s(del)144
4841 y(migh)m(t)d(only)g(b)s(e)e(applicable)j(for)e(individuals.)p
0 TeXcolorgray 3571 5381 a(4)p 0 TeXcolorgray eop end
%%Page: 5 9
TeXDict begin 5 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 2859 43 a Fg(3.4.)82 b(Carto)s(on)31
b(Classi\034cation)p 144 80 3820 4 v 0 TeXcolorgray 144
333 a(F)-8 b(or)25 b(the)g(visual)f(comp)s(onen)m(t)h(of)g(a)f(carto)s
(on,)j(a)e(con)m(v)m(olutional)i(neural)d(net)m(w)m(ork)h(will)g(b)s(e)
e(trained,)j(as)144 446 y(they)31 b(ha)m(v)m(e)g(b)s(een)e(applied)h(v)
m(ery)h(successfully)f(in)g(v)-5 b(arious)30 b(image)i
(classi\034cation)g(tasks)f([)3243 446 y
SDict begin H.S end
 3243 446 a 0
TeXcolorgray Fg(5)p 0 TeXcolorgray 3288 389 a
SDict begin H.R end
 3288 389
a 3288 446 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.dogsvscats) cvn H.B /ANN pdfmark end
 3288 446 a Fg(].)41 b(If)30 b(and)144 559
y(ho)m(w)h(deep)f(neural)g(net)m(w)m(orks)h(ha)m(v)m(e)h(to)f(b)s(e)f
(adapted)h(to)g(w)m(ork)g(with)f(carto)s(ons)h(will)g(b)s(e)f(researc)m
(hed)144 672 y(during)e(the)h(thesis.)40 b(P)m(ossibly)29
b(a)h(generativ)m(e)h(adv)m(ersarial)f(approac)m(h)f(ma)m(y)g(b)s(e)f
(implemen)m(ted.)41 b([)3500 672 y
SDict begin H.S end
 3500 672 a 0 TeXcolorgray
Fg(10)p 0 TeXcolorgray 3591 615 a
SDict begin H.R end
 3591 615 a 3591 672
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.gan) cvn H.B /ANN pdfmark end
 3591 672 a Fg(])141 954 y(A)g(punc)m(hline)f(analysis)i(will)f(b)s(e)
g(implemen)m(ted)g(using)g(recurren)m(t)g(neural)g(net)m(w)m(orks)h
(and)e(other)144 1067 y(natural)28 b(language)i(pro)s(cessing)d(tec)m
(hniques.)41 b(Prime)28 b(candidate)g(are)h(Long)f(Short-T)-8
b(erm)27 b(Memory)144 1180 y(net)m(w)m(orks.)60 b(Here)36
b(sev)m(eral)i(di\033eren)m(t)f(v)-5 b(ariations)37 b(exist)h(with)e
(widely)g(di\033eren)m(t)h(com)m(binations)g(of)144 1293
y(activ)-5 b(ation)37 b(functions)d(and)g(la)m(y)m(ers)i(\(TODO)f
(REF\).)g(The)f(goal)i(is)f(to)h(\034nd)d(the)h(b)s(est)h(p)s
(erforming)144 1406 y(net)m(w)m(ork)e(for)g(the)f(giv)m(en)i(task.)47
b(Other)32 b(tec)m(hniques)h(will)g(b)s(e)f(considered)g(as)h(w)m(ell,)
h(suc)m(h)e(as)g(Gated)144 1519 y(Recurren)m(t)f(Units)f(\(TODO)g
(REF\).)144 1688 y(Finally)38 b(b)s(oth)f(neural)g(net)m(w)m(orks)h
(are)g(merged)f(together)i(using)e(another,)i(p)s(ossibly)e(more)g
(tradi-)144 1801 y(tional,)32 b(mac)m(hine)f(learning)g(classi\034er.)
144 1995 y
SDict begin H.S end
 144 1995 a 144 1995 a
SDict begin 13.6 H.A end
 144 1995 a 144 1995
a
SDict begin [/View [/XYZ H.V]/Dest (section.3.4) cvn /DEST pdfmark
end
 144 1995 a 141 2200 a Fc(3.4)135 b(Carto)t(on)46 b(Classi\034cation)
144 2403 y Fg(Similar)34 b(to)h(the)g(h)m(umor)e(classi\034cation)j
(approac)m(h,)g(a)e(deep)g(neural)g(net)m(w)m(ork)h(that)g
(classi\034es)g(car-)144 2516 y(to)s(ons)g(b)m(y)f(di\033eren)m(t)h
(categories)i(will)d(b)s(e)g(trained.)53 b(The)34 b(question)g(remains)
g(ho)m(w)h(to)g(handle)f(car-)144 2629 y(to)s(ons)43
b(prop)s(erly)e(using)h(deep)g(neural)g(net)m(w)m(orks,)k(additionally)
d(data)g(augmen)m(ting)h(tec)m(hniques)144 2742 y(migh)m(t)31
b(b)s(e)f(implemen)m(ted)h(to)g(a)m(v)m(oid)h(o)m(v)m(er\034tting.)144
3024 y(Gary)26 b(Larson)f(has)g(man)m(y)g(reo)s(ccurring)g(themes,)i
(suc)m(h)e(as)h(di\033eren)m(t)f(settings)i(\(culture)e(dish,)h(stone)
144 3137 y(age,)h(outer)e(space,)h(etc.\),)i(reo)s(ccurring)c(animals)h
(\(dogs,)h(cats,)h(horses,)f(etc.\))40 b(or)24 b(other)h(phenomena)133
3250 y(\(go)s(d)c(app)s(earing,)i(marriage)f(con\035ict,)h(etc.\).)40
b(This)19 b(mak)m(es)j(training)f(a)g(deep)g(neural)f(net)m(w)m(ork)i
(whic)m(h)144 3363 y(is)37 b(able)h(to)f(classify)h(these)f(categories)
j(an)d(in)m(teresting)h(task.)61 b(On)36 b(the)h(quest)g(to)h(b)s(est)e
(classi\034er,)144 3476 y(\034rst)42 b(di\033eren)m(t)h(con)m(v)m
(olutional)i(neural)d(net)m(w)m(orks)h(will)g(b)s(e)f(applied)g(and)g
(secondly)g(Generativ)m(e)141 3589 y(A)m(dv)m(ersarial)32
b(Net)m(w)m(orks)f(will)g(also)g(b)s(e)f(implemen)m(ted.)41
b(\(TODO)30 b(REF\))144 3692 y
SDict begin H.S end
 144 3692 a 144 3692 a
SDict begin 13.6 H.A end

144 3692 a 144 3692 a
SDict begin [/View [/XYZ H.V]/Dest (section.3.5) cvn /DEST pdfmark
end
 144 3692 a 141 3875 a Fc(3.5)135
b(Ev)-7 b(aluation)144 4078 y Fg(During)27 b(the)h(ev)-5
b(aluation,)30 b(the)d(trained)g(mo)s(dels)h(are)f(applied)h(to)g(the)f
(test)i(set)e(\(a)i(set)f(of)f(previously)144 4191 y(unkno)m(wn)h
(data\).)41 b(The)29 b(h)m(umor)g(classi\034cation)i(task)f(has)f(one)g
(out)h(of)f(man)m(y)h(c)m(hoices)h(p)s(er)d(carto)s(on,)144
4304 y(hence)f(it)g(is)f(considered)g(a)h(m)m(ulticlass)h
(classi\034cation)g(task,)g(on)e(the)h(other)g(hand)e(the)h(carto)s(on)
h(clas-)144 4417 y(si\034cation)f(task)f(has)g(man)m(y)f(out)h(of)g
(man)m(y)g(c)m(hoices)h(p)s(er)e(carto)s(on)i(\(since)f(a)g(carto)s(on)
g(can)g(con)m(tain)i(for)144 4530 y(example)22 b(a)g(cat)g(and)f(a)h
(dog\),)i(hence)d(it)h(is)g(considered)f(a)g(m)m(ultilab)s(el)i(m)m
(ulticlass)f(classi\034cation)i(task.)144 4812 y(Ev)-5
b(aluation)32 b(will)g(b)s(e)f(mostly)h(based)f(on)g(a)h(confusion)f
(matrix)h(in)f(order)g(to)h(calculate)i(an)d(a)m(v)m(erage)144
4925 y(F-score)f([)485 4925 y
SDict begin H.S end
 485 4925 a 0 TeXcolorgray
Fg(9)p 0 TeXcolorgray 531 4868 a
SDict begin H.R end
 531 4868 a 531 4925
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Powers2008EvaluationFP) cvn H.B /ANN pdfmark end
 531 4925 a Fg(].)41 b(If)28 b(the)h(classes)h(are)g(not)f(ev)m(enly)h
(distributed)e(sp)s(ecial)i(considerations)g(are)f(necessary)-8
b(.)141 5038 y(A)m(dditionally)31 b(R)m(OC)g(curv)m(es)f(ma)m(y)h(b)s
(e)f(also)h(used)f(for)g(ev)-5 b(aluation)32 b([)2485
5038 y
SDict begin H.S end
 2485 5038 a 0 TeXcolorgray Fg(7)p 0 TeXcolorgray
2530 4981 a
SDict begin H.R end
 2530 4981 a 2530 5038 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Hand2001) cvn H.B /ANN pdfmark end
 2530 5038 a Fg(].)p
0 TeXcolorgray 3918 5381 a(5)p 0 TeXcolorgray eop end
%%Page: 6 10
TeXDict begin 6 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.4) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2948 1197 a Fe(CHAPTER)3722 1197 y
 currentpoint currentpoint translate 3.26875 3.26875 scale neg exch
neg exch translate
 3722
1197 a Fd(4)3722 1197 y
 currentpoint currentpoint translate 1 3.26875 div 1 3.26875 div scale
neg exch neg exch translate
 3722 1197 a 4137 1197 957 426
v 0 TeXcolorgray 0 TeXcolorgray 1988 1653 a Fi(State)78
b(of)g(the)g(Art)141 2155 y Fg(A)m(t)31 b(the)g(time)g(of)f(writing)h
(this)f(prop)s(osal)g(there)g(has)h(b)s(een)e(little)j(researc)m(h)f
(in)f(the)h(area)g(of)g(compu-)144 2268 y(tational)f(h)m(umor)d(using)h
(deep)f(learning.)40 b(Deep)29 b(Learning)f(of)g(A)m(udio)g(and)f
(Language)i(F)-8 b(eatures)30 b(for)144 2381 y(Humor)c(Prediction)i([)
909 2381 y
SDict begin H.S end
 909 2381 a 0 TeXcolorgray Fg(3)p 0 TeXcolorgray
954 2323 a
SDict begin H.R end
 954 2323 a 954 2381 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Bertero2016DeepLO) cvn H.B /ANN pdfmark end
 954 2381 a Fg(])f(is)g(the)g(only)g
(notable)h(pap)s(er)d(in)i(this)f(area,)j(whic)m(h)e(uses)f(deep)g
(learning)i(for)144 2494 y(punc)m(hline)g(detection)i(based)e(on)g
(dialogue)h(and)f(audio)h(of)f(a)h(US)f(sitcom.)41 b(This)27
b(approac)m(h)i(ignores)144 2606 y(the)c(visual)f(comp)s(onen)m(t)h(en)
m(tirely)g(and)f(also)h(do)s(es)f(not)h(use)f(Long)g(Short-T)-8
b(erm)24 b(Memory)h(net)m(w)m(orks.)144 2889 y(F)-8 b(or)33
b(image)h(classi\034cation)h(v)-5 b(arious)33 b(t)m(yp)s(es)f(of)h(con)
m(v)m(olutional)i(neural)e(net)m(w)m(orks)g(are)g(state-of-the-)144
3002 y(art)g([)318 3002 y
SDict begin H.S end
 318 3002 a 0 TeXcolorgray Fg(5)p
0 TeXcolorgray 364 2944 a
SDict begin H.R end
 364 2944 a 364 3002 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.dogsvscats) cvn H.B /ANN pdfmark end
 364 3002
a Fg(].)47 b(Recurren)m(t)32 b(Long)h(Short-T)-8 b(erm)32
b(Memory)h(net)m(w)m(orks)g(are)f(b)s(eing)g(used)g(v)m(ery)h
(successfully)144 3115 y(for)d(v)-5 b(arious)31 b(natural)f(language)i
(pro)s(cessing)e(tasks)h(as)f(w)m(ell)i([)2282 3115 y
SDict begin H.S end

2282 3115 a 0 TeXcolorgray Fg(8)p 0 TeXcolorgray 2327
3057 a
SDict begin H.R end
 2327 3057 a 2327 3115 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.reviewRNN) cvn H.B /ANN pdfmark end
 2327 3115 a Fg(].)144
3397 y(Previous)e(approac)m(hes)h(of)f(computational)i(h)m(umor)d
(include)h(sarcasm)h([)2657 3397 y
SDict begin H.S end
 2657 3397 a 0 TeXcolorgray
Fg(2)p 0 TeXcolorgray 2702 3340 a
SDict begin H.R end
 2702 3340 a 2702 3397
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Bamman2015ContextualizedSD) cvn H.B /ANN pdfmark end
 2702 3397 a Fg(],)g(jok)m(e)g(detection)h([)3391 3397
y
SDict begin H.S end
 3391 3397 a 0 TeXcolorgray Fg(11)p 0 TeXcolorgray 3482
3340 a
SDict begin H.R end
 3482 3340 a 3482 3397 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Yang2015HumorRA) cvn H.B /ANN pdfmark end
 3482 3397 a Fg(])e(or)144
3510 y(rule-based)37 b(h)m(umor)f([)903 3510 y
SDict begin H.S end
 903 3510
a 0 TeXcolorgray Fg(1)p 0 TeXcolorgray 949 3452 a
SDict begin H.R end
 949
3452 a 949 3510 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.HumoristBot) cvn H.B /ANN pdfmark end
 949 3510 a Fg(].)61 b(All)37 b(of)g(these)h(attempts)
g(treated)g(h)m(umor)e(as)h(isolated)i(c)m(h)m(unks)e(of)g(text,)141
3623 y(while)30 b(also)i(ignoring)e(the)h(visual)f(comp)s(onen)m(t)h
(en)m(tirely)-8 b(.)144 3721 y
SDict begin H.S end
 144 3721 a 144 3721 a
SDict begin 13.6 H.A end

144 3721 a 144 3721 a
SDict begin [/View [/XYZ H.V]/Dest (section.4.1) cvn /DEST pdfmark
end
 144 3721 a 139 3909 a Fc(4.1)136
b(Neural)45 b(Net)l(w)l(ork)i(T)-11 b(op)t(ologies)144
4112 y Fg(P)m(art)27 b(of)g(the)f(reason)h(wh)m(y)f(neural)g(net)m(w)m
(orks)h(are)g(so)f(p)s(o)m(w)m(erful,)h(esp)s(ecially)h(deep)e(neural)g
(net)m(w)m(orks,)144 4225 y(stems)31 b(from)f(their)g(\035exibilit)m(y)
-8 b(.)42 b(They)30 b(can)h(adapt)f(to)h(lots)h(of)e(di\033eren)m(t)h
(domains.)144 4394 y(Belo)m(w)h(is)e(an)h(illustration)g(of)g(a)f
(simple)h(fully)f(connected)h(feed)f(forw)m(ard)g(neural)g(net)m(w)m
(ork.)p 0 TeXcolorgray 3571 5381 a(6)p 0 TeXcolorgray
eop end
%%Page: 7 11
TeXDict begin 7 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 2662 43 a Fg(4.1.)83 b(Neural)30 b(Net)m(w)m(ork)i(T)
-8 b(op)s(ologies)p 144 80 3820 4 v 0 TeXcolorgray 0
TeXcolorgray 144 2044 a
SDict begin H.S end
 144 2044 a 144 2044 a
SDict begin 13.6 H.A end
 144 2044
a 144 2044 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.4) cvn /DEST pdfmark
end
 144 2044 a 1152 3099 a
 currentpoint currentpoint translate .5 .5 scale neg exch neg exch
translate
 1152 3099 a 1182
2100 a
tx@Dict begin  { 0.0 -120.2955 } PutCoor PutBegin  end
 1182 2100 a -18 x Fg(Input)29 b(La)m(y)m(er)1182
2100 y
tx@Dict begin  PutEnd  end
 1182 2100 a 1182 2100 a
tx@Dict begin  { 284.52744 -120.2955 } PutCoor PutBegin  end
 1182 2100 a -18 x Fg(Output)g(La)m(y)m
(er)1182 2100 y
tx@Dict begin  PutEnd  end
 1182 2100 a 1182 2100 a
tx@Dict begin  { 147.95418 -120.2955 } PutCoor PutBegin  end
 1182 2100 a -18
x Fg(Hidden)h(La)m(y)m(ers)1182 2100 y
tx@Dict begin  PutEnd  end
 1182 2100 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 97.53322 45.25972
76.35907   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 44.59807 45.25972
76.35907   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -8.3375 45.25972 76.35907
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -66.56628 45.25972
76.35907   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 97.53322 45.25972
23.42392   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 44.59807 45.25972
23.42392   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -8.3375 45.25972 23.42392
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -66.56628 45.25972
23.42392   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 97.53322 45.25972
-34.80486   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 44.59807 45.25972
-34.80486   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -8.3375 45.25972 -34.80486
  /Lineto /lineto load def 0  setlinejoin false  NArray n 0 eq not
{ n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW mul add dup
1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy /y1 ED /x1
ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha
cos arrowlength mul add y1 Alpha sin arrowlength mul add /n n 1 sub
def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha
y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos 0.5  abs
def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha cos ArrowPos
mul add y1 Alpha sin ArrowPos mul add ArrowInside pop pop } repeat
}{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add div }{0.5 }
ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x2 x1 sub
ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside pop pop
} repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2 sub def
n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop } if   gsave
1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 82.31436 -66.56628 45.25972
-34.80486   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 102.82686 114.0758
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 44.59807 114.0758
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -13.6307 114.0758
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -66.56628 114.0758
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 102.82686 114.0758
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 44.59807 114.0758
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -13.6307 114.0758
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -66.56628 114.0758
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 102.82686 114.0758
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 44.59807 114.0758
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -13.6307 114.0758
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -66.56628 114.0758
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 102.82686 114.0758
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 44.59807 114.0758
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -13.6307 114.0758
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 151.13045 -66.56628 114.0758
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 102.82686 182.89145
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 44.59807 182.89145
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -13.6307 182.89145
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -66.56628 182.89145
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 102.82686 182.89145
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 44.59807 182.89145
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -13.6307 182.89145
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -71.85992 182.89145
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 102.82686 182.89145
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 44.59807 182.89145
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -13.6307 182.89145
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -71.85992 182.89145
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 102.82686 182.89145
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 44.59807 182.89145
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -13.6307 182.89145
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 219.94652 -66.56628 182.89145
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 168.59908 44.8629  0
true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 81.65271 251.70752
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 23.42392 251.70752
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 -34.80486 251.70752
102.82686   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 81.65271 251.70752
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 23.42392 251.70752
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 -34.80486 251.70752
44.59807   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 23.42392 251.70752
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 -34.80486 251.70752
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 81.65271 251.70752
-13.6307   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 81.65271 251.70752
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 23.42392 251.70752
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def /ArrowInside { } def  [ 288.76218 -34.80486 251.70752
-66.56628   /Lineto /lineto load def 0  setlinejoin false  NArray n
0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 1.5 2.  CLW
mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength exch def 4 copy
/y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def ArrowA
x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul add /n
n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5  1 gt
{ /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.13791 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 305.17233 79.0061  0
true Ellipse  closepath  gsave 0.86274 0.56862 0.27843  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 305.17233 22.10062  0
true Ellipse  closepath  gsave 0.86274 0.56862 0.27843  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 305.17233 -34.80486 
0 true Ellipse  closepath  gsave 0.86274 0.56862 0.27843  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 236.8855 -68.94806  0
true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 236.8855 101.76796  0
true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 236.8855 44.8629  0 true
Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1. .setopacityalpha
 fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 236.8855 -12.04257  0
true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 168.59908 101.76796 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 168.59908 -12.04257 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 168.59908 -68.94806 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 32.02583 22.10062  0
true Ellipse  closepath  gsave 0.51372 0.78039 0.54117  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 32.02583 -34.80486  0
true Ellipse  closepath  gsave 0.51372 0.78039 0.54117  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 32.02583 79.0061  0 true
Ellipse  closepath  gsave 0.51372 0.78039 0.54117  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 100.31267 101.76796 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 100.31267 44.8629  0
true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor  1.
.setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 100.31267 -12.04257 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  1.13791 SLW 0  setgray   0 360 18.52753 18.52753
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 100.31267 -68.94806 
0 true Ellipse  closepath  gsave 0.7098 0.7098 0.7098  setrgbcolor
 1. .setopacityalpha  fill  grestore gsave 1.13791 SLW 0  setgray 
1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1152 3099 a
 currentpoint currentpoint translate 1 .5 div 1 .5 div scale neg exch
neg exch translate
 1152 3099 a 0 TeXcolorgray 705 3261 a Fg(Figure)h(4.1:)42
b(F)-8 b(ully)31 b(Connected)g(F)-8 b(eed)31 b(F)-8 b(orw)m(ard)31
b(Neural)g(Net)m(w)m(ork)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3918 5381 a(7)p 0 TeXcolorgray eop end
%%Page: 8 12
TeXDict begin 8 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter.5) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2948 1197 a Fe(CHAPTER)3722 1197 y
 currentpoint currentpoint translate 3.26875 3.26875 scale neg exch
neg exch translate
 3722
1197 a Fd(5)3722 1197 y
 currentpoint currentpoint translate 1 3.26875 div 1 3.26875 div scale
neg exch neg exch translate
 3722 1197 a 4137 1197 957 426
v 0 TeXcolorgray 0 TeXcolorgray 1012 1653 a Fi(Relation)78
b(to)g(Master)g(Study)141 2155 y Fg(The)29 b(master)i(study)e
(Arti\034cial)i(In)m(telligence)i(and)d(Game)h(Engineering)f(has)g(sev)
m(eral)h(courses)f(that)144 2268 y(co)m(v)m(er)i(the)f(topic)g(of)g
(mac)m(hine-)g(and)f(deep)g(learning:)p 0 TeXcolorgray
280 2535 a Fb(\017)p 0 TeXcolorgray 46 w Fg(183.663,)k(VU,)d(Deep)g
(Learning)f(for)g(Visual)h(Computing)p 0 TeXcolorgray
280 2723 a Fb(\017)p 0 TeXcolorgray 46 w Fg(184.702,)j(VU,)d(Mac)m
(hine)g(Learning)p 0 TeXcolorgray 280 2911 a Fb(\017)p
0 TeXcolorgray 46 w Fg(188.501,)j(VU,)d(Similarit)m(y)g(Mo)s(deling)g
(1)p 0 TeXcolorgray 280 3099 a Fb(\017)p 0 TeXcolorgray
46 w Fg(188.498,)j(VU,)d(Similarit)m(y)g(Mo)s(deling)g(2)p
0 TeXcolorgray 280 3288 a Fb(\017)p 0 TeXcolorgray 46
w Fg(188.980,)j(VU,)d(A)m(dv)-5 b(anced)30 b(Information)h(Retriev)-5
b(al)p 0 TeXcolorgray 280 3476 a Fb(\017)p 0 TeXcolorgray
46 w Fg(186.143,)34 b(UE,)d(Informationsvisualisierung)p
0 TeXcolorgray 280 3664 a Fb(\017)p 0 TeXcolorgray 46
w Fg(186.141,)j(V)m(O,)d(Informationsvisualisierung)p
0 TeXcolorgray 3571 5381 a(8)p 0 TeXcolorgray eop end
%%Page: 9 13
TeXDict begin 9 12 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (chapter*.5) cvn /DEST pdfmark end
 144 242 a 0 TeXcolorgray 0
TeXcolorgray 2323 1012 a Fi(Bibliograph)-6 b(y)144 1384
y
SDict begin H.S end
 144 1384 a 144 1384 a
SDict begin 13.6 H.A end
 144 1384 a 144 1384 a
SDict begin [/View [/XYZ H.V]/Dest (section*.6) cvn /DEST pdfmark end
 144 1384
a 144 1403 a
SDict begin H.S end
 144 1403 a 144 1403 a
SDict begin 13.6 H.A end
 144 1403 a 144 1403
a
SDict begin [/View [/XYZ H.V]/Dest (cite.HumoristBot) cvn /DEST pdfmark
end
 144 1403 a 0 TeXcolorgray 111 x Fg([1])p 0 TeXcolorgray
92 w(A.)27 b(A)m(ugello,)i(G.)d(Saccone,)j(S.)d(Gaglio,)j(and)d(G.)g
(Pilato.)36 b(Humorist)26 b(b)s(ot:)38 b(Bringing)27
b(computa-)331 1627 y(tional)i(h)m(umour)d(in)i(a)g(c)m(hat-b)s(ot)h
(system.)36 b(In)27 b Fa(2008)32 b(International)h(Confer)-5
b(enc)g(e)31 b(on)g(Complex,)326 1740 y(Intel)7 b(ligent)33
b(and)h(Softwar)-5 b(e)34 b(Intensive)f(Systems)p Fg(,)e(pages)g
(703\025708,)j(Marc)m(h)d(2008.)144 1795 y
SDict begin H.S end
 144 1795 a
144 1795 a
SDict begin 13.6 H.A end
 144 1795 a 144 1795 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Bamman2015ContextualizedSD)
cvn /DEST pdfmark end
 144 1795 a 0 TeXcolorgray
133 x Fg([2])p 0 TeXcolorgray 92 w(D.)40 b(Bamman)g(and)e(N.)i(A.)g
(Smith.)67 b(Con)m(textualized)41 b(sarcasm)f(detection)h(on)e(t)m
(witter.)69 b(In)326 2041 y Fa(ICWSM)p Fg(,)30 b(2015.)144
2096 y
SDict begin H.S end
 144 2096 a 144 2096 a
SDict begin 13.6 H.A end
 144 2096 a 144 2096 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Bertero2016DeepLO) cvn /DEST
pdfmark end
 144
2096 a 0 TeXcolorgray 133 x Fg([3])p 0 TeXcolorgray 92
w(D.)35 b(Bertero)h(and)e(P)-8 b(.)35 b(F)-8 b(ung.)53
b(Deep)35 b(learning)g(of)g(audio)f(and)g(language)i(features)f(for)f
(h)m(umor)331 2342 y(prediction.)41 b(In)29 b Fa(LREC)p
Fg(,)i(2016.)144 2397 y
SDict begin H.S end
 144 2397 a 144 2397 a
SDict begin 13.6 H.A end
 144 2397
a 144 2397 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Cichy2016) cvn /DEST pdfmark
end
 144 2397 a 0 TeXcolorgray 133 x Fg([4])p
0 TeXcolorgray 92 w(R.)37 b(M.)h(Cic)m(h)m(y)-8 b(,)40
b(A.)d(Khosla,)j(D.)d(P)m(an)m(tazis,)42 b(A.)37 b(T)-8
b(orralba,)39 b(and)e(A.)g(Oliv)-5 b(a.)62 b(Comparison)36
b(of)331 2643 y(deep)c(neural)g(net)m(w)m(orks)g(to)h(spatio-temp)s
(oral)h(cortical)g(dynamics)e(of)g(h)m(uman)f(visual)i(ob)s(ject)331
2756 y(recognition)39 b(rev)m(eals)f(hierarc)m(hical)h(corresp)s
(ondence.)60 b Fa(Scienti\034c)38 b(R)-5 b(ep)g(orts)p
Fg(,)42 b(6:27755)e(EP)c(\025,)329 2869 y(Jun)29 b(2016.)42
b(Article.)144 2906 y
SDict begin H.S end
 144 2906 a 144 2906 a
SDict begin 13.6 H.A end
 144 2906
a 144 2906 a
SDict begin [/View [/XYZ H.V]/Dest (cite.dogsvscats) cvn /DEST pdfmark
end
 144 2906 a 0 TeXcolorgray 151 x Fg([5])p
0 TeXcolorgray 92 w(D.)29 b(Ciregan,)h(U.)f(Meier,)i(and)d(J.)g(Sc)m
(hmidh)m(ub)s(er.)36 b(Multi-column)30 b(deep)f(neural)f(net)m(w)m
(orks)i(for)331 3170 y(image)39 b(classi\034cation.)64
b(In)37 b Fa(2012)k(IEEE)e(Confer)-5 b(enc)g(e)40 b(on)g(Computer)h(V)m
(ision)d(and)j(Pattern)326 3283 y(R)-5 b(e)g(c)g(o)g(gnition)p
Fg(,)33 b(pages)e(3642\0253649,)j(June)c(2012.)144 3338
y
SDict begin H.S end
 144 3338 a 144 3338 a
SDict begin 13.6 H.A end
 144 3338 a 144 3338 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Druzhkov2016) cvn /DEST pdfmark
end
 144 3338
a 0 TeXcolorgray 133 x Fg([6])p 0 TeXcolorgray 92 w(P)-8
b(.)44 b(N.)f(Druzhk)m(o)m(v)h(and)f(V.)g(D.)h(Kustik)m(o)m(v)-5
b(a.)80 b(A)43 b(surv)m(ey)g(of)g(deep)g(learning)h(metho)s(ds)e(and)
331 3584 y(soft)m(w)m(are)g(to)s(ols)f(for)f(image)i(classi\034cation)h
(and)c(ob)s(ject)i(detection.)73 b Fa(Pattern)42 b(R)-5
b(e)g(c)g(o)g(gnition)324 3697 y(and)34 b(Image)f(A)-5
b(nalysis)p Fg(,)31 b(26\(1\):9\02515,)k(Jan)30 b(2016.)144
3757 y
SDict begin H.S end
 144 3757 a 144 3757 a
SDict begin 13.6 H.A end
 144 3757 a 144 3757 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Hand2001) cvn /DEST pdfmark
end
 144
3757 a 0 TeXcolorgray 128 x Fg([7])p 0 TeXcolorgray 92
w(D.)h(J.)g(Hand)g(and)f(R.)h(J.)f(Till.)43 b(A)31 b(simple)f
(generalisation)j(of)e(the)g(area)h(under)d(the)i(ro)s(c)g(curv)m(e)331
3998 y(for)38 b(m)m(ultiple)i(class)f(classi\034cation)i(problems.)65
b Fa(Machine)40 b(L)-5 b(e)g(arning)p Fg(,)42 b(45\(2\):171\025186,)47
b(No)m(v)329 4111 y(2001.)144 4148 y
SDict begin H.S end
 144 4148 a 144 4148
a
SDict begin 13.6 H.A end
 144 4148 a 144 4148 a
SDict begin [/View [/XYZ H.V]/Dest (cite.reviewRNN) cvn /DEST pdfmark
end
 144 4148 a 0 TeXcolorgray 151
x Fg([8])p 0 TeXcolorgray 92 w(Z.)33 b(C.)g(Lipton.)49
b(A)33 b(critical)i(review)e(of)g(recurren)m(t)g(neural)g(net)m(w)m
(orks)h(for)f(sequence)g(learning.)320 4412 y Fa(CoRR)p
Fg(,)f(abs/1506.00019,)j(2015.)144 4472 y
SDict begin H.S end
 144 4472 a
144 4472 a
SDict begin 13.6 H.A end
 144 4472 a 144 4472 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Powers2008EvaluationFP) cvn
/DEST pdfmark end
 144 4472 a 0 TeXcolorgray
128 x Fg([9])p 0 TeXcolorgray 92 w(D.)c(M.)f(W.)h(P)m(o)m(w)m(ers.)42
b(Ev)-5 b(aluation:)41 b(F)-8 b(rom)31 b(precision,)g(recall)g(and)f
(f-factor)h(to)g(ro)s(c,)f(informed-)331 4713 y(ness,)g(mark)m(edness)g
(and)g(correlation.)42 b(2008.)144 4768 y
SDict begin H.S end
 144 4768 a
144 4768 a
SDict begin 13.6 H.A end
 144 4768 a 144 4768 a
SDict begin [/View [/XYZ H.V]/Dest (cite.gan) cvn /DEST pdfmark end
 144 4768 a 0 TeXcolorgray
133 x Fg([10])p 0 TeXcolorgray 47 w(T.)31 b(Salimans,)h(I.)f(J.)h(Go)s
(o)s(dfello)m(w,)g(W.)g(Zarem)m(ba,)g(V.)g(Cheung,)f(A.)g(Radford,)g
(and)g(X.)h(Chen.)331 5014 y(Impro)m(v)m(ed)e(tec)m(hniques)h(for)f
(training)h(gans.)41 b Fa(CoRR)p Fg(,)32 b(abs/1606.03498,)j(2016.)p
0 TeXcolorgray 3571 5381 a(9)p 0 TeXcolorgray eop end
%%Page: 10 14
TeXDict begin 10 13 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 136
-44 a
SDict begin H.S end
 136 -44 a 136 -44 a
SDict begin H.R end
 136 -44 a 136 -44 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 136 -44
a 0 TeXcolorgray 0 TeXcolorgray 144 242 a
SDict begin H.S end
 144 242 a 144
242 a
SDict begin 13.6 H.A end
 144 242 a 144 242 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Yang2015HumorRA) cvn /DEST
pdfmark end
 144 242 a 0 TeXcolorgray 91
x Fg([11])p 0 TeXcolorgray 47 w(D.)28 b(Y)-8 b(ang,)29
b(A.)f(La)m(vie,)h(C.)f(Dy)m(er,)h(and)d(E.)i(H.)g(Ho)m(vy)-8
b(.)37 b(Humor)27 b(recognition)i(and)d(h)m(umor)h(anc)m(hor)331
446 y(extraction.)42 b(In)30 b Fa(EMNLP)p Fg(,)f(2015.)p
0 TeXcolorgray 3526 5381 a(10)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
